create or replace PACKAGE BODY CUST_DEP_BATCH_PKG AS
/*********************************************************** 
This package BODY has procedures and functions related to the batch
job table

created : 09/27/2017 sxh487 CCN project
revisions: 
************************************************************/

PROCEDURE DAILY_NET_BAL_CLOSE_DATE_UPD
/******************************************************************************
DAILY_NET_BAL_CLOSE_DATE_UPD -  This procedure is intended to update the record in the CUSTOMER_DEPOSIT_DETAILS which net Balance is zero.

Created  : 01/15/2019 sxg151 CCN Team....
         : ASP-1187- Update Close Date on all transactions that net to zero under any given account
Modified : 02/12/2019 pxa852 CCN Project Team...
           Modified code to replace old table with new table that was created as part of new data model
        : 03/20/2019 ASP-1207 mxs216 CCN Project....
          Updated varibale declaration without referencing BATCH_JOB table columns.
*******************************************************************************/
IS
    V_BATCH_NUMBER               NUMBER;
    V_TRANS_STATUS               VARCHAR2(20) := 'SUCCESSFUL';
    V_CUSTOMER_NET_BALANCE       CUSTOMER_DEPOSIT_TRANSACTION_DTL.CUSTOMER_NET_BALANCE%TYPE;
    V_COUNT                      NUMBER:=0;

    CURSOR main_cursor IS
        SELECT CUSTOMER_ACCOUNT_NUMBER,
                         TRAN_TIMESTAMP
                    FROM CUSTOMER_DEPOSIT_TRANSACTION_DTL
                   WHERE CUSTOMER_NET_BALANCE = 0
                     AND CLOSED_DATE IS NULL;

BEGIN
    CCN_BATCH_PKG.INSERT_BATCH_JOB('NET_BAL_CLOSE_DT_UPD',V_BATCH_NUMBER);
    CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;

      FOR rec IN main_cursor LOOP
          V_COUNT:= V_COUNT+1;
          BEGIN
              UPDATE CUSTOMER_DEPOSIT_TRANSACTION_DTL
                 SET CLOSED_DATE = TRUNC(SYSDATE),
                     NOTES       = NVL(NOTES, 'UPDATED BY BATCH JOB')
               WHERE CUSTOMER_ACCOUNT_NUMBER = rec.CUSTOMER_ACCOUNT_NUMBER
                 AND TRAN_TIMESTAMP          <= rec.TRAN_TIMESTAMP
                 AND CLOSED_DATE IS NULL;

              IF V_COUNT = 500 THEN
                  COMMIT;
                  V_COUNT := 0;
              END IF;
          EXCEPTION
              WHEN OTHERS THEN
                       ERRPKG.INSERT_ERROR_LOG_SP( SQLCODE,
                                                   'DAILY_NET_BAL_CLOSE_DATE_UPD',
                                                    SQLERRM,
                                                   '000000',
                                                    REC.CUSTOMER_ACCOUNT_NUMBER,
                                                   'CUSTOMER_DEPOSIT_TRANSACTION_DTL');
          END;
      END LOOP;
      COMMIT;
    CCN_BATCH_PKG.UPDATE_BATCH_JOB('NET_BAL_CLOSE_DT_UPD', V_BATCH_NUMBER, V_TRANS_STATUS);
    CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
EXCEPTION
    WHEN OTHERS THEN
        V_TRANS_STATUS := 'ERROR';
             ERRPKG.INSERT_ERROR_LOG_SP( SQLCODE,
                                         'DAILY_NET_BAL_CLOSE_DATE_UPD',
                                         SQLERRM,
                                         '000000',
                                         '000000000',
                                         'CUSTOMER_DEPOSIT_TRANSACTION_DTL');

        CCN_BATCH_PKG.UPDATE_BATCH_JOB('NET_BAL_CLOSE_DT_UPD', V_BATCH_NUMBER, V_TRANS_STATUS);
        CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
END DAILY_NET_BAL_CLOSE_DATE_UPD;

END CUST_DEP_BATCH_PKG;