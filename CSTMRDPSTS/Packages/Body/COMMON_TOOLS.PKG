create or replace PACKAGE BODY COMMON_TOOLS AS 
/*********************************************************** 
This package BODY is intended to hold reuseable objects that are 
available to be used by the entire schema

created : 09/27/2017 sxh487 CCN project.....
************************************************************/

FUNCTION GET_CURR_RUNCYCLE
/******************************************************************
This function will return the current run cycle for the data to be
loaded from PNP

created : 09/27/2017 sxh487  CCN Project....
changed :
******************************************************************/
RETURN VARCHAR2
IS
    V_RLS_RUN_CYCLE       POS_CSTMR_DEP_LOAD_STATUS.RLS_RUN_CYCLE%TYPE;
BEGIN
   SELECT RLS_RUN_CYCLE 
     INTO V_RLS_RUN_CYCLE
     FROM  (SELECT CH.*
              FROM PNP_CCN_LOAD_STATUS CH
             WHERE CH.START_TS > (SELECT MAX(START_TS)
                                    FROM POS_CSTMR_DEP_LOAD_STATUS)
          AND STATUS_CODE = 'C'
          ORDER BY CH.START_TS)
        WHERE ROWNUM < 2;
     
   RETURN V_RLS_RUN_CYCLE;
EXCEPTION
    WHEN OTHERS THEN
         RETURN V_RLS_RUN_CYCLE; 
END GET_CURR_RUNCYCLE;

FUNCTION GET_SALES_LINE_AMOUNT (
/**********************************************************
This function will return amt from CCN_SALES_LINES_T table

parameters:
in_tran_guid

created : 05/29/2018 sxh487 ccn project
modified: 11/15/2018 pxa852 CCN Project Team...
          Added run cycle id parameter.
**********************************************************/
IN_TRAN_GUID     IN  CCN_SALES_LINES_T.TRAN_GUID%TYPE,
IN_RLS_RUN_CYCLE IN  CCN_SALES_LINES_T.RLS_RUN_CYCLE%TYPE)
RETURN NUMBER
IS
   V_AMOUNT      CCN_SALES_LINES_T.EXTENDED_PRICE%TYPE;
BEGIN
   SELECT SUM(EXTENDED_PRICE) 
    INTO V_AMOUNT
     FROM CCN_SALES_LINES_T
    WHERE TRAN_GUID = IN_TRAN_GUID
      AND RLS_RUN_CYCLE = IN_RLS_RUN_CYCLE
      AND NON_MERCH_CODE = COMMON_TOOLS.G_NON_MERCH_CODE;
   RETURN NVL(V_AMOUNT,0);
EXCEPTION
    WHEN OTHERS THEN
        RETURN 0;
END GET_SALES_LINE_AMOUNT;

FUNCTION COST_CENTER_LOOK_UP_FNC(
/**********************************************************
THIS FUNCTION WILL RETURN 6 DIGIT COST_CENTER_CODE
WHEN THE 4-DIGIT CODE IS PASSED OR JUST THE 4 DIGIT COST CENTER CODE IF MATCHING COST CENTER CODE IS NOT FOUND
ERROR IS RAISED IF ERROR FLAG IS SET TO YES ELSE NO ERROR WILL BE RAISED

Created : 06/08/2017 CCN PROJECT TEAM..
Modified: 08/10/2017 nxk927 CCN PROJECT TEAM..
          removing the raise error if the cost center is not present and returning the 4 digit cost center back
**********************************************************/
IN_COST_CENTER IN CUSTOMER_DEPOSIT_TRANSACTION_DTL.COST_CENTER_CODE%TYPE,
IN_ERROR_FLAG IN VARCHAR DEFAULT 'Y'
)
RETURN VARCHAR2
IS

  V_COST_CENTER_CODE          VARCHAR2(30);
  INVALID_COST_CENTER_ERR     EXCEPTION;
  MULTI_COSTCNTR_ERROR        EXCEPTION;
  V_COST_CENTER_STR           VARCHAR2(30);

--
BEGIN
      SELECT LISTAGG(COST_CENTER_CODE, ',')
          WITHIN GROUP (ORDER BY COST_CENTER_CODE)
        INTO V_COST_CENTER_STR
        FROM
        (SELECT /*+  INDEX(COST_CENTER COST_CENTER_PK) */ COST_CENTER_CODE
          FROM COSTCNTR.COST_CENTER
         WHERE LENGTH(IN_COST_CENTER) = 6
           AND COST_CENTER_CODE = (IN_COST_CENTER)
        UNION
        SELECT /*+  INDEX(COST_CENTER COST_CENTER_NX02) */ COST_CENTER_CODE
          FROM COSTCNTR.COST_CENTER
         WHERE LENGTH(IN_COST_CENTER) = 4
           AND SUBSTR(COST_CENTER_CODE,3) = UPPER(IN_COST_CENTER)
        );

    IF V_COST_CENTER_STR IS NOT NULL THEN
        IF INSTR(V_COST_CENTER_STR, ',') > 0 THEN
            IF IN_ERROR_FLAG = 'Y' THEN
                RAISE MULTI_COSTCNTR_ERROR;
            ELSE
                RETURN IN_COST_CENTER;
            END IF;
        END IF;
    ELSE
        IF IN_ERROR_FLAG = 'Y' THEN
            RAISE INVALID_COST_CENTER_ERR;
        ELSE
            RETURN IN_COST_CENTER;
        END IF;
    END IF;

    --IT COMES HERE ONLY IF THERE IS ONLY ONE COST CENTER FOR THE INPUT PASSED
    V_COST_CENTER_CODE := V_COST_CENTER_STR ;
    RETURN NVL(V_COST_CENTER_CODE,IN_COST_CENTER);
EXCEPTION

    WHEN INVALID_COST_CENTER_ERR THEN
        RETURN IN_COST_CENTER;
    WHEN MULTI_COSTCNTR_ERROR THEN
        ERRPKG.RAISE_ERR(ERRNUMS.EN_DUP_MAINFRAME_COSTCNTR_ERR
                         ,'COMMON_TOOLS.COST_CENTER_LOOK_UP_FNC'
                         ,'TWO OR MORE COST CENTERS ''' ||V_COST_CENTER_STR|| '''EXISTS WITH SAME LAST FOUR CHARACTERS IN THE MAINFRAME');
                 NULL;
    WHEN OTHERS THEN
          RETURN IN_COST_CENTER;
END COST_CENTER_LOOK_UP_FNC;

FUNCTION FNC_GET_LATEST_CUM_AMT(
/**********************************************************
This function will return the net balance remaining
as of the day before the current load

Created : 01/25/2018 sxh487
        : 02/01/2018 sxh487 Changed the default amount to 0
Changed : 02/06/2019 pxa852 CCN Project Team...
          Modified code to replace old table with the new table that is created as part of new data model
**********************************************************/
IN_CUST_ACCOUNT_NBR IN CUSTOMER_DEPOSIT_TRANSACTION_DTL.CUSTOMER_ACCOUNT_NUMBER%TYPE)
    RETURN NUMBER
IS
  V_CUSTOMER_NET_BALANCE     CUSTOMER_DEPOSIT_TRANSACTION_DTL.CUSTOMER_NET_BALANCE%TYPE := 0;
BEGIN
    SELECT CUSTOMER_NET_BALANCE
      INTO V_CUSTOMER_NET_BALANCE
      FROM CUSTOMER_DEPOSIT_TRANSACTION_DTL
     WHERE CUSTOMER_ACCOUNT_NUMBER = IN_CUST_ACCOUNT_NBR
       AND TRAN_TIMESTAMP = (SELECT MAX(TRAN_TIMESTAMP)
                               FROM CUSTOMER_DEPOSIT_TRANSACTION_DTL
                              WHERE CUSTOMER_ACCOUNT_NUMBER = IN_CUST_ACCOUNT_NBR
                                AND CLOSED_DATE IS NULL
                                );

     RETURN V_CUSTOMER_NET_BALANCE;
EXCEPTION
    WHEN OTHERS THEN
          RETURN V_CUSTOMER_NET_BALANCE;
END FNC_GET_LATEST_CUM_AMT;

FUNCTION BUILD_DEP_HDR_HST_FROM_CURR(
/***********************************************************
	This function will get the current CUSTOMER_DEPOSIT_HEADER record 
  for insert into CUSTOMER_DEPOSIT_HEADER_HST  
Created : 05/02/2018 sxh487
Changed : 
************************************************************/
IN_CUSTOMER_ACCOUNT_NUMBER   IN  CUSTOMER_DEPOSIT_HEADER.CUSTOMER_ACCOUNT_NUMBER%TYPE) 
RETURN CUSTOMER_DEPOSIT_HEADER_HST%ROWTYPE
IS
  V_CUST_DEP_HEADER_HST_REC CUSTOMER_DEPOSIT_HEADER_HST%ROWTYPE;
BEGIN
    SELECT CDH.*, SYSDATE
      INTO V_CUST_DEP_HEADER_HST_REC
      FROM CUSTOMER_DEPOSIT_HEADER CDH
     WHERE CUSTOMER_ACCOUNT_NUMBER = IN_CUSTOMER_ACCOUNT_NUMBER;
    RETURN V_CUST_DEP_HEADER_HST_REC;
EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END BUILD_DEP_HDR_HST_FROM_CURR;

FUNCTION GET_GL_DIVISION(
/***********************************************************
GET_GL_DIVISION 
      This Function will get the GL_DIVISION

Created : 03/22/2018 SXH487
Modified: 02/06/2019 pxa852 CCN Project Team...
          Modified code to replace old table with the new table that is created as part of new data model
************************************************************/
IN_COST_CENTER_CODE     IN     CUSTOMER_DEPOSIT_TRANSACTION_DTL.COST_CENTER_CODE%TYPE
)
RETURN VARCHAR2
IS
    V_GL_DIVISION  VARCHAR2(10);
BEGIN
        SELECT DIVISION 
          INTO V_GL_DIVISION 
          FROM HIERARCHY_DETAIL_VIEW HD 
         WHERE HRCHY_HDR_NAME = 'FACTS_DIVISION' 
           AND HD.COST_CENTER_CODE = IN_COST_CENTER_CODE;
    
    RETURN V_GL_DIVISION;

EXCEPTION
    WHEN OTHERS THEN
        RETURN V_GL_DIVISION;
END GET_GL_DIVISION;

END COMMON_TOOLS;