create or replace PACKAGE BODY COMMON_TOOLS AS 
/*********************************************************** 
This package BODY is intended to hold reuseable objects that are 
available to be used by the entire schema

created : 09/27/2017 sxh487 CCN project.....
************************************************************/

FUNCTION GET_CURR_RUNCYCLE
/******************************************************************
This function will return the current run cycle for the data to be
loaded from PNP

created : 09/27/2017 sxh487  CCN Project....
changed :
******************************************************************/
RETURN VARCHAR2
IS
    V_RLS_RUN_CYCLE       POS_CSTMR_DEP_LOAD_STATUS.RLS_RUN_CYCLE%TYPE; 
BEGIN
   SELECT RLS_RUN_CYCLE 
     INTO V_RLS_RUN_CYCLE
     FROM  (SELECT CH.*
              FROM PNP.CCN_LOAD_STATUS CH
             WHERE CH.START_TS > (SELECT MAX(START_TS)
                                    FROM POS_CSTMR_DEP_LOAD_STATUS)
          AND STATUS_CODE = 'C'
          ORDER BY CH.START_TS)
        WHERE ROWNUM < 2;
     
   RETURN V_RLS_RUN_CYCLE;
EXCEPTION
    WHEN OTHERS THEN
         RETURN V_RLS_RUN_CYCLE; 
END GET_CURR_RUNCYCLE;

FUNCTION GET_SALES_AMOUNT (
/**********************************************************
This function will return amt from PNP.ccn_accums table

parameters:
in_tran_guid
in_accum_id

created : 08/17/2017 sxp130 ccn project
modified:
**********************************************************/
   IN_TRAN_GUID   IN  PNP.CCN_ACCUMS.TRAN_GUID%TYPE,
   IN_ACCUM_ID    IN PNP.CCN_ACCUMS.ACCUM_ID%TYPE)
RETURN NUMBER
IS
   V_AMOUNT      PNP.CCN_ACCUMS.AMT%TYPE;
BEGIN
   SELECT AMT
     INTO V_AMOUNT
     FROM CUST_DEP_CCN_ACCUMS_T
    WHERE TRANSACTION_GUID = IN_TRAN_GUID
      AND ACCUM_ID = IN_ACCUM_ID;
   RETURN NVL(V_AMOUNT,0);
EXCEPTION
    WHEN OTHERS THEN
        RETURN 0;
END GET_SALES_AMOUNT;

FUNCTION COST_CENTER_LOOK_UP_FNC(
/**********************************************************
THIS FUNCTION WILL RETURN 6 DIGIT COST_CENTER_CODE
WHEN THE 4-DIGIT CODE IS PASSED OR JUST THE 4 DIGIT COST CENTER CODE IF MATCHING COST CENTER CODE IS NOT FOUND
ERROR IS RAISED IF ERROR FLAG IS SET TO YES ELSE NO ERROR WILL BE RAISED

Created : 06/08/2017 CCN PROJECT TEAM..
Modified: 08/10/2017 nxk927 CCN PROJECT TEAM..
          removing the raise error if the cost center is not present and returning the 4 digit cost center back
**********************************************************/
IN_COST_CENTER IN CUSTOMER_DEPOSIT.COST_CENTER_CODE%TYPE,
IN_ERROR_FLAG IN VARCHAR DEFAULT 'Y'
)
RETURN VARCHAR2
IS

  V_COST_CENTER_CODE          VARCHAR2(30);
  INVALID_COST_CENTER_ERR     EXCEPTION;
  MULTI_COSTCNTR_ERROR        EXCEPTION;
  V_COST_CENTER_STR           VARCHAR2(30);

--
BEGIN
      SELECT LISTAGG(COST_CENTER_CODE, ',')
          WITHIN GROUP (ORDER BY COST_CENTER_CODE)
        INTO V_COST_CENTER_STR
        FROM
        (SELECT /*+  INDEX(COST_CENTER COST_CENTER_PK) */ COST_CENTER_CODE
          FROM COSTCNTR.COST_CENTER
         WHERE LENGTH(IN_COST_CENTER) = 6
           AND COST_CENTER_CODE = (IN_COST_CENTER)
        UNION
        SELECT /*+  INDEX(COST_CENTER COST_CENTER_NX02) */ COST_CENTER_CODE
          FROM COSTCNTR.COST_CENTER
         WHERE LENGTH(IN_COST_CENTER) = 4
           AND SUBSTR(COST_CENTER_CODE,3) = UPPER(IN_COST_CENTER)
        );

    IF V_COST_CENTER_STR IS NOT NULL THEN
        IF INSTR(V_COST_CENTER_STR, ',') > 0 THEN
            IF IN_ERROR_FLAG = 'Y' THEN
                RAISE MULTI_COSTCNTR_ERROR;
            ELSE
                RETURN IN_COST_CENTER;
            END IF;
        END IF;
    ELSE
        IF IN_ERROR_FLAG = 'Y' THEN
            RAISE INVALID_COST_CENTER_ERR;
        ELSE
            RETURN IN_COST_CENTER;
        END IF;
    END IF;

    --IT COMES HERE ONLY IF THERE IS ONLY ONE COST CENTER FOR THE INPUT PASSED
    V_COST_CENTER_CODE := V_COST_CENTER_STR ;
    RETURN NVL(V_COST_CENTER_CODE,IN_COST_CENTER);
EXCEPTION

    WHEN INVALID_COST_CENTER_ERR THEN
        RETURN IN_COST_CENTER;
    WHEN MULTI_COSTCNTR_ERROR THEN
        ERRPKG.RAISE_ERR(ERRNUMS.EN_DUP_MAINFRAME_COSTCNTR_ERR
                         ,'COMMON_TOOLS.COST_CENTER_LOOK_UP_FNC'
                         ,'TWO OR MORE COST CENTERS ''' ||V_COST_CENTER_STR|| '''EXISTS WITH SAME LAST FOUR CHARACTERS IN THE MAINFRAME');
                 NULL;
    WHEN OTHERS THEN
          RETURN IN_COST_CENTER;
END COST_CENTER_LOOK_UP_FNC;

END COMMON_TOOLS;