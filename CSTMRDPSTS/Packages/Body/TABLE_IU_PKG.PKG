create or replace PACKAGE BODY TABLE_IU_PKG
   AS
/******************************************************************************
This package is intended to control access to the core customer_deposit tables.
created : 02/27/2018 sxh487 

*******************************************************************************/

PROCEDURE CUST_DEP_DETAILS_ROWTYPE_SP(
/******************************************************************************
CUST_DEP_DETAILS_ROWTYPE_SP

This procedure is intended to build the customer_deposit_details record type
created : 01/16/2018 sxh487 ccn project....
changed : 02/26/2018 sxh487 Added ADJUSTED_DATE for UI adjustments/corrections
        : 05/29/2018 sxh487 Added CSTMR_DPST_SALES_LN_ITM_AMT
        : 02/12/2019 pxa852 CCN Project Team...
          Modified code to replace old table(CUSTOMER_DEPOSIT_DETAILS)
          with new table (CUSTOMER_DEPOSIT_TRANSACTION_DTL)
          that was created as part of new data model
          Modified code to remove Tran_timestamp, reference_number, rls_run_cycle and load_date
          as per user request. Hardcoding tran_timestamp to SYSTIMESTAMP
          load_date to SYSDATE
        : 03/26/2019 pxa852 CCN Project Team...
          Added user id to know who created the transaction
*******************************************************************************/
    IN_TABLE_NAME                 IN     VARCHAR2,
    IN_ROW_DATA                   IN     VARCHAR2,
    OUT_CUST_DEP_DET_TYPE            OUT CUSTOMER_DEPOSIT_TRANSACTION_DTL%ROWTYPE)
IS
   CURSOR TABLE_FIELDS_CUR IS
      SELECT COLUMN_NAME,
             DATA_LENGTH COLUMN_SIZE,
             DATA_TYPE
        FROM ALL_TAB_COLUMNS
       WHERE TABLE_NAME = IN_TABLE_NAME
      ORDER BY COLUMN_ID ASC;

   --Variable decalration
   V_CUST_DEP_DET_ROW  CUSTOMER_DEPOSIT_TRANSACTION_DTL%ROWTYPE;
   V_ROW_VALUE         VARCHAR2(500);
   V_ROW_DATA          SYS.XMLTYPE := XMLTYPE(IN_ROW_DATA);
BEGIN

   FOR TABLE_FIELDS_REC IN TABLE_FIELDS_CUR LOOP
      IF (V_ROW_DATA.EXISTSNODE('/'|| IN_TABLE_NAME|| '/' || TABLE_FIELDS_REC.COLUMN_NAME ||'/text()') = 1) THEN
          V_ROW_VALUE := V_ROW_DATA.EXTRACT(IN_TABLE_NAME|| '/' || TABLE_FIELDS_REC.COLUMN_NAME ||'/text()').GETSTRINGVAL();
         CASE TABLE_FIELDS_REC.COLUMN_NAME
            WHEN 'COST_CENTER_CODE' THEN
                V_CUST_DEP_DET_ROW.COST_CENTER_CODE                      :=  V_ROW_VALUE;
            WHEN 'TRANSACTION_DATE' THEN
                V_CUST_DEP_DET_ROW.TRANSACTION_DATE                      :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            WHEN 'TERMINAL_NUMBER' THEN
                V_CUST_DEP_DET_ROW.TERMINAL_NUMBER                       :=  V_ROW_VALUE;
            WHEN 'TRANSACTION_NUMBER' THEN
                V_CUST_DEP_DET_ROW.TRANSACTION_NUMBER                    :=  V_ROW_VALUE;
            WHEN 'TRANSACTION_GUID' THEN
                V_CUST_DEP_DET_ROW.TRANSACTION_GUID                      :=  V_ROW_VALUE;
            WHEN 'CUSTOMER_ACCOUNT_NUMBER' THEN
                V_CUST_DEP_DET_ROW.CUSTOMER_ACCOUNT_NUMBER               :=  V_ROW_VALUE;
            WHEN 'POS_TRANSACTION_CODE' THEN
                V_CUST_DEP_DET_ROW.POS_TRANSACTION_CODE                  :=  V_ROW_VALUE;
            WHEN 'TRANSACTION_TYPE' THEN
                V_CUST_DEP_DET_ROW.TRANSACTION_TYPE                      :=  V_ROW_VALUE;
            WHEN 'CSTMR_DPST_SALES_LN_ITM_AMT' THEN
                 V_CUST_DEP_DET_ROW.CSTMR_DPST_SALES_LN_ITM_AMT          :=  V_ROW_VALUE;
            WHEN 'CUSTOMER_NET_BALANCE' THEN
                V_CUST_DEP_DET_ROW.CUSTOMER_NET_BALANCE                  :=  V_ROW_VALUE;
            WHEN 'CLOSED_DATE' THEN
                V_CUST_DEP_DET_ROW.CLOSED_DATE                           :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            WHEN 'CLEARED_REASON' THEN
                V_CUST_DEP_DET_ROW.CLEARED_REASON                        :=  V_ROW_VALUE;
            WHEN 'NOTES' THEN
                V_CUST_DEP_DET_ROW.NOTES                                 :=  V_ROW_VALUE;
            WHEN 'ADJUSTED_DATE' THEN
                V_CUST_DEP_DET_ROW.ADJUSTED_DATE                         :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            WHEN 'GL_DIVISION' THEN
                V_CUST_DEP_DET_ROW.GL_DIVISION                           :=  V_ROW_VALUE;
            WHEN 'USER_ID' THEN
                V_CUST_DEP_DET_ROW.USER_ID                               :=  V_ROW_VALUE;
            ELSE NULL;
         END CASE;
       END IF;
   END LOOP ;
   V_CUST_DEP_DET_ROW.LOAD_DATE                 := SYSDATE;
   V_CUST_DEP_DET_ROW.TRAN_TIMESTAMP            := SYSTIMESTAMP;
   V_CUST_DEP_DET_ROW.CUST_DEP_TRANS_DETAIL_SEQ := CUST_DEP_DETAIL_ID.NEXTVAL;
   OUT_CUST_DEP_DET_TYPE                        := V_CUST_DEP_DET_ROW;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEP_DETAILS_ROWTYPE_SP, ' || ' ' || 'IN_TABLE_NAME IS ' || IN_TABLE_NAME, SUBSTR(SQLERRM, 1, 500));
END CUST_DEP_DETAILS_ROWTYPE_SP;

PROCEDURE CUSTOMER_DEPOSIT_HDR_S_SP (
/*******************************************************************************
	CUSTOMER_DEPOSIT_HDR_S_SP

	This procedure is intended to select records from CUSTOMER_DEPOSIT table

<CUSTOMER_DEPOSIT_HEADER>
  <CUSTOMER_ACCOUNT_NUMBER>280184482</CUSTOMER_ACCOUNT_NUMBER>
</CUSTOMER_DEPOSIT_HEADER>

Created : 03/06/2018 sxh487 CCN Project....
        : 02/12/2019 pxa852 CCN Project Team...
          Removing following fields from ref cursor
               CLEARED_REASON,
               CLOSED_DATE,
               NOTES,
               REFERENCE_NUMBER,
               COMMON_TOOLS.IS_ACCOUNT_OPEN(IN_CUSTOMER_ACCOUNT_NUMBER) AS ACCT_OPEN_FLAG
*******************************************************************************/
    IN_CUSTOMER_ACCOUNT_NUMBER   IN     CUSTOMER_DEPOSIT_HEADER.CUSTOMER_ACCOUNT_NUMBER%TYPE,
    OUT_REF_CUR                     OUT REF_CURSOR)
IS
BEGIN
    OPEN OUT_REF_CUR FOR
        SELECT CUSTOMER_ACCOUNT_NUMBER,
               CUSTOMER_NAME,
               BILLCONTACT,
               BILLNM,
               BILLADDR1,
               BILLADDR2,
               BILLCITY,
               BILLZIP,
               BILLPHONE
          FROM CUSTOMER_DEPOSIT_HEADER
         WHERE CUSTOMER_ACCOUNT_NUMBER = IN_CUSTOMER_ACCOUNT_NUMBER;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUSTOMER_DEPOSIT_HDR_S_SP, ' || ' ' ||  SUBSTR(SQLERRM, 1, 500));
END CUSTOMER_DEPOSIT_HDR_S_SP;

PROCEDURE CUST_DEP_TRANS_DETAILS_S_SP (
/*******************************************************************************
	CUST_DEP_DETAILS_S_SP

	This procedure is intended to select records from CUSTOMER_DEPOSIT_TRANSACTION_DTL table

<CUSTOMER_DEPOSIT_TRANSACTION_DTL>
  <TRANSACTION_DATE_START>08-25-2017</TRANSACTION_DATE_START>
  <TRANSACTION_DATE_END>08-05-2017</TRANSACTION_DATE_END>
  <CUSTOMER_ACCOUNT_NUMBER>280184482</CUSTOMER_ACCOUNT_NUMBER>
</CUSTOMER_DEPOSIT_TRANSACTION_DTL>

Created : 01/16/2018 sxh487 CCN Project....
Modified: 01/14/2019 sxh487 Changed the table to CUST_DEP_CRD_RED_DETAILS
        : 02/14/2019 pxa852 CCN Project Team...
          Modified code to remove closed_date in order by
*******************************************************************************/
    IN_CUSTOMER_ACCOUNT_NUMBER   IN CUSTOMER_DEPOSIT_TRANSACTION_DTL.CUSTOMER_ACCOUNT_NUMBER%TYPE,
    IN_TABLE_NAME                IN VARCHAR2,
    IN_ROW_DATA                  IN CLOB,
    OUT_REF_CUR                     OUT REF_CURSOR)
IS
   V_TRANSACTION_DATE_START  CUSTOMER_DEPOSIT_TRANSACTION_DTL.TRANSACTION_DATE%TYPE;
   V_TRANSACTION_DATE_END    CUSTOMER_DEPOSIT_TRANSACTION_DTL.TRANSACTION_DATE%TYPE;
BEGIN
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/'|| IN_TABLE_NAME|| '/'|| 'TRANSACTION_DATE_START/text()') = 1) THEN
        V_TRANSACTION_DATE_START := TO_DATE(XMLTYPE(IN_ROW_DATA).EXTRACT('/'|| IN_TABLE_NAME|| '/'|| 'TRANSACTION_DATE_START/text()').GETSTRINGVAL(),'MM-DD-YYYY');
    END IF;
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/'|| IN_TABLE_NAME|| '/'|| 'TRANSACTION_DATE_END/text()') = 1) THEN
        V_TRANSACTION_DATE_END   := TO_DATE(XMLTYPE(IN_ROW_DATA).EXTRACT('/'|| IN_TABLE_NAME|| '/'|| 'TRANSACTION_DATE_END/text()').GETSTRINGVAL(),'MM-DD-YYYY');
    END IF;

    OPEN OUT_REF_CUR FOR
         SELECT CDD.COST_CENTER_CODE,
                CDD.TRANSACTION_DATE,
                CDD.TERMINAL_NUMBER,
                CDD.TRANSACTION_NUMBER,
                CDD.TRANSACTION_GUID,
                CDD.CUSTOMER_ACCOUNT_NUMBER,
                CDD.POS_TRANSACTION_CODE,
                CDD.TRAN_TIMESTAMP,
                CDD.TRANSACTION_TYPE,
                CDD.CSTMR_DPST_SALES_LN_ITM_AMT,
                CDD.CUSTOMER_NET_BALANCE,
                CDD.DEPOSIT_REMAINING_BAL,
                CDD.CLOSED_DATE,
                CDD.REFERENCE_NUMBER,
                CDD.CLEARED_REASON,
                CDD.NOTES,
                CDD.ORGNL_DEPOSIT_TERMINAL_NBR,
                CDD.ORGNL_DEPOSIT_TRANSACTION_NBR,
                CDD.ORGNL_DEPOSIT_TRANSACTION_DATE,
                CDD.LOAD_DATE,
                CDD.RLS_RUN_CYCLE,
                CDD.ADJUSTED_DATE,
                CDD.GL_DIVISION
           FROM CUSTOMER_DEPOSIT_TRANSACTION_DTL CDD
          WHERE CDD.CUSTOMER_ACCOUNT_NUMBER  = IN_CUSTOMER_ACCOUNT_NUMBER
            AND NVL(CDD.TRANSACTION_DATE,TRUNC(SYSDATE))
                BETWEEN NVL(V_TRANSACTION_DATE_START,NVL(CDD.TRANSACTION_DATE,TRUNC(SYSDATE))) 
                    AND NVL(V_TRANSACTION_DATE_END,NVL(CDD.TRANSACTION_DATE,TRUNC(SYSDATE)))
           ORDER BY CDD.CUSTOMER_ACCOUNT_NUMBER, CDD.TRAN_TIMESTAMP, CDD.TERMINAL_NUMBER;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEP_TRANS_DETAILS_S_SP, ' || ' ' ||  SUBSTR(SQLERRM, 1, 500));
END CUST_DEP_TRANS_DETAILS_S_SP;

PROCEDURE CUST_DEPOSIT_HEADER_U_SP (
/*******************************************************************************
    This procedure is intended to updates records in CUSTOMER_DEPOSIT_HEADER table

Created : 04/23/2018 sxh487
Changed : 01/29/2019 sxg151 CCN Team...
        : ASP-1208 : Account level closing is not required.
*******************************************************************************/
    IN_ROW IN     CUSTOMER_DEPOSIT_HEADER%ROWTYPE)
IS
    V_ROW         CUSTOMER_DEPOSIT_HEADER_HST%ROWTYPE;
BEGIN
     V_ROW := COMMON_TOOLS.BUILD_DEP_HDR_HST_FROM_CURR(IN_ROW.CUSTOMER_ACCOUNT_NUMBER);
     IF NVL(IN_ROW.CUSTOMER_ACCOUNT_NUMBER,'X') <> NVL(V_ROW.CUSTOMER_ACCOUNT_NUMBER,'X')
       OR NVL(IN_ROW.CUSTOMER_NAME,'X') <> NVL(V_ROW.CUSTOMER_NAME,'X')
       OR NVL(IN_ROW.BILLCONTACT,'X') <> NVL(V_ROW.BILLCONTACT,'X')
       OR NVL(IN_ROW.BILLNM,'X') <> NVL(V_ROW.BILLNM,'X')
       OR NVL(IN_ROW.BILLADDR1,'X') <> NVL(V_ROW.BILLADDR1,'X')
       OR NVL(IN_ROW.BILLADDR2,'X') <> NVL(V_ROW.BILLADDR2,'X')
       OR NVL(IN_ROW.BILLCITY,'X') <> NVL(V_ROW.BILLCITY,'X')
       OR NVL(IN_ROW.BILLZIP,'X') <> NVL(V_ROW.BILLZIP,'X')
       OR NVL(IN_ROW.BILLPHONE,'X') <> NVL(V_ROW.BILLPHONE,'X') THEN
        --inserting in history before updating the current record
         TABLE_IU_PKG.CUST_DEPOSIT_HDR_HIST_I_SP(V_ROW);
         UPDATE CUSTOMER_DEPOSIT_HEADER
            SET ROW = IN_ROW
          WHERE NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX') = NVL(IN_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX'));
     END IF;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_HEADER_U_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEPOSIT_HEADER_U_SP;

PROCEDURE CUST_DEPOSIT_HDR_HIST_I_SP (
/*******************************************************************************
    This procedure is intended to insert records into CUSTOMER_DEPOSIT_HEADER_HST table

Created : 04/23/2018 sxh487 CCN Project....
Changed :
*******************************************************************************/
    IN_ROW     IN     CUSTOMER_DEPOSIT_HEADER_HST%ROWTYPE)
IS
BEGIN
    INSERT INTO CUSTOMER_DEPOSIT_HEADER_HST VALUES IN_ROW;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_HDR_HIST_I_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEPOSIT_HDR_HIST_I_SP;

PROCEDURE CUST_DEPOSIT_HEADER_I_SP(
/*******************************************************************************
CUST_DEPOSIT_HEADER_I_SP

This procedure is intended to insert into  CUSTOMER_DEPOSIT_HEADER
created : 02/27/2018 SXH487 -- ccn project
changed :

*******************************************************************************/
    IN_ROW   IN     CUSTOMER_DEPOSIT_HEADER%ROWTYPE)
IS
BEGIN
    INSERT INTO CUSTOMER_DEPOSIT_HEADER VALUES IN_ROW;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        CUST_DEPOSIT_HEADER_U_SP(IN_ROW);
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_HEADER_I_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEPOSIT_HEADER_I_SP;

PROCEDURE CUST_DEP_TRANS_HDR_I_SP(
/*******************************************************************************
CUST_DEP_TRANS_HDR_I_SP

This procedure is intended to insert new CUST_DEP_TRANS_HEADER records into CUSTOMER_DEPOSIT_TRANSACTION_HDR table
created : 02/12/2019 CCN Project Team...
changed : 03/26/2019 mxs216 ASP-1236 CCN Project Team...
*******************************************************************************/
    IN_CUST_DEPOSIT_DETAILS_rec   IN     CUSTOMER_DEPOSIT_TRANSACTION_HDR%ROWTYPE)
IS
BEGIN
   INSERT INTO CUSTOMER_DEPOSIT_TRANSACTION_HDR VALUES IN_CUST_DEPOSIT_DETAILS_rec;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        NULL;
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEP_TRANS_HDR_I_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEP_TRANS_HDR_I_SP;

PROCEDURE CUST_DEPOSIT_TRAN_DTLS_U_SP (
/*******************************************************************************
    This procedure is intended to updates records in CUSTOMER_DEPOSIT_TRANSACTION_DTL table

Created : 02/12/2019 CCN Project Team...
Changed :
*******************************************************************************/
    IN_ROW IN     CUSTOMER_DEPOSIT_TRANSACTION_DTL%ROWTYPE)
IS
BEGIN
      UPDATE CUSTOMER_DEPOSIT_TRANSACTION_DTL
         SET row = IN_ROW
       WHERE CUST_DEP_TRANS_DETAIL_SEQ = IN_ROW.CUST_DEP_TRANS_DETAIL_SEQ;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_TRAN_DTLS_U_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEPOSIT_TRAN_DTLS_U_SP;

PROCEDURE CUST_DEPOSIT_TRAN_DTLS_I_SP(
/*******************************************************************************
CUST_DEPOSIT_TRAN_DTLS_I_SP

This procedure is intended to insert new CUSTOMER_DEPOSIT_TRANSACTION_DTL records
created : 02/12/2019 CCN Project Team...
changed :
*******************************************************************************/
    IN_CUST_DEP_CRD_RED_DET_rec   IN     CUSTOMER_DEPOSIT_TRANSACTION_DTL%ROWTYPE)
IS
BEGIN
   INSERT INTO CUSTOMER_DEPOSIT_TRANSACTION_DTL VALUES IN_CUST_DEP_CRD_RED_DET_rec;

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
       CUST_DEPOSIT_TRAN_DTLS_U_SP(IN_CUST_DEP_CRD_RED_DET_rec);
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_TRAN_DTLS_I_SP', SUBSTR(SQLERRM,1,500));
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END CUST_DEPOSIT_TRAN_DTLS_I_SP;

END TABLE_IU_PKG;