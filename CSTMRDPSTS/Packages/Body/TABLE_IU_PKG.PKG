create or replace PACKAGE BODY TABLE_IU_PKG
   AS
/******************************************************************************
This package is intended to control access to the core customer_deposit tables.
created : 02/27/2018 sxh487 

*******************************************************************************/

PROCEDURE CUST_DEPOSIT_HDR_ROWTYPE_SP(
/******************************************************************************
CUST_DEPOSIT_HDR_ROWTYPE_SP

This procedure is intended to build the customer_deposit_details record type
created : 01/16/2018 sxh487 ccn project....
changed : 
*******************************************************************************/
   IN_TABLE_NAME                     IN     VARCHAR2,
   IN_ROW_DATA                       IN     VARCHAR2,
   OUT_CUSTOMER_DEPOSIT_HDR_TYPE     OUT    CUSTOMER_DEPOSIT_HEADER%ROWTYPE)
IS
   CURSOR TABLE_FIELDS_CUR IS
      SELECT COLUMN_NAME,
             DATA_LENGTH COLUMN_SIZE,
             DATA_TYPE
        FROM ALL_TAB_COLUMNS
       WHERE TABLE_NAME = IN_TABLE_NAME
      ORDER BY COLUMN_ID ASC;

   --Variable decalration
   V_CUST_DEPOSIT_HDR_ROW  CUSTOMER_DEPOSIT_HEADER%ROWTYPE;
   V_ROW_VALUE             VARCHAR2(500);
   V_ROW_DATA              SYS.XMLTYPE := XMLTYPE(IN_ROW_DATA);
BEGIN
   FOR TABLE_FIELDS_REC IN TABLE_FIELDS_CUR LOOP
      IF (V_ROW_DATA.EXISTSNODE('/'|| IN_TABLE_NAME|| '/' || TABLE_FIELDS_REC.COLUMN_NAME ||'/text()') = 1) THEN
          V_ROW_VALUE := V_ROW_DATA.EXTRACT(IN_TABLE_NAME|| '/' || TABLE_FIELDS_REC.COLUMN_NAME ||'/text()').GETSTRINGVAL();
         ---v_row_value := common_tools.eliminate_special_chrctrs(v_row_value);
         CASE TABLE_FIELDS_REC.COLUMN_NAME
            WHEN 'CUSTOMER_ACCOUNT_NUMBER' THEN
                V_CUST_DEPOSIT_HDR_ROW.CUSTOMER_ACCOUNT_NUMBER        :=  V_ROW_VALUE;
            WHEN 'CUSTOMER_NAME' THEN
                V_CUST_DEPOSIT_HDR_ROW.CUSTOMER_NAME                  :=  V_ROW_VALUE;
            WHEN 'BILLCONTACT' THEN
                V_CUST_DEPOSIT_HDR_ROW.BILLCONTACT                    :=  V_ROW_VALUE;
            WHEN 'BILLNM' THEN
                V_CUST_DEPOSIT_HDR_ROW.BILLNM                         :=  V_ROW_VALUE;
            WHEN 'BILLADDR1' THEN
                V_CUST_DEPOSIT_HDR_ROW.BILLADDR1                      :=  V_ROW_VALUE;
            WHEN 'BILLADDR2' THEN
                V_CUST_DEPOSIT_HDR_ROW.BILLADDR2                      :=  V_ROW_VALUE;
            WHEN 'BILLCITY' THEN
                V_CUST_DEPOSIT_HDR_ROW.BILLCITY                       :=  V_ROW_VALUE;
            WHEN 'BILLZIP' THEN
                V_CUST_DEPOSIT_HDR_ROW.BILLZIP                        :=  V_ROW_VALUE;
            WHEN 'BILLPHONE' THEN
                V_CUST_DEPOSIT_HDR_ROW.BILLPHONE                      :=  V_ROW_VALUE;
            WHEN 'RLS_RUN_CYCLE' THEN
                V_CUST_DEPOSIT_HDR_ROW.RLS_RUN_CYCLE                  :=  V_ROW_VALUE;
            WHEN 'LOAD_DATE' THEN
                V_CUST_DEPOSIT_HDR_ROW.LOAD_DATE                      :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            WHEN 'CLEARED_REASON' THEN
                 V_CUST_DEPOSIT_HDR_ROW.CLEARED_REASON                :=  V_ROW_VALUE;
            WHEN 'CLOSED_DATE' THEN
                 V_CUST_DEPOSIT_HDR_ROW.CLOSED_DATE                   :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            WHEN 'NOTES' THEN
                 V_CUST_DEPOSIT_HDR_ROW.NOTES                         :=  V_ROW_VALUE;
            WHEN 'REFERENCE_NUMBER' THEN
                 V_CUST_DEPOSIT_HDR_ROW.REFERENCE_NUMBER              :=  V_ROW_VALUE;
            ELSE NULL;
         END CASE;
       END IF;
   END LOOP ;
   V_CUST_DEPOSIT_HDR_ROW.LOAD_DATE := SYSDATE;
   OUT_CUSTOMER_DEPOSIT_HDR_TYPE := V_CUST_DEPOSIT_HDR_ROW;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_HDR_ROWTYPE_SP, ' || ' ' || 'IN_TABLE_NAME IS ' || IN_TABLE_NAME, SUBSTR(SQLERRM, 1, 500));
END CUST_DEPOSIT_HDR_ROWTYPE_SP;

PROCEDURE CUSTOMER_DEPOSIT_ROWTYPE_SP(
/******************************************************************************
CUSTOMER_DEPOSIT_ROWTYPE_SP

This procedure is intended to build the customer_deposit_details record type
created : 01/16/2018 sxh487 ccn project....
changed : 
*******************************************************************************/
   IN_TABLE_NAME                 IN     VARCHAR2,
   IN_ROW_DATA                   IN     VARCHAR2,
   OUT_CUSTOMER_DEPOSIT_TYPE     OUT    CUSTOMER_DEPOSIT%ROWTYPE)
IS
   CURSOR TABLE_FIELDS_CUR IS
      SELECT COLUMN_NAME,
             DATA_LENGTH COLUMN_SIZE,
             DATA_TYPE
        FROM ALL_TAB_COLUMNS
       WHERE TABLE_NAME = IN_TABLE_NAME
      ORDER BY COLUMN_ID ASC;

   --Variable decalration
   V_CUSTOMER_DEPOSIT_ROW  CUSTOMER_DEPOSIT%ROWTYPE;
   V_ROW_VALUE             VARCHAR2(500);
   V_ROW_DATA              SYS.XMLTYPE := XMLTYPE(IN_ROW_DATA);
BEGIN
   FOR TABLE_FIELDS_REC IN TABLE_FIELDS_CUR LOOP
      IF (V_ROW_DATA.EXISTSNODE('/'|| IN_TABLE_NAME|| '/' || TABLE_FIELDS_REC.COLUMN_NAME ||'/text()') = 1) THEN
          V_ROW_VALUE := V_ROW_DATA.EXTRACT(IN_TABLE_NAME|| '/' || TABLE_FIELDS_REC.COLUMN_NAME ||'/text()').GETSTRINGVAL();
         ---v_row_value := common_tools.eliminate_special_chrctrs(v_row_value);
         CASE TABLE_FIELDS_REC.COLUMN_NAME
            WHEN 'COST_CENTER_CODE' THEN
                V_CUSTOMER_DEPOSIT_ROW.COST_CENTER_CODE                      :=  V_ROW_VALUE;
            WHEN 'TRANSACTION_DATE' THEN
                V_CUSTOMER_DEPOSIT_ROW.TRANSACTION_DATE                      :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            WHEN 'TERMINAL_NUMBER' THEN
                V_CUSTOMER_DEPOSIT_ROW.TERMINAL_NUMBER                       :=  V_ROW_VALUE;
            WHEN 'TRANSACTION_NUMBER' THEN
                V_CUSTOMER_DEPOSIT_ROW.TRANSACTION_NUMBER                    :=  V_ROW_VALUE;
            WHEN 'TRANSACTION_GUID' THEN
                V_CUSTOMER_DEPOSIT_ROW.TRANSACTION_GUID                      :=  V_ROW_VALUE;
            WHEN 'CUSTOMER_ACCOUNT_NUMBER' THEN
                V_CUSTOMER_DEPOSIT_ROW.CUSTOMER_ACCOUNT_NUMBER               :=  V_ROW_VALUE;
            WHEN 'POS_TRANSACTION_CODE' THEN
                V_CUSTOMER_DEPOSIT_ROW.POS_TRANSACTION_CODE                  :=  V_ROW_VALUE;
            WHEN 'TRAN_TIMESTAMP' THEN
                V_CUSTOMER_DEPOSIT_ROW.TRAN_TIMESTAMP                        :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY HH12:MI:SS AM');
            WHEN 'NET_SALES' THEN
                V_CUSTOMER_DEPOSIT_ROW.NET_SALES                             :=  V_ROW_VALUE;
            WHEN 'NET_NON_MERCH' THEN
                V_CUSTOMER_DEPOSIT_ROW.NET_NON_MERCH                         :=  V_ROW_VALUE;
            WHEN 'NET_DISCOUNT' THEN
                V_CUSTOMER_DEPOSIT_ROW.NET_DISCOUNT                          :=  V_ROW_VALUE;
            WHEN 'LOAD_DATE' THEN
                V_CUSTOMER_DEPOSIT_ROW.LOAD_DATE                             :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            ELSE NULL;
         END CASE;
       END IF;
   END LOOP ;
   V_CUSTOMER_DEPOSIT_ROW.LOAD_DATE := SYSDATE;
   OUT_CUSTOMER_DEPOSIT_TYPE := V_CUSTOMER_DEPOSIT_ROW;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUSTOMER_DEPOSIT_ROWTYPE_SP, ' || ' ' || 'IN_TABLE_NAME IS ' || IN_TABLE_NAME, SUBSTR(SQLERRM, 1, 500));
END CUSTOMER_DEPOSIT_ROWTYPE_SP;

PROCEDURE CUST_DEP_DETAILS_ROWTYPE_SP(
/******************************************************************************
CUST_DEP_DETAILS_ROWTYPE_SP

This procedure is intended to build the customer_deposit_details record type
created : 01/16/2018 sxh487 ccn project....
changed : 02/26/2018 sxh487 Added ADJUSTED_DATE for UI adjustments/corrections

*******************************************************************************/
   IN_TABLE_NAME                 IN     VARCHAR2,
   IN_ROW_DATA                   IN     VARCHAR2,
   OUT_CUST_DEP_DET_TYPE         OUT    CUSTOMER_DEPOSIT_DETAILS%ROWTYPE)
IS
   CURSOR TABLE_FIELDS_CUR IS
      SELECT COLUMN_NAME,
             DATA_LENGTH COLUMN_SIZE,
             DATA_TYPE
        FROM ALL_TAB_COLUMNS
       WHERE TABLE_NAME = IN_TABLE_NAME
      ORDER BY COLUMN_ID ASC;

   --Variable decalration
   V_CUST_DEP_DET_ROW  CUSTOMER_DEPOSIT_DETAILS%ROWTYPE;
   V_ROW_VALUE         VARCHAR2(500);
   V_ROW_DATA          SYS.XMLTYPE := XMLTYPE(IN_ROW_DATA);
BEGIN
   FOR TABLE_FIELDS_REC IN TABLE_FIELDS_CUR LOOP
      IF (V_ROW_DATA.EXISTSNODE('/'|| IN_TABLE_NAME|| '/' || TABLE_FIELDS_REC.COLUMN_NAME ||'/text()') = 1) THEN
          V_ROW_VALUE := V_ROW_DATA.EXTRACT(IN_TABLE_NAME|| '/' || TABLE_FIELDS_REC.COLUMN_NAME ||'/text()').GETSTRINGVAL();
         ---v_row_value := common_tools.eliminate_special_chrctrs(v_row_value);
         CASE TABLE_FIELDS_REC.COLUMN_NAME
            WHEN 'COST_CENTER_CODE' THEN
                V_CUST_DEP_DET_ROW.COST_CENTER_CODE                      :=  V_ROW_VALUE;
            WHEN 'TRANSACTION_DATE' THEN
                V_CUST_DEP_DET_ROW.TRANSACTION_DATE                      :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            WHEN 'TERMINAL_NUMBER' THEN
                V_CUST_DEP_DET_ROW.TERMINAL_NUMBER                       :=  V_ROW_VALUE;
            WHEN 'TRANSACTION_NUMBER' THEN
                V_CUST_DEP_DET_ROW.TRANSACTION_NUMBER                    :=  V_ROW_VALUE;
            WHEN 'TRANSACTION_GUID' THEN
                V_CUST_DEP_DET_ROW.TRANSACTION_GUID                      :=  V_ROW_VALUE;
            WHEN 'CUSTOMER_ACCOUNT_NUMBER' THEN
                V_CUST_DEP_DET_ROW.CUSTOMER_ACCOUNT_NUMBER               :=  V_ROW_VALUE;
            WHEN 'POS_TRANSACTION_CODE' THEN
                V_CUST_DEP_DET_ROW.POS_TRANSACTION_CODE                  :=  V_ROW_VALUE;
            WHEN 'TRAN_TIMESTAMP' THEN
                V_CUST_DEP_DET_ROW.TRAN_TIMESTAMP                        :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY HH12:MI:SS AM');
            WHEN 'TRANSACTION_TYPE' THEN
                V_CUST_DEP_DET_ROW.TRANSACTION_TYPE                      :=  V_ROW_VALUE;
            WHEN 'TOTAL_SALES' THEN
                V_CUST_DEP_DET_ROW.TOTAL_SALES                           :=  V_ROW_VALUE;
            WHEN 'CUSTOMER_NET_BALANCE' THEN
                V_CUST_DEP_DET_ROW.CUSTOMER_NET_BALANCE                  :=  V_ROW_VALUE;
            WHEN 'LOAD_DATE' THEN
                V_CUST_DEP_DET_ROW.LOAD_DATE                             :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            WHEN 'RLS_RUN_CYCLE' THEN
                V_CUST_DEP_DET_ROW.RLS_RUN_CYCLE                         :=  V_ROW_VALUE;
            WHEN 'ADJUSTED_DATE' THEN
                V_CUST_DEP_DET_ROW.ADJUSTED_DATE                         :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            WHEN 'REFERENCE_NUMBER' THEN
                V_CUST_DEP_DET_ROW.REFERENCE_NUMBER                      :=  V_ROW_VALUE;
            WHEN 'CLEARED_REASON' THEN
                V_CUST_DEP_DET_ROW.CLEARED_REASON                        :=  V_ROW_VALUE;
            WHEN 'NOTES' THEN
                V_CUST_DEP_DET_ROW.NOTES                                 :=  V_ROW_VALUE;
            WHEN 'CLOSED_DATE' THEN
                V_CUST_DEP_DET_ROW.CLOSED_DATE                           :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
            WHEN 'GL_DIVISION' THEN
                V_CUST_DEP_DET_ROW.GL_DIVISION                           :=  V_ROW_VALUE;
            ELSE NULL;
         END CASE;
       END IF;
   END LOOP ;
   V_CUST_DEP_DET_ROW.LOAD_DATE := SYSDATE;
   OUT_CUST_DEP_DET_TYPE := V_CUST_DEP_DET_ROW;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEP_DETAILS_ROWTYPE_SP, ' || ' ' || 'IN_TABLE_NAME IS ' || IN_TABLE_NAME, SUBSTR(SQLERRM, 1, 500));
END CUST_DEP_DETAILS_ROWTYPE_SP;

PROCEDURE CUST_DEPOSIT_HEADER_U_SP (
/*******************************************************************************
    This procedure is intended to updates records in CUSTOMER_DEPOSIT_HEADER table

Created : 04/23/2018 sxh487
Changed : 
*******************************************************************************/
IN_ROW IN     CUSTOMER_DEPOSIT_HEADER%ROWTYPE)
IS
V_ROW         CUSTOMER_DEPOSIT_HEADER_HST%ROWTYPE;
BEGIN
     V_ROW := COMMON_TOOLS.BUILD_DEP_HDR_HST_FROM_CURR(IN_ROW.CUSTOMER_ACCOUNT_NUMBER);
     --Audit hist
     TABLE_IU_PKG.CUST_DEPOSIT_HDR_HIST_I_SP(V_ROW);
     UPDATE CUSTOMER_DEPOSIT_HEADER
        SET ROW = IN_ROW
      WHERE NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX') = NVL(IN_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX'));
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_HEADER_U_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEPOSIT_HEADER_U_SP;

PROCEDURE CUSTOMER_DEPOSIT_DETAILS_U_SP (
/*******************************************************************************
    This procedure is intended to updates records in CUST_DEP_REDEMPTION_DETAILS table

Created : 04/23/2018 sxh487
Changed : 
*******************************************************************************/
IN_ROW IN     CUSTOMER_DEPOSIT_DETAILS%ROWTYPE)
IS
V_ROW         CUSTOMER_DEPOSIT_DETAILS_HIST%ROWTYPE;
BEGIN
     V_ROW := COMMON_TOOLS.BUILD_DEP_DET_HST_FROM_CURR(IN_ROW);
     --inserting in history before updating the current record
     TABLE_IU_PKG.CUST_DEP_DET_HST_I_SP(V_ROW);
     UPDATE CUSTOMER_DEPOSIT_DETAILS
        SET ROW = IN_ROW
      WHERE NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX') = NVL(IN_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX'))
        AND NVL(COST_CENTER_CODE,'XXX') =  NVL(IN_ROW.COST_CENTER_CODE,NVL(COST_CENTER_CODE,'XXX'))
        AND NVL(TERMINAL_NUMBER,'XXX')  = NVL(IN_ROW.TERMINAL_NUMBER,NVL(TERMINAL_NUMBER,'XXX'))   
        AND NVL(TRANSACTION_NUMBER,'XXX')  = NVL(IN_ROW.TRANSACTION_NUMBER,NVL(TRANSACTION_NUMBER,'XXX')) 
        AND NVL(TRANSACTION_DATE,TRUNC(SYSDATE)) = NVL(IN_ROW.TRANSACTION_DATE,NVL(TRANSACTION_DATE,TRUNC(SYSDATE)));
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUSTOMER_DEPOSIT_DETAILS_U_SP', SUBSTR(SQLERRM,1,500));
END CUSTOMER_DEPOSIT_DETAILS_U_SP;

PROCEDURE CUST_DEP_CREDIT_U_SP (
/*******************************************************************************
    This procedure is intended to updates records in CUST_DEP_CREDIT_DETAILS table

Created : 04/23/2018 sxh487
Changed : 
*******************************************************************************/
IN_ROW IN     CUST_DEP_CREDIT_DETAILS%ROWTYPE)
IS
BEGIN
    UPDATE CUST_DEP_CREDIT_DETAILS
       SET ROW = IN_ROW
     WHERE NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX') = NVL(IN_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX'))
       AND NVL(COST_CENTER_CODE,'XXX') =  NVL(IN_ROW.COST_CENTER_CODE,NVL(COST_CENTER_CODE,'XXX'))
       AND NVL(TERMINAL_NUMBER,'XXX')  = NVL(IN_ROW.TERMINAL_NUMBER,NVL(TERMINAL_NUMBER,'XXX'))   
       AND NVL(TRANSACTION_NUMBER,'XXX')  = NVL(IN_ROW.TRANSACTION_NUMBER,NVL(TRANSACTION_NUMBER,'XXX')) 
       AND NVL(TRANSACTION_DATE,TRUNC(SYSDATE)) = NVL(IN_ROW.TRANSACTION_DATE,NVL(TRANSACTION_DATE,TRUNC(SYSDATE)));
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEP_CREDIT_U_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEP_CREDIT_U_SP;

PROCEDURE CUST_DEP_REDEMPTION_U_SP (
/*******************************************************************************
    This procedure is intended to updates records in CUST_DEP_REDEMPTION_DETAILS table

Created : 04/23/2018 sxh487
Changed : 
*******************************************************************************/
IN_ROW IN     CUST_DEP_REDEMPTION_DETAILS%ROWTYPE)
IS
BEGIN
    UPDATE CUST_DEP_REDEMPTION_DETAILS
       SET ROW = IN_ROW
     WHERE NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX') = NVL(IN_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX'))
       AND NVL(COST_CENTER_CODE,'XXX') =  NVL(IN_ROW.COST_CENTER_CODE,NVL(COST_CENTER_CODE,'XXX'))
       AND NVL(TERMINAL_NUMBER,'XXX')  = NVL(IN_ROW.TERMINAL_NUMBER,NVL(TERMINAL_NUMBER,'XXX'))   
       AND NVL(TRANSACTION_NUMBER,'XXX')  = NVL(IN_ROW.TRANSACTION_NUMBER,NVL(TRANSACTION_NUMBER,'XXX')) 
       AND NVL(TRANSACTION_DATE,TRUNC(SYSDATE)) = NVL(IN_ROW.TRANSACTION_DATE,NVL(TRANSACTION_DATE,TRUNC(SYSDATE)));
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEP_REDEMPTION_U_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEP_REDEMPTION_U_SP;

PROCEDURE CUST_DEPOSIT_HDR_HIST_I_SP (
/*******************************************************************************
    This procedure is intended to insert records into CUSTOMER_DEPOSIT_HEADER_HST table

Created : 04/23/2018 sxh487 CCN Project....
Changed : 
*******************************************************************************/
IN_ROW     IN     CUSTOMER_DEPOSIT_HEADER_HST%ROWTYPE)
IS
BEGIN
    INSERT INTO CUSTOMER_DEPOSIT_HEADER_HST VALUES IN_ROW;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_HDR_HIST_I_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEPOSIT_HDR_HIST_I_SP;

PROCEDURE CUST_DEPOSIT_HEADER_I_SP(
/*******************************************************************************
CUST_DEPOSIT_HEADER_I_SP

This procedure is intended to insert into  CUSTOMER_DEPOSIT_HEADER
created : 02/27/2018 SXH487 -- ccn project
changed :

*******************************************************************************/
IN_ROW   IN     CUSTOMER_DEPOSIT_HEADER%ROWTYPE
)
IS
BEGIN
    INSERT INTO CUSTOMER_DEPOSIT_HEADER VALUES IN_ROW;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        CUST_DEPOSIT_HEADER_U_SP(IN_ROW);
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_HEADER_I_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEPOSIT_HEADER_I_SP;

PROCEDURE CUST_DEPOSIT_I_SP(
/*******************************************************************************
CUST_DEPOSIT_I_SP

This procedure is intended to insert new customer_deposit records
created : 02/27/2018 SXH487 -- ccn project
changed :

*******************************************************************************/
IN_CUST_DEPOSIT_rec   IN     CUSTOMER_DEPOSIT%ROWTYPE,
OUT_TRANGUID          OUT    CUSTOMER_DEPOSIT.TRANSACTION_GUID%TYPE)
IS
BEGIN
   --insert new customer_deposit corrections row
   INSERT INTO CUSTOMER_DEPOSIT VALUES IN_CUST_DEPOSIT_rec RETURNING TRANSACTION_GUID INTO OUT_TRANGUID;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_I_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEPOSIT_I_SP;

PROCEDURE CUST_DEPOSIT_CREDIT_I_SP(
/*******************************************************************************
CUST_DEPOSIT_CREDIT_I_SP

This procedure is intended to insert into  CUST_DEP_CREDIT_DETAILS
created : 02/27/2018 SXH487 -- ccn project
changed :

*******************************************************************************/
IN_CUST_DEP_CREDIT_rec   IN     CUST_DEP_CREDIT_DETAILS%ROWTYPE
)
IS
BEGIN
   INSERT INTO CUST_DEP_CREDIT_DETAILS VALUES IN_CUST_DEP_CREDIT_rec;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        CUST_DEP_CREDIT_U_SP(IN_CUST_DEP_CREDIT_rec);
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_CREDIT_I_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEPOSIT_CREDIT_I_SP;

PROCEDURE CUST_DEPOSIT_REDEMPTION_I_SP(
/*******************************************************************************
CUST_DEPOSIT_REDEMPTION_I_SP

This procedure is intended to insert into  CUST_DEP_REDEMPTION_DETAILS
created : 02/27/2018 SXH487 -- ccn project
changed :

*******************************************************************************/
IN_CUST_DEP_REDEMPTION_rec   IN     CUST_DEP_REDEMPTION_DETAILS%ROWTYPE
)
IS
BEGIN
   INSERT INTO CUST_DEP_REDEMPTION_DETAILS VALUES IN_CUST_DEP_REDEMPTION_rec;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        CUST_DEP_REDEMPTION_U_SP(IN_CUST_DEP_REDEMPTION_rec);
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEPOSIT_REDEMPTION_I_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEPOSIT_REDEMPTION_I_SP;

PROCEDURE CUST_DEP_DET_I_SP(
/*******************************************************************************
CUST_DEP_DET_I_SP

This procedure is intended to insert new customer_deposit_details records
created : 02/27/2018 SXH487 -- ccn project
changed :

*******************************************************************************/
IN_CUST_DEPOSIT_DETAILS_rec   IN     CUSTOMER_DEPOSIT_DETAILS%ROWTYPE)
IS
BEGIN
   INSERT INTO CUSTOMER_DEPOSIT_DETAILS VALUES IN_CUST_DEPOSIT_DETAILS_rec;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        CUSTOMER_DEPOSIT_DETAILS_U_SP(IN_CUST_DEPOSIT_DETAILS_rec);
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEP_DET_I_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEP_DET_I_SP;

PROCEDURE CUST_DEP_DET_HST_I_SP (
/*******************************************************************************
 This procedure is intended to insert records into CUSTOMER_DEPOSIT_DETAILS_HIST table
created : 02/27/2018 SXH487 -- ccn project
changed :
*******************************************************************************/
IN_ROW     IN     CUSTOMER_DEPOSIT_DETAILS_HIST%ROWTYPE)
IS
BEGIN
    INSERT INTO CUSTOMER_DEPOSIT_DETAILS_HIST VALUES IN_ROW;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CUST_DEP_DET_HST_I_SP', SUBSTR(SQLERRM,1,500));
END CUST_DEP_DET_HST_I_SP;

END TABLE_IU_PKG;