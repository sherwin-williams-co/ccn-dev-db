--truncate both tables
--reset the sequence numbers
TRUNCATE TABLE CUST_DEP_CREDIT_DETAILS;
TRUNCATE TABLE CUST_DEP_REDEMPTION_DETAILS;
DROP SEQUENCE SEQ_REDEMPTION_ID; 
DROP SEQUENCE SEQ_CREDIT_ID; 
CREATE SEQUENCE SEQ_REDEMPTION_ID  MINVALUE 0 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;
CREATE SEQUENCE SEQ_CREDIT_ID  MINVALUE 0 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
/

DECLARE
   V_LOAD_DATE      DATE;
   V_CREDIT_ROW     CUST_DEP_CREDIT_DETAILS%ROWTYPE;
   V_REDEMPTION_ROW CUST_DEP_REDEMPTION_DETAILS%ROWTYPE;   

   V_ORIG_DEP_NBR   CUSTOMER_DEPOSIT_DETAILS.TRANSACTION_NUMBER%TYPE;
   V_ORIG_TERM_NBR  CUSTOMER_DEPOSIT_DETAILS.TERMINAL_NUMBER%TYPE;
   V_ORIG_TRAN_DATE CUSTOMER_DEPOSIT_DETAILS.TRANSACTION_DATE%TYPE;
   V_COMMIT         NUMBER := 0;
BEGIN
    FOR rec IN (SELECT * FROM CUSTOMER_DEPOSIT_DETAILS ORDER BY CUSTOMER_ACCOUNT_NUMBER, TRAN_TIMESTAMP) LOOP --56635 prod 480653
       IF rec.TRANSACTION_TYPE = 'DEPOSIT' THEN
            V_CREDIT_ROW.CREDIT_ID                := SEQ_CREDIT_ID.nextval;
            V_CREDIT_ROW.COST_CENTER_CODE         := rec.COST_CENTER_CODE;
            V_CREDIT_ROW.CUSTOMER_ACCOUNT_NUMBER  := rec.CUSTOMER_ACCOUNT_NUMBER;
            V_CREDIT_ROW.TRANSACTION_NUMBER       := rec.TRANSACTION_NUMBER;
            V_CREDIT_ROW.TRANSACTION_DATE         := rec.TRANSACTION_DATE;
            V_CREDIT_ROW.TERMINAL_NUMBER          := rec.TERMINAL_NUMBER;           
            V_CREDIT_ROW.DEPOSIT_REMAINING_BAL    := rec.CSTMR_DPST_SALES_LN_ITM_AMT;
            V_CREDIT_ROW.TRAN_TIMESTAMP           := rec.TRAN_TIMESTAMP;
            V_CREDIT_ROW.LOAD_DATE                := rec.LOAD_DATE;
            TABLE_IU_PKG.CUST_DEPOSIT_CREDIT_I_SP(V_CREDIT_ROW);
       END IF;
       IF rec.TRANSACTION_TYPE = 'REDEMPTION' THEN
               CUSTOMER_DEPOSIT_MAINT_PKG.ORIG_DEP_REM_BAL_UPD(rec.CSTMR_DPST_SALES_LN_ITM_AMT, rec.CUSTOMER_ACCOUNT_NUMBER, rec.TRANSACTION_DATE, V_ORIG_DEP_NBR, V_ORIG_TERM_NBR, V_ORIG_TRAN_DATE);
               
               V_REDEMPTION_ROW.REDEMPTION_ID            := SEQ_REDEMPTION_ID.nextval;
               V_REDEMPTION_ROW.COST_CENTER_CODE         := rec.COST_CENTER_CODE;
               V_REDEMPTION_ROW.CUSTOMER_ACCOUNT_NUMBER  := rec.CUSTOMER_ACCOUNT_NUMBER;
               V_REDEMPTION_ROW.TRANSACTION_NUMBER       := rec.TRANSACTION_NUMBER;
               V_REDEMPTION_ROW.TRANSACTION_DATE         := rec.TRANSACTION_DATE;
               V_REDEMPTION_ROW.TERMINAL_NUMBER          := rec.TERMINAL_NUMBER;           
               V_REDEMPTION_ROW.ORIGINAL_DEP_TRANS_NBR   := V_ORIG_DEP_NBR;  
               V_REDEMPTION_ROW.ORIGINAL_DEP_TERM_NBR    := V_ORIG_TERM_NBR;
               V_REDEMPTION_ROW.ORIGINAL_DEP_TRAN_DATE   := V_ORIG_TRAN_DATE;
               V_REDEMPTION_ROW.TRAN_TIMESTAMP           := rec.TRAN_TIMESTAMP;
               V_REDEMPTION_ROW.LOAD_DATE                := rec.LOAD_DATE;
               
               TABLE_IU_PKG.CUST_DEPOSIT_REDEMPTION_I_SP(V_REDEMPTION_ROW);
       END IF;
       
       V_COMMIT := V_COMMIT + 1;
       IF V_COMMIT > 500 THEN
          COMMIT;
          V_COMMIT := 0;
       END IF;
   END LOOP;
   COMMIT;
END;
/
