create or replace PACKAGE BODY SD_DAILY_RECS_REPORT
/**************************************************************** 
This package will generate the daily recs based on the data recevied the previous day
created : 11/03/2014 jxc517 CCN Project....
changed : 05/11/2015 sxt410 CCN Projesct... 
          Added Procedures ROYAL_DRAFT_PAID_AMT, ROYAL_AUTO_DRAFT_MNTN_AMT 
          and ROYAL_AUTO_DRAFT_PAID_AMT.
*****************************************************************/
AS

FUNCTION SUNTRUST_NON_AUTOMOTIVE_AMT(
/*****************************************************************************
	SUNTRUST_NON_AUTOMOTIVE_AMT
	This function will return the suntrust bank non-automootive daily drafts amount
  SUNTRUST DRAFT MAINT RECORDS WRITTEN (1) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed : 03/17/2016 nxk927 CCN Project....
          Reverted the code that was made to handle manual drafts and their 
		  maintenance
Modified: 04/05/2016 jxc517 CCN Project Team....
          Added statement type 'GC' for canada along with 'CN'
        : 09/27/2017 nxk927 CCN Project....
          Load date field will have time stamp going forward. Using the last batch run date
          to generate the report
changed : 09/28/2017 nxk927 CCN Project....
          Passing the last batch start date to pick the data loaded in the last batch
******************************************************************************/
IN_DATE IN DATE)
RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(ORIGINAL_NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE LOAD_DATE >= IN_DATE
       AND CYCLE_RUN_NUMBER IS NOT NULL
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE NOT IN ('CN', 'GC', 'AU'));

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END SUNTRUST_NON_AUTOMOTIVE_AMT;

FUNCTION BANK_PAID_AMT(
/*****************************************************************************
	BANK_PAID_AMT
	This function will return the daily drafts paid amount
  BANK PAID RECORDS READ (2) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed : 02/13/2015 DXV848  Added condition - if amount_change_date is null then use original_net_amount else use net_amount
Modified: 04/05/2016 jxc517 CCN Project Team....
          Added statement type 'GC' for canada along with 'CN'
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0)) 
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE PAID_DATE = IN_TRANSACTION_DATE
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE NOT IN ('CN', 'GC', 'AU'));

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END BANK_PAID_AMT;

PROCEDURE TOTAL_STORE_DRAFTS_MNTN(
/*****************************************************************************
	TOTAL_STORE_DRAFTS_MNTN
	This function will return the total bank daily drafts maintenance count
  TOTAL DRAFT DATABASE RECORDS MODIFIED COUNT (3a) - STBD0100
  TOTAL DRAFT DATABASE RECORDS MODIFIED AMOUNT (3b) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed : 02/13/2015 DXV848  Added condition - if amount_change_date is null then use original_net_amount else use net_amount
Modified: 04/05/2016 jxc517 CCN Project Team....
          Added statement type 'GC' for canada along with 'CN'
******************************************************************************/
    IN_TRANSACTION_DATE IN     DATE,
    OUT_COUNT              OUT NUMBER,
    OUT_AMOUNT             OUT NUMBER)
IS
BEGIN
    SELECT COUNT(*),
           SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0))
      INTO OUT_COUNT,
           OUT_AMOUNT
      FROM STORE_DRAFTS SD
     WHERE PAID_DATE = IN_TRANSACTION_DATE
       AND CYCLE_RUN_NUMBER IS NOT NULL
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE NOT IN ('CN', 'GC', 'AU'));
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END TOTAL_STORE_DRAFTS_MNTN;

PROCEDURE CONTROL_DETAILS(
/*****************************************************************************
	CONTROL_DETAILS
	This function will return the total bank daily drafts maintenance count
  TOTAL DRAFT DATABASE RECORDS MODIFIED COUNT (4a) - STBD01EX
  TOTAL DRAFT DATABASE RECORDS MODIFIED AMOUNT (4b) - STBD01EX

created : 06/11/2014 jxc517 CCN Project....
changed : 02/13/2015 DXV848  Added condition - if amount_change_date is null then use original_net_amount else use net_amount
Modified: 04/05/2016 jxc517 CCN Project Team....
          Added statement type 'GC' for canada along with 'CN'
******************************************************************************/
    IN_TRANSACTION_DATE IN     DATE,
    OUT_COUNT              OUT NUMBER,
    OUT_AMOUNT             OUT NUMBER)
IS
BEGIN
    SELECT COUNT(*),
           SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0))
      INTO OUT_COUNT,
           OUT_AMOUNT
      FROM STORE_DRAFTS SD
     WHERE PAID_DATE = IN_TRANSACTION_DATE
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE NOT IN ('CN', 'GC', 'AU'));
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END CONTROL_DETAILS;

FUNCTION TOTAL_STORE_DRAFTS_AMT(
/*****************************************************************************
	TOTAL_STORE_DRAFTS_AMT
	This function will return the total daily drafts amount
  POINT OF SALE BATCH AUDIT - STORE DRAFTS PMM RPT (5) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed : 02/13/2015 DXV848  Added condition - if amount_change_date is null then use original_net_amount else use net_amount
changed : 03/17/2016 nxk927 CCN Project....
          Reverted the code that was made to handle manual drafts and their 
          maintenance
        : 09/27/2017 nxk927 CCN Project....
          Load date field will have time stamp going forward. Using the last batch run date
          to generate the report
changed : 09/28/2017 nxk927 CCN Project....
          Passing the last batch start date to pick the data loaded in the last batch
******************************************************************************/
IN_DATE IN DATE)
RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0))
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE LOAD_DATE >= IN_DATE
       AND POS_TRANSACTION_CODE IN ('13','19','31','82','91');

    --This value should be displayed as (-)ve as per the report
    RETURN -1 * V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END TOTAL_STORE_DRAFTS_AMT;

FUNCTION ROYAL_AMT(
/*****************************************************************************
	ROYAL_AMT
	This function will return the royal bank daily drafts amount
  ROYAL DRAFT MAINT RECORDS WRITTEN (6a) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed : 02/13/2015 DXV848  Added condition - if amount_change_date is null then use original_net_amount else use net_amount
changed : 03/17/2016 nxk927 CCN Project....
          Reverted the code that was made to handle manual drafts and their 
		  maintenance
Modified: 04/05/2016 jxc517 CCN Project Team....
          Added statement type 'GC' for canada along with 'CN'
        : 09/27/2017 nxk927 CCN Project....
          Load date field will have time stamp going forward. Using the last batch run date
          to generate the report
changed : 09/28/2017 nxk927 CCN Project....
          Passing the last batch start date to pick the data loaded in the last batch
******************************************************************************/
IN_DATE IN DATE)
RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0))
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE LOAD_DATE >= IN_DATE
       AND CYCLE_RUN_NUMBER IS NOT NULL
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE IN ('CN', 'GC'));

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END ROYAL_AMT;

FUNCTION ROYAL_DRAFT_PAID_AMT(
/*****************************************************************************
    ROYAL_DRAFT_PAID_AMT
    This function will return the daily drafts paid amount.
    ROYAL TAG DRAFT PAID DRAFTS (6b) - STBD06EX

created : 05/11/2015 sxt410 CCN Project....
Modified: 04/05/2016 jxc517 CCN Project Team....
          Added statement type 'GC' for canada along with 'CN'
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0))
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE PAID_DATE = IN_TRANSACTION_DATE
       AND CYCLE_RUN_NUMBER IS NOT NULL
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE IN ('CN', 'GC'));

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END ROYAL_DRAFT_PAID_AMT;

FUNCTION ROYAL_AUTO_DRAFT_MNTN_AMT(
/*****************************************************************************
    ROYAL_AUTO_DRAFT_MNTN_AMT
    This function will return the Royal bank Automotive drafts amount.
    ROYAL AUTO DRAFT MAINT RECORDS WRITTEN (6c) - STBD0100

created : 05/11/2015 sxt410 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0))
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE PAID_DATE = IN_TRANSACTION_DATE
       AND CYCLE_RUN_NUMBER IS NOT NULL
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE = 'AC');

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END ROYAL_AUTO_DRAFT_MNTN_AMT;

FUNCTION ROYAL_AUTO_DRAFT_PAID_AMT(
/*****************************************************************************
    ROYAL_AUTO_DRAFT_PAID_AMT
    This function will return the Royal bank Automotive drafts paid amount. 
    ROYAL AUTO DRAFT PAID DRAFTS (6d) - STBD06EX

created : 05/11/2015 sxt410 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0)) 
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE PAID_DATE = IN_TRANSACTION_DATE
       AND CYCLE_RUN_NUMBER IS NOT NULL     
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE = 'AC');

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END ROYAL_AUTO_DRAFT_PAID_AMT;

FUNCTION SUNTRUST_AUTOMOTIVE_AMT(
/*****************************************************************************
	SUNTRUST_AUTOMOTIVE_AMT
	This function will return the suntrust bank automootive daily drafts amount
  AUTOMOTIVE SUNTRUST DRAFT MAINT RECORDS WRITTEN (7) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed : 03/17/2016 nxk927 CCN Project....
          Reverted the code that was made to handle manual drafts and their 
		      maintenance
        : 09/27/2017 nxk927 CCN Project....
          Load date field will have time stamp going forward. Using the last batch run date
          to generate the report
changed : 09/28/2017 nxk927 CCN Project....
          Passing the last batch start date to pick the data loaded in the last batch
******************************************************************************/
IN_DATE IN DATE)
RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(ORIGINAL_NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE LOAD_DATE >= IN_DATE
       AND CYCLE_RUN_NUMBER IS NOT NULL
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE = 'AU');

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END SUNTRUST_AUTOMOTIVE_AMT;

FUNCTION SUNTRUST_STORE_DRAFTS_MNTN_AMT(
/*****************************************************************************
	SUNTRUST_STORE_DRAFTS_MNTN_AMT
	This function will return the suntrust bank daily drafts maintenance amount
  SUNTRUST DRAFT MAINT RECORDS WRITTEN (8) - STBD1300

created : 06/11/2014 jxc517 CCN Project....
changed : 02/13/2015 DXV848  Added condition - if amount_change_date is null then use original_net_amount else use net_amount
Modified: 04/05/2016 jxc517 CCN Project Team....
          Added statement type 'GC' for canada along with 'CN'
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0))
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE AMOUNT_CHANGE_DATE = IN_TRANSACTION_DATE
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE NOT IN ('CN', 'GC', 'AU'));

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END SUNTRUST_STORE_DRAFTS_MNTN_AMT;

FUNCTION SD_AUDIT_REC_READ_AMT(
/*****************************************************************************
	SD_AUDIT_REC_READ_AMT
	This function will return the daily drafts with amount change date, void date and stop pay date as 
  passed date
  SUNTRUST DRAFT AUDIT RECORDS READ (9) - STBD1300

created : 06/11/2014 jxc517 CCN Project....
changed : 02/13/2015 DXV848  Added condition - if amount_change_date is null then use original_net_amount else use net_amount
Modified: 04/05/2016 jxc517 CCN Project Team....
          Added statement type 'GC' for canada along with 'CN'
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0))
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE (AMOUNT_CHANGE_DATE        = IN_TRANSACTION_DATE
            OR VOID_DATE              = IN_TRANSACTION_DATE
            OR STOP_PAY_DATE          = IN_TRANSACTION_DATE
            OR STOP_PAY_REMOVE_DATE   = IN_TRANSACTION_DATE
            OR (ISSUE_DATE            = IN_TRANSACTION_DATE AND CYCLE_RUN_NUMBER IS NULL))
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE NOT IN ('CN', 'GC', 'AU'));

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END SD_AUDIT_REC_READ_AMT;

FUNCTION SD_GRAND_TOTAL_AMT(
/*****************************************************************************
	SD_GRAND_TOTAL_AMT
	This function will return the grand total
  GRAND TOTAL OUTSTANDING DRAFTS (10) - STBD16CW

created : 06/11/2014 jxc517 CCN Project....
changed : 02/13/2015 DXV848  Added condition - if amount_change_date is null then use original_net_amount else use net_amount
        : 09/27/2017 nxk927 CCN Project....
          Load date field will have time stamp going forward. Using the last batch run date
          to generate the report
******************************************************************************/
    IN_TRANSACTION_DATE DATE,
    IN_DATE             DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NVL(DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT), 0))
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE LOAD_DATE >= IN_DATE
        OR PAID_DATE = IN_TRANSACTION_DATE;

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END SD_GRAND_TOTAL_AMT;

PROCEDURE SNTRST_STRE_DRAFTS_MNTN_AMT_ST(
/*****************************************************************************
	SNTRST_STRE_DRAFTS_MNTN_AMT_ST
    This procedure will display the suntrust bank daily drafts maintenance records
    for given transaction date.
    SUNTRUST DRAFT MAINT RECORDS WRITTEN (8a) - STBD1300

created : 02/23/2017 axt754 CCN Project....

******************************************************************************/
    IN_TRANSACTION_DATE DATE)
IS
    V_CLOB        CLOB;
    V_HEADER_CLOB CLOB;
    cursor V_DFT_MAINT_REC IS
      SELECT COST_CENTER_CODE
             ,CHECK_SERIAL_NUMBER
             ,TRANSACTION_DATE
             ,TERMINAL_NUMBER
             ,TRANSACTION_NUMBER
             ,ISSUE_DATE
             ,PAID_DATE
             ,VOID_DATE
             ,AMOUNT_CHANGE_DATE
             ,CHANGE_DATE
             ,STOP_PAY_DATE
             ,STOP_PAY_REMOVE_DATE
             ,DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT) AMOUNT
        FROM STORE_DRAFTS SD
       WHERE AMOUNT_CHANGE_DATE = IN_TRANSACTION_DATE
        AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE NOT IN ('CN', 'GC', 'AU'));

BEGIN
    V_HEADER_CLOB := V_HEADER_CLOB
                     ||'COST_CENTER_CODE,'
                     ||'CHECK_SERIAL_NUMBER,'
                     ||'TRANSACTION_DATE,'
                     ||'AMOUNT,'
                     ||'TERMINAL_NUMBER,'
                     ||'TRANSACTION_NUMBER,'
                     ||'ISSUE_DATE,'
                     ||'PAID_DATE,'
                     ||'VOID_DATE,'
                     ||'AMOUNT_CHANGE_DATE,'
                     ||'CHANGE_DATE,'
                     ||'STOP_PAY_DATE,'
                     ||'STOP_PAY_REMOVE_DATE'||CHR(10);

    FOR rec in V_DFT_MAINT_REC LOOP
         -- Appended '="attribute"', so that if opened in excel the '0' on left side wouldn't be ignored..
         V_CLOB := V_CLOB||
                   '="'||rec.COST_CENTER_CODE||'",'||
                   '="'||rec.CHECK_SERIAL_NUMBER||'",'||
                   '="'||rec.TRANSACTION_DATE||'",'||
                   rec.AMOUNT||','||
                   '="'||rec.TERMINAL_NUMBER||'",'||
                   '="'||rec.TRANSACTION_NUMBER||'",'||
                   '="'||rec.ISSUE_DATE||'",'||
                   '="'||rec.PAID_DATE||'",'||
                   '="'||rec.VOID_DATE||'",'||
                   '="'||rec.AMOUNT_CHANGE_DATE||'",'||
                   '="'||rec.CHANGE_DATE||'",'||
                   '="'||rec.STOP_PAY_DATE||'",'||
                   '="'||rec.STOP_PAY_REMOVE_DATE||'"'||CHR(10);
    END LOOP;

    IF V_CLOB <> EMPTY_CLOB() THEN
        -- Append Header
        V_CLOB := V_HEADER_CLOB||V_CLOB;
        MAIL_PKG.SEND_MAIL('SD_DLY_SNTRST_MAINT',NULL, NULL, V_CLOB);
    END IF;

END SNTRST_STRE_DRAFTS_MNTN_AMT_ST;

PROCEDURE SD_AUDIT_REC_READ_AMT_SPLT(
/*****************************************************************************
	SD_AUDIT_REC_READ_AMT_SPLT
    This Procedure will display records of the daily drafts with amount change date,
    void date and stop pay date as passed date
    SUNTRUST DRAFT AUDIT RECORDS READ (9a) - STBD1300

created : 02/23/2017 axt754 CCN Project....

******************************************************************************/
    IN_TRANSACTION_DATE DATE)
IS
    V_CLOB        CLOB;
    V_HEADER_CLOB CLOB;
    CURSOR V_DFT_AUDIT_REC IS
      SELECT COST_CENTER_CODE
             ,CHECK_SERIAL_NUMBER
             ,TRANSACTION_DATE
             ,TERMINAL_NUMBER
             ,TRANSACTION_NUMBER
             ,ISSUE_DATE
             ,PAID_DATE
             ,VOID_DATE
             ,AMOUNT_CHANGE_DATE
             ,CHANGE_DATE
             ,STOP_PAY_DATE
             ,STOP_PAY_REMOVE_DATE
             ,DECODE(SD.AMOUNT_CHANGE_DATE, NULL, SD.ORIGINAL_NET_AMOUNT,SD.NET_AMOUNT) AMOUNT
        FROM STORE_DRAFTS SD
       WHERE (AMOUNT_CHANGE_DATE      = IN_TRANSACTION_DATE
            OR VOID_DATE              = IN_TRANSACTION_DATE
            OR STOP_PAY_DATE          = IN_TRANSACTION_DATE
            OR STOP_PAY_REMOVE_DATE   = IN_TRANSACTION_DATE
            OR (ISSUE_DATE            = IN_TRANSACTION_DATE AND CYCLE_RUN_NUMBER IS NULL))
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE NOT IN ('CN', 'GC', 'AU'));

BEGIN
    V_HEADER_CLOB := V_HEADER_CLOB
                     ||'COST_CENTER_CODE,'
                     ||'CHECK_SERIAL_NUMBER,'
                     ||'TRANSACTION_DATE,'
                     ||'AMOUNT,'
                     ||'TERMINAL_NUMBER,'
                     ||'TRANSACTION_NUMBER,'
                     ||'ISSUE_DATE,'
                     ||'PAID_DATE,'
                     ||'VOID_DATE,'
                     ||'AMOUNT_CHANGE_DATE,'
                     ||'CHANGE_DATE,'
                     ||'STOP_PAY_DATE,'
                     ||'STOP_PAY_REMOVE_DATE'||CHR(10);

    FOR rec in V_DFT_AUDIT_REC LOOP
         -- Appended '="attribute"', so that if opened in excel the '0' on left side wouldn't be ignored..
         V_CLOB := V_CLOB||
                   '="'||rec.COST_CENTER_CODE||'",'||
                   '="'||rec.CHECK_SERIAL_NUMBER||'",'||
                   '="'||rec.TRANSACTION_DATE||'",'||
                   rec.AMOUNT||','||
                   '="'||rec.TERMINAL_NUMBER||'",'||
                   '="'||rec.TRANSACTION_NUMBER||'",'||
                   '="'||rec.ISSUE_DATE||'",'||
                   '="'||rec.PAID_DATE||'",'||
                   '="'||rec.VOID_DATE||'",'||
                   '="'||rec.AMOUNT_CHANGE_DATE||'",'||
                   '="'||rec.CHANGE_DATE||'",'||
                   '="'||rec.STOP_PAY_DATE||'",'||
                   '="'||rec.STOP_PAY_REMOVE_DATE||'"'||CHR(10);
    END LOOP;

    IF V_CLOB <> EMPTY_CLOB() THEN
         -- Append Header
         V_CLOB := V_HEADER_CLOB||V_CLOB;
         MAIL_PKG.SEND_MAIL('SD_DLY_SNTRST_AUDIT',NULL, NULL, V_CLOB);
    END IF;

END SD_AUDIT_REC_READ_AMT_SPLT;


PROCEDURE DISPLAY_AMOUNTS(
/*****************************************************************************
	DISPLAY_AMOUNTS
	This procedure will display all the calculated values

created : 06/11/2014 jxc517 CCN Project....
changed : 05/11/2015 sxt410 CCN Project....
          Added New Line: ROYAL TAG DRAFT PAID DRAFTS - STBD06EX,
                          ROYAL AUTO DRAFT MAINT RECORDS WRITTEN - STBD0100 and
                          ROYAL AUTO DRAFT PAID DRAFTS - STBD06EX.
          Renamed 6 to 6a and Added text "TAG" for 6a.
changed : 09/28/2017 nxk927 CCN Project....
          Passing the last batch start date to pick the data loaded in the last batch
******************************************************************************/
    IN_TRANSACTION_DATE DATE)
IS
    V_CLOB   CLOB;
    V_COUNT  NUMBER := 0;
    V_AMOUNT NUMBER := 0;
    V_DATE   DATE := CCN_BATCH_PKG.GET_LAST_BATCH_STARTDATE('SD_DAILY_DRFT_LOAD');
BEGIN
    V_CLOB := V_CLOB || '1, SUNTRUST DRAFT MAINT RECORDS WRITTEN - STBD0100, ' || NVL(SUNTRUST_NON_AUTOMOTIVE_AMT(V_DATE),0) || CHR(10);
    V_CLOB := V_CLOB || '2, BANK PAID RECORDS READ - STBD0100,' || NVL(BANK_PAID_AMT(IN_TRANSACTION_DATE),0) || CHR(10);
    TOTAL_STORE_DRAFTS_MNTN(IN_TRANSACTION_DATE, V_COUNT, V_AMOUNT);
    V_CLOB := V_CLOB || '3a, TOTAL DRAFT DATABASE RECORDS MODIFIED COUNT - STBD0100, ' || NVL(V_COUNT,0) || CHR(10);
    V_CLOB := V_CLOB || '3b, TOTAL DRAFT DATABASE RECORDS MODIFIED AMOUNT - STBD0100, ' || NVL(V_AMOUNT,0) || CHR(10);
    CONTROL_DETAILS(IN_TRANSACTION_DATE, V_COUNT, V_AMOUNT);
    V_CLOB := V_CLOB || '4a, TOTAL DRAFT DATABASE RECORDS MODIFIED COUNT - STBD01EX, ' || NVL(V_COUNT,0) || CHR(10);
    V_CLOB := V_CLOB || '4b, TOTAL DRAFT DATABASE RECORDS MODIFIED AMOUNT - STBD01EX, ' || NVL(V_AMOUNT,0) || CHR(10);
    V_CLOB := V_CLOB || '5, POINT OF SALE BATCH AUDIT - STORE DRAFTS PMM RPT - STBD0100, ' || NVL(TOTAL_STORE_DRAFTS_AMT(V_DATE),0) || CHR(10);
    V_CLOB := V_CLOB || '6a, ROYAL TAG DRAFT MAINT RECORDS WRITTEN - STBD0100, ' || NVL(ROYAL_AMT(V_DATE),0) || CHR(10);
    V_CLOB := V_CLOB || '6b, ROYAL TAG DRAFT PAID DRAFTS - STBD06EX, ' || NVL(ROYAL_DRAFT_PAID_AMT(IN_TRANSACTION_DATE),0) || CHR(10);
    V_CLOB := V_CLOB || '6c, ROYAL AUTO DRAFT MAINT RECORDS WRITTEN - STBD0100, ' || NVL(ROYAL_AUTO_DRAFT_MNTN_AMT(IN_TRANSACTION_DATE),0) || CHR(10);
    V_CLOB := V_CLOB || '6d, ROYAL AUTO DRAFT PAID DRAFTS - STBD06EX, ' || NVL(ROYAL_AUTO_DRAFT_PAID_AMT(IN_TRANSACTION_DATE),0) || CHR(10);
    V_CLOB := V_CLOB || '7, AUTOMOTIVE SUNTRUST DRAFT MAINT RECORDS WRITTEN - STBD0100, ' || NVL(SUNTRUST_AUTOMOTIVE_AMT(V_DATE),0) || CHR(10);
    V_CLOB := V_CLOB || '8, SUNTRUST DRAFT MAINT RECORDS WRITTEN - STBD1300, ' || NVL(SUNTRUST_STORE_DRAFTS_MNTN_AMT(IN_TRANSACTION_DATE),0) || CHR(10);
    V_CLOB := V_CLOB || '9, SUNTRUST DRAFT AUDIT RECORDS READ - STBD1300, ' || NVL(SD_AUDIT_REC_READ_AMT(IN_TRANSACTION_DATE),0) || CHR(10);
    V_CLOB := V_CLOB || '10, GRAND TOTAL OUTSTANDING DRAFTS - STBD16CW, ' || NVL(SD_GRAND_TOTAL_AMT(IN_TRANSACTION_DATE, V_DATE),0) || CHR(10);
    IF V_CLOB <> EMPTY_CLOB() THEN
        MAIL_PKG.SEND_MAIL('SD_DAILY_RECONCILIATION',NULL, NULL, V_CLOB);
    END IF; 
END DISPLAY_AMOUNTS;


END SD_DAILY_RECS_REPORT;