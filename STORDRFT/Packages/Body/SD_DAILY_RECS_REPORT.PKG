create or replace PACKAGE body SD_DAILY_RECS_REPORT
/**************************************************************** 
This package will generate the daily recs based on the data recevied the previous day
created : 11/03/2014 jxc517 CCN Project....
changed :
*****************************************************************/
AS

FUNCTION SUNTRUST_NON_AUTOMOTIVE_AMT(
/*****************************************************************************
	SUNTRUST_NON_AUTOMOTIVE_AMT
	This function will return the suntrust bank non-automootive daily drafts amount
  SUNTRUST DRAFT MIANT RECORDS WRITTEN (1) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE TRANSACTION_DATE = IN_TRANSACTION_DATE
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE NOT IN ('CN','AU'));

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END SUNTRUST_NON_AUTOMOTIVE_AMT;

FUNCTION BANK_PAID_AMT(
/*****************************************************************************
	BANK_PAID_AMT
	This function will return the daily drafts paid amount
  BANK PAID RECORDS READ (2) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE PAID_DATE = IN_TRANSACTION_DATE;

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END BANK_PAID_AMT;

FUNCTION TOTAL_STORE_DRAFTS_MNTN_COUNT(
/*****************************************************************************
	TOTAL_STORE_DRAFTS_MNTN_COUNT
	This function will return the total bank daily drafts maintenance count
  TOTAL DRAFT DATABASE RECORDS MODIFIED COUNT (3a) - STBD0100
  TOTAL DRAFT DATABASE RECORDS MODIFIED COUNT (4a) - STBD01EX

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT COUNT(*)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE PAID_DATE = IN_TRANSACTION_DATE;

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END TOTAL_STORE_DRAFTS_MNTN_COUNT;

FUNCTION TOTAL_STORE_DRAFTS_MNTN_AMT(
/*****************************************************************************
	TOTAL_STORE_DRAFTS_MNTN_AMT
	This function will return the total daily drafts maintenance amount
  TOTAL DRAFT DATABASE RECORDS MODIFIED AMOUNT (3b) - STBD0100
  TOTAL DRAFT DATABASE RECORDS MODIFIED AMOUNT (4b) - STBD01EX

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE PAID_DATE = IN_TRANSACTION_DATE;

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END TOTAL_STORE_DRAFTS_MNTN_AMT;

FUNCTION TOTAL_STORE_DRAFTS_AMT(
/*****************************************************************************
	TOTAL_STORE_DRAFTS_AMT
	This function will return the total daily drafts amount
  POINT OF SALE BATCH AUDIT - STORE DRAFTS PMM RPT (5) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE TRANSACTION_DATE = IN_TRANSACTION_DATE
       AND POS_TRANSACTION_CODE IN ('13','19','31','82','91');

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END TOTAL_STORE_DRAFTS_AMT;

FUNCTION ROYAL_AMT(
/*****************************************************************************
	ROYAL_AMT
	This function will return the royal bank daily drafts amount
  ROYAL DRAFT MIANT RECORDS WRITTEN (6) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE TRANSACTION_DATE = IN_TRANSACTION_DATE
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE = 'CN');

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END ROYAL_AMT;

FUNCTION SUNTRUST_AUTOMOTIVE_AMT(
/*****************************************************************************
	SUNTRUST_AUTOMOTIVE_AMT
	This function will return the suntrust bank automootive daily drafts amount
  AUTOMOTIVE SUNTRUST DRAFT MIANT RECORDS WRITTEN (7) - STBD0100

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE TRANSACTION_DATE = IN_TRANSACTION_DATE
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE = 'AU');

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END SUNTRUST_AUTOMOTIVE_AMT;

FUNCTION SUNTRUST_STORE_DRAFTS_MNTN_AMT(
/*****************************************************************************
	SUNTRUST_STORE_DRAFTS_MNTN_AMT
	This function will return the suntrust bank daily drafts maintenance amount
  SUNTRUST DRAFT MIANT RECORDS WRITTEN (8) - STBD1300

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE AMOUNT_CHANGE_DATE = IN_TRANSACTION_DATE
       AND EXISTS (SELECT 1
                     FROM COST_CENTER
                    WHERE COST_CENTER_CODE = SD.COST_CENTER_CODE
                      AND STATEMENT_TYPE NOT IN ('CN','AU'));

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END SUNTRUST_STORE_DRAFTS_MNTN_AMT;

FUNCTION SD_AUDIT_REC_READ_AMT(
/*****************************************************************************
	SD_AUDIT_REC_READ_AMT
	This function will return the daily drafts with amount change date, void date and stop pay date as 
  passed date
  SUNTRUST DRAFT AUDIT RECORDS READ (9) - STBD1300

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE AMOUNT_CHANGE_DATE = IN_TRANSACTION_DATE
        OR VOID_DATE          = IN_TRANSACTION_DATE
        OR STOP_PAY_DATE      = IN_TRANSACTION_DATE;

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END SD_AUDIT_REC_READ_AMT;

FUNCTION SD_GRAND_TOTAL_AMT(
/*****************************************************************************
	SD_GRAND_TOTAL_AMT
	This function will return the grand total
  GRAND TOTAL OUTSTANDING DRAFTS (10) - STBD16CW

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE) RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    SELECT SUM(NET_AMOUNT)
      INTO V_RETURN_VALUE
      FROM STORE_DRAFTS SD
     WHERE TRANSACTION_DATE = IN_TRANSACTION_DATE
        OR PAID_DATE        = IN_TRANSACTION_DATE;

    RETURN V_RETURN_VALUE;

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END SD_GRAND_TOTAL_AMT;

PROCEDURE DISPLAY_AMOUNTS(
/*****************************************************************************
	DISPLAY_AMOUNTS
	This procedure will display all the calculated values

created : 06/11/2014 jxc517 CCN Project....
changed :
******************************************************************************/
    IN_TRANSACTION_DATE DATE)
IS
    V_CLOB CLOB;
BEGIN
    /*DBMS_OUTPUT.PUT_LINE('1 - ' || SUNTRUST_NON_AUTOMOTIVE_AMT(IN_TRANSACTION_DATE));
    DBMS_OUTPUT.PUT_LINE('2 - ' || BANK_PAID_AMT(IN_TRANSACTION_DATE));
    DBMS_OUTPUT.PUT_LINE('3a, 4a - ' || TOTAL_STORE_DRAFTS_MNTN_COUNT(IN_TRANSACTION_DATE));
    DBMS_OUTPUT.PUT_LINE('3b, 4b - ' || TOTAL_STORE_DRAFTS_MNTN_AMT(IN_TRANSACTION_DATE));
    DBMS_OUTPUT.PUT_LINE('5 - ' || TOTAL_STORE_DRAFTS_AMT(IN_TRANSACTION_DATE));
    DBMS_OUTPUT.PUT_LINE('6 - ' || ROYAL_AMT(IN_TRANSACTION_DATE));
    DBMS_OUTPUT.PUT_LINE('7 - ' || SUNTRUST_AUTOMOTIVE_AMT(IN_TRANSACTION_DATE));
    DBMS_OUTPUT.PUT_LINE('8 - ' || SUNTRUST_STORE_DRAFTS_MNTN_AMT(IN_TRANSACTION_DATE));
    DBMS_OUTPUT.PUT_LINE('9 - ' || SD_AUDIT_REC_READ_AMT(IN_TRANSACTION_DATE));
    DBMS_OUTPUT.PUT_LINE('10 - ' || SD_GRAND_TOTAL_AMT(IN_TRANSACTION_DATE));*/
    V_CLOB := V_CLOB || '1, SUNTRUST DRAFT MIANT RECORDS WRITTEN - STBD0100, ' || SUNTRUST_NON_AUTOMOTIVE_AMT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '2, BANK PAID RECORDS READ - STBD0100,' || BANK_PAID_AMT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '3a, TOTAL DRAFT DATABASE RECORDS MODIFIED COUNT - STBD0100, ' || TOTAL_STORE_DRAFTS_MNTN_COUNT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '3b, TOTAL DRAFT DATABASE RECORDS MODIFIED AMOUNT - STBD0100, ' || TOTAL_STORE_DRAFTS_MNTN_AMT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '4a, TOTAL DRAFT DATABASE RECORDS MODIFIED COUNT - STBD01EX, ' || TOTAL_STORE_DRAFTS_MNTN_COUNT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '4b, TOTAL DRAFT DATABASE RECORDS MODIFIED AMOUNT - STBD01EX, ' || TOTAL_STORE_DRAFTS_MNTN_AMT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '5, POINT OF SALE BATCH AUDIT - STORE DRAFTS PMM RPT - STBD0100, ' || TOTAL_STORE_DRAFTS_AMT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '6, ROYAL DRAFT MIANT RECORDS WRITTEN - STBD0100, ' || ROYAL_AMT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '7, AUTOMOTIVE SUNTRUST DRAFT MIANT RECORDS WRITTEN - STBD0100, ' || SUNTRUST_AUTOMOTIVE_AMT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '8, SUNTRUST DRAFT MIANT RECORDS WRITTEN - STBD1300, ' || SUNTRUST_STORE_DRAFTS_MNTN_AMT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '9, SUNTRUST DRAFT AUDIT RECORDS READ - STBD1300, ' || SD_AUDIT_REC_READ_AMT(IN_TRANSACTION_DATE) || CHR(10);
    V_CLOB := V_CLOB || '10, GRAND TOTAL OUTSTANDING DRAFTS - STBD16CW, ' || SD_GRAND_TOTAL_AMT(IN_TRANSACTION_DATE) || CHR(10);
    IF V_CLOB <> EMPTY_CLOB() THEN
        MAIL_PKG.SEND_MAIL('SD_DAILY_RECONCILIATION',NULL, NULL, V_CLOB);
    END IF;
END DISPLAY_AMOUNTS;

END SD_DAILY_RECS_REPORT;

