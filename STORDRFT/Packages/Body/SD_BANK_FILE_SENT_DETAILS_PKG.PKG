create or replace PACKAGE BODY SD_BANK_FILE_SENT_DETAILS_PKG
    AS
/**********************************************************
	SD_BANK_FILE_SENT_DETAILS_PKG

	This Package is intended to return values for picklists and 
	picklist screen

created : 09/19/2013 jxc517 CCN Project....
changed :
**********************************************************/

PROCEDURE SD_BNK_FILE_SNT_DTL_ROWTYPE_SP (
/*******************************************************************************
	SD_BNK_FILE_SNT_DTL_ROWTYPE_SP

	This procedure is intended to build the SD_BANK_FILE_SENT_DETAILS record type

Created : 09/25/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME  IN     VARCHAR2
,IN_ROW_DATA   IN     CLOB
,OUT_ROW_TYPE     OUT SD_BANK_FILE_SENT_DETAILS%ROWTYPE)
IS
    V_CODE NUMBER;
    V_ERRM VARCHAR2(500);

CURSOR TABLE_FIELDS_CUR IS
    SELECT COLUMN_NAME
           ,DATA_LENGTH COLUMN_SIZE
           ,DATA_TYPE
      FROM ALL_TAB_COLUMNS
     WHERE TABLE_NAME = IN_TABLE_NAME
     ORDER BY COLUMN_ID ASC;

    V_TEMP_ROW         SD_BANK_FILE_SENT_DETAILS%ROWTYPE;
    V_ROW_VALUE        VARCHAR2(500);
    V_ROW_DATA         SYS.XMLTYPE := XMLTYPE(IN_ROW_DATA);
BEGIN
    FOR TABLE_FIELDS_REC IN TABLE_FIELDS_CUR LOOP
        IF (V_ROW_DATA.EXISTSNODE('/'|| IN_TABLE_NAME|| '/' || TABLE_FIELDS_REC.COLUMN_NAME ||'/text()') = 1) THEN
            V_ROW_VALUE := V_ROW_DATA.EXTRACT('/'|| IN_TABLE_NAME|| '/' || TABLE_FIELDS_REC.COLUMN_NAME ||'/text()').GETSTRINGVAL(); 
            --V_ROW_VALUE := CCN_COMMON_TOOLS.ELIMINATE_SPECIAL_CHRCTRS(V_ROW_VALUE);
            CASE TABLE_FIELDS_REC.COLUMN_NAME
                WHEN 'COST_CENTER_CODE' THEN
                    V_TEMP_ROW.COST_CENTER_CODE                      :=  V_ROW_VALUE;
                WHEN 'CHECK_SERIAL_NUMBER' THEN
                    V_TEMP_ROW.CHECK_SERIAL_NUMBER                   :=  V_ROW_VALUE;
                WHEN 'PROCESS_DATE' THEN
                    V_TEMP_ROW.PROCESS_DATE                          :=  TO_DATE(V_ROW_VALUE,'MM-DD-YYYY');
                WHEN 'SEND_INDICATOR' THEN
                    V_TEMP_ROW.SEND_INDICATOR                        :=  V_ROW_VALUE;
                ELSE NULL;
            END CASE;
        END IF;
    END LOOP;
    OUT_ROW_TYPE  := V_TEMP_ROW;
EXCEPTION
    WHEN OTHERS THEN
        V_CODE  := SQLCODE;
        V_ERRM  := SUBSTR(SQLERRM,1,200);
        ERRPKG.RAISE_ERR(V_CODE, 'SD_BNK_FILE_SNT_DTL_ROWTYPE_SP, ' || ' ' || 'IN_TABLE_NAME IS ' || IN_TABLE_NAME, V_ERRM);
END SD_BNK_FILE_SNT_DTL_ROWTYPE_SP;

PROCEDURE SD_BANK_FILE_SENT_DETAILS_S_SP (
/*******************************************************************************
	SD_BANK_FILE_SENT_DETAILS_S_SP

	This procedure is intended to select records from SD_BANK_FILE_SENT_DETAILS table

Created : 09/22/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
    V_CODE NUMBER;
    V_ERRM VARCHAR2(500);

    V_TEMP_ROW       SD_BANK_FILE_SENT_DETAILS%ROWTYPE;
BEGIN

    SD_BNK_FILE_SNT_DTL_ROWTYPE_SP(IN_TABLE_NAME,
                                   IN_ROW_DATA,
                                   V_TEMP_ROW);

    OPEN OUT_REF_CUR FOR
        SELECT *
          FROM SD_BANK_FILE_SENT_DETAILS
         WHERE NVL(COST_CENTER_CODE,'XXX')      = NVL(V_TEMP_ROW.COST_CENTER_CODE,NVL(COST_CENTER_CODE,'XXX'))
           AND NVL(CHECK_SERIAL_NUMBER,'XXX')   = NVL(V_TEMP_ROW.CHECK_SERIAL_NUMBER,NVL(CHECK_SERIAL_NUMBER,'XXX'))
           --AND NVL(PROCESS_DATE,TRUNC(SYSDATE)) = NVL(V_TEMP_ROW.PROCESS_DATE,NVL(PROCESS_DATE,TRUNC(SYSDATE)))
           --AND NVL(SENT_DATE,TRUNC(SYSDATE))    = NVL(V_TEMP_ROW.SENT_DATE,NVL(SENT_DATE,TRUNC(SYSDATE)));
           AND TRUNC(PROCESS_DATE)              = TRUNC(SYSDATE);

EXCEPTION
    WHEN OTHERS THEN
        V_CODE  := SQLCODE;
        V_ERRM  := SUBSTR(SQLERRM,1,200);
        ERRPKG.RAISE_ERR(V_CODE, 'SD_BANK_FILE_SENT_DETAILS_S_SP, ' || ' ' || 'IN_TABLE_NAME IS ' || IN_TABLE_NAME, V_ERRM);
END SD_BANK_FILE_SENT_DETAILS_S_SP;

PROCEDURE SD_BANK_FILE_SENT_DETAILS_I_SP (
/*******************************************************************************
	SD_BANK_FILE_SENT_DETAILS_I_SP

	This procedure is intended to insert records into SD_BANK_FILE_SENT_DETAILS table

Created : 09/24/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB)
IS
    V_CODE NUMBER;
    V_ERRM VARCHAR2(500);

    V_TEMP_ROW       SD_BANK_FILE_SENT_DETAILS%ROWTYPE;
    V_COUNT          NUMBER := 0;
BEGIN

    SD_BNK_FILE_SNT_DTL_ROWTYPE_SP(IN_TABLE_NAME,
                                   IN_ROW_DATA,
                                   V_TEMP_ROW);

    --Check if there is an insert already happened on this table as of today
    --If so the current call came as part of an update
    BEGIN
        SELECT COUNT(*)
          INTO V_COUNT
          FROM SD_BANK_FILE_SENT_DETAILS
         WHERE COST_CENTER_CODE    = V_TEMP_ROW.COST_CENTER_CODE
           AND CHECK_SERIAL_NUMBER = V_TEMP_ROW.CHECK_SERIAL_NUMBER
           AND TRUNC(PROCESS_DATE) = TRUNC(SYSDATE);
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;

    --Hard coded the below field as we should never accept/overwrite these values with value passed from UI
    V_TEMP_ROW.PROCESS_DATE := SYSDATE;
    IF V_COUNT = 0 THEN
        INSERT INTO SD_BANK_FILE_SENT_DETAILS VALUES V_TEMP_ROW;
    ELSE
        UPDATE SD_BANK_FILE_SENT_DETAILS
           SET ROW = V_TEMP_ROW
         WHERE COST_CENTER_CODE    = V_TEMP_ROW.COST_CENTER_CODE
           AND CHECK_SERIAL_NUMBER = V_TEMP_ROW.CHECK_SERIAL_NUMBER
           AND TRUNC(PROCESS_DATE) = TRUNC(SYSDATE);
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        V_CODE  := SQLCODE;
        V_ERRM  := SUBSTR(SQLERRM,1,200);
        ERRPKG.RAISE_ERR(V_CODE, 'SD_BANK_FILE_SENT_DETAILS_I_SP, ' || ' ' || 'IN_TABLE_NAME IS ' || IN_TABLE_NAME, V_ERRM);
END SD_BANK_FILE_SENT_DETAILS_I_SP;

PROCEDURE SD_BANK_FILE_SENT_DETAILS_U_SP (
/*******************************************************************************
	SD_BANK_FILE_SENT_DETAILS_U_SP

	This procedure is intended to updates records in SD_BANK_FILE_SENT_DETAILS table

Created : 09/25/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB)
IS
    V_CODE NUMBER;
    V_ERRM VARCHAR2(500);

    V_TEMP_ROW       SD_BANK_FILE_SENT_DETAILS%ROWTYPE;
BEGIN

    SD_BNK_FILE_SNT_DTL_ROWTYPE_SP(IN_TABLE_NAME,
                                   IN_ROW_DATA,
                                   V_TEMP_ROW);

    UPDATE SD_BANK_FILE_SENT_DETAILS
       SET SEND_INDICATOR      = V_TEMP_ROW.SEND_INDICATOR
     WHERE COST_CENTER_CODE    = V_TEMP_ROW.COST_CENTER_CODE
       AND CHECK_SERIAL_NUMBER = V_TEMP_ROW.CHECK_SERIAL_NUMBER
       AND TRUNC(PROCESS_DATE) = TRUNC(SYSDATE);

EXCEPTION
    WHEN OTHERS THEN
        V_CODE  := SQLCODE;
        V_ERRM  := SUBSTR(SQLERRM,1,200);
        ERRPKG.RAISE_ERR(V_CODE, 'SD_BANK_FILE_SENT_DETAILS_U_SP, ' || ' ' || 'IN_TABLE_NAME IS ' || IN_TABLE_NAME, V_ERRM);
END SD_BANK_FILE_SENT_DETAILS_U_SP;

END SD_BANK_FILE_SENT_DETAILS_PKG;

