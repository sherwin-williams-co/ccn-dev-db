create or replace PACKAGE BODY SD_PAID_DETAILS_LOAD
/**************************************************************** 
This package will update paid details in the existing CCN Store Drafts Oracle Database
created : 07/23/2014 jxc517 CCN Project....
changed :
*****************************************************************/
AS

PROCEDURE CCN_SD_PAID_LOAD_SUNTRUST_SP
/******************************************************************
This Procedure is a wrapper for the SUNTRUST Paid details update of the store drafts tables

Created : 12/18/2014 jxc517 CCN Project....
Changed : 02/28/2015 nxk927 (update all the drafts excluding void and stopped drafts)
        : 02/28/2017 gxg192 Changes to update UNATTACHED_MNL_DRFT_DTL table
                     if paid details are received before POS is received
        : 03/06/2017 gxg192 Changes to update UNATTACHED_MNL_DRFT_DTL table
                     only if record is not found in store drafts table.
        : 03/07/2017 gxg192 Changes to load paid details if paid date is not null
        : 11/06/2018 jxc517 CCN Project Team....
          Replaced external table with actual table and added logic to move the data into history
          Also added conditions to filter out specific data (conditions from ecternal table moved to query)
******************************************************************/
AS
    CURSOR TEMP_CUR is
        SELECT CCN_COMMON_TOOLS.GET_DATE_VALUE('1'||PAID_DATE_PAID, 'MMDDYY') PAID_DATE,
               CCN_COMMON_TOOLS.RETURN_NUMBER(PAID_AMONUT_ITEMS,10,2) AMOUNT,
               CCN_COMMON_TOOLS.VALIDATE_DATA_BEFORE_LOAD(PAID_CHECK_SERIAL_NUMBER) CHECK_SERIAL_NUMBER
          FROM PAID_DETAILS_SUNTRUST
         WHERE TRANSACTION_TYPE_CODE IN ('50');

    V_TEMP_ROW   STORE_DRAFTS%ROWTYPE;

PROCEDURE PERFORM_BACKUP_PROCESS
IS
    V_RUN_NBR NUMBER := 0;
BEGIN
    BEGIN
        SELECT MAX(RUN_NBR)
          INTO V_RUN_NBR
          FROM PAID_DETAILS_SUNTRUST_HST
         WHERE LOAD_DATE = TRUNC(SYSDATE);
    EXCEPTION
        WHEN OTHERS THEN
            V_RUN_NBR := NULL;
    END;
    INSERT INTO PAID_DETAILS_SUNTRUST_HST
        SELECT A.*, TRUNC(SYSDATE), NVL(V_RUN_NBR,0) + 1 FROM PAID_DETAILS_SUNTRUST A;
    DELETE FROM PAID_DETAILS_SUNTRUST;
EXCEPTION
    WHEN OTHERS THEN
        RAISE;
END PERFORM_BACKUP_PROCESS;
BEGIN
    FOR rec IN TEMP_CUR LOOP
        IF rec.PAID_DATE IS NOT NULL THEN
            BEGIN
                /*If POS is not yet received for a draft then there will be no record in store_drafts table for it;
                  so below query will throw no data found exception and CHECK_SERIAL_NUMBER will be Null.*/
                SELECT *
                  INTO V_TEMP_ROW
                  FROM STORE_DRAFTS
                 WHERE CHECK_SERIAL_NUMBER = rec.CHECK_SERIAL_NUMBER;

                V_TEMP_ROW.PAID_DATE           := rec.PAID_DATE;
                V_TEMP_ROW.BANK_PAID_AMOUNT    := rec.AMOUNT;
                SD_BUSINESS_RULES_PKG.SET_STORE_DRAFT_FLAGS(V_TEMP_ROW);

                UPDATE STORE_DRAFTS
                   SET ROW = V_TEMP_ROW
                 WHERE CHECK_SERIAL_NUMBER = rec.CHECK_SERIAL_NUMBER
                   AND VOID_DATE IS NULL
                   AND STOP_PAY_DATE IS NULL;

            EXCEPTION
                WHEN OTHERS THEN
                    V_TEMP_ROW := NULL;
                    ERRPKG.INSERT_ERROR_LOG_SP(200,
                                               'CCN_SD_PAID_LOAD_SUNTRUST_SP',
                                               'Error occurred while updating data in STORE_DRAFTS table is '||SUBSTR(SQLERRM,1,400),
                                               NULL, --cost_center_code
                                               NVL(rec.CHECK_SERIAL_NUMBER,''));
            END;

            /*If POS is not yet received for a draft, Updating the unattached draft if unattached draft is available.*/
            IF V_TEMP_ROW.CHECK_SERIAL_NUMBER IS NULL THEN
                BEGIN
                    SELECT *
                      INTO V_TEMP_ROW
                      FROM UNATTACHED_MNL_DRFT_DTL
                     WHERE CHECK_SERIAL_NUMBER = rec.CHECK_SERIAL_NUMBER;

                    V_TEMP_ROW.PAID_DATE           := rec.PAID_DATE;
                    V_TEMP_ROW.BANK_PAID_AMOUNT    := rec.AMOUNT;
                    SD_BUSINESS_RULES_PKG.SET_STORE_DRAFT_FLAGS(V_TEMP_ROW);

                    UPDATE UNATTACHED_MNL_DRFT_DTL
                       SET ROW = V_TEMP_ROW
                     WHERE CHECK_SERIAL_NUMBER = V_TEMP_ROW.CHECK_SERIAL_NUMBER
                       AND VOID_DATE IS NULL
                       AND STOP_PAY_DATE IS NULL;

                EXCEPTION
                    WHEN OTHERS THEN
                        ERRPKG.INSERT_ERROR_LOG_SP(200,
                                                   'CCN_SD_PAID_LOAD_SUNTRUST_SP',
                                                   'Error occurred while updating data in UNATTACHED_MNL_DRFT_DTL table is '||SUBSTR(SQLERRM,1,400),
                                                   NULL, --cost_center_code
                                                   NVL(rec.CHECK_SERIAL_NUMBER,''));
                END;
            END IF;
        ELSE
            ERRPKG.INSERT_ERROR_LOG_SP(200,
                                       'CCN_SD_PAID_LOAD_SUNTRUST_SP',
                                       'Paid Date is null',
                                       NULL, --cost_center_code
                                       NVL(rec.CHECK_SERIAL_NUMBER,''));
        END IF;

        V_TEMP_ROW := NULL;
    END LOOP;
    PERFORM_BACKUP_PROCESS();
EXCEPTION
    WHEN OTHERS THEN
         ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE,
                                    'CCN_SD_PAID_LOAD_SUNTRUST_SP',
                                    SQLERRM,
                                    '000000',
                                    '0000000000'); 
END CCN_SD_PAID_LOAD_SUNTRUST_SP;

PROCEDURE CCN_SD_PAID_LOAD_ROYAL_SP
/******************************************************************
This Procedure is a wrapper for the ROYAL Paid details update of the store drafts tables

Created : 12/18/2014 jxc517 CCN Project....
Changed : 02/28/2015 nxk927 (update all the drafts excluding void and stopped drafts)
        : 02/28/2017 gxg192 Changes to update UNATTACHED_MNL_DRFT_DTL table
                     if paid details are received before POS is received
        : 03/06/2017 gxg192 Changes to update UNATTACHED_MNL_DRFT_DTL table
                     only if record is not found in store drafts table.
        : 03/07/2017 gxg192 Changes to load paid details if paid date is not null
        : 11/06/2018 jxc517 CCN Project Team....
          Replaced external table with actual table and added logic to move the data into history
          Also added conditions to filter out specific data (conditions from ecternal table moved to query)
******************************************************************/
AS
    CURSOR TEMP_CUR is
        SELECT CCN_COMMON_TOOLS.GET_DATE_VALUE('1'||PAID_DATE, 'YYMMDD') PAID_DATE,
               CCN_COMMON_TOOLS.RETURN_NUMBER(AMOUNT,11,2) AMOUNT,
               CCN_COMMON_TOOLS.VALIDATE_DATA_BEFORE_LOAD(FILLER||CHECK_NUMBER_CC||CHECK_NUMBER_SQ||CHECK_NUMBER_CK) CHECK_SERIAL_NUMBER
          FROM PAID_DETAILS_ROYAL
         WHERE TRANSACTION_TYPE_CODE IN ('10','15','20','30','40','50','60','70');

    V_TEMP_ROW   STORE_DRAFTS%ROWTYPE;
PROCEDURE PERFORM_BACKUP_PROCESS
IS
    V_RUN_NBR NUMBER := 0;
BEGIN
    BEGIN
        SELECT MAX(RUN_NBR)
          INTO V_RUN_NBR
          FROM PAID_DETAILS_ROYAL_HST
         WHERE LOAD_DATE = TRUNC(SYSDATE);
    EXCEPTION
        WHEN OTHERS THEN
            V_RUN_NBR := NULL;
    END;
    INSERT INTO PAID_DETAILS_ROYAL_HST
        SELECT A.*, TRUNC(SYSDATE), NVL(V_RUN_NBR,0) + 1 FROM PAID_DETAILS_ROYAL A;
    DELETE FROM PAID_DETAILS_ROYAL;
EXCEPTION
    WHEN OTHERS THEN
        RAISE;
END PERFORM_BACKUP_PROCESS;
BEGIN
    FOR rec IN TEMP_CUR LOOP
        IF rec.PAID_DATE IS NOT NULL THEN
            BEGIN
                /*If POS is not yet received for a draft then there will be no record in store_drafts table for it;
                  so below query will throw no data found exception and CHECK_SERIAL_NUMBER will be Null.*/
                SELECT *
                  INTO V_TEMP_ROW
                  FROM STORE_DRAFTS
                 WHERE CHECK_SERIAL_NUMBER = rec.CHECK_SERIAL_NUMBER;

                V_TEMP_ROW.PAID_DATE           := rec.PAID_DATE;
                V_TEMP_ROW.BANK_PAID_AMOUNT    := rec.AMOUNT;
                SD_BUSINESS_RULES_PKG.SET_STORE_DRAFT_FLAGS(V_TEMP_ROW);

                UPDATE STORE_DRAFTS
                   SET ROW = V_TEMP_ROW
                 WHERE CHECK_SERIAL_NUMBER = rec.CHECK_SERIAL_NUMBER
                   AND VOID_DATE IS NULL
                   AND STOP_PAY_DATE IS NULL;

            EXCEPTION
                WHEN OTHERS THEN
                    V_TEMP_ROW := NULL;
                    ERRPKG.INSERT_ERROR_LOG_SP(200,
                                               'CCN_SD_PAID_LOAD_ROYAL_SP',
                                               'Error occurred while updating data in STORE_DRAFTS table is '||SUBSTR(SQLERRM,1,400),
                                               NULL, --cost_center_code
                                               NVL(rec.CHECK_SERIAL_NUMBER,''));
            END;

            /*If POS is not yet received for a draft, Updating the unattached draft if unattached draft is available.*/
            IF V_TEMP_ROW.CHECK_SERIAL_NUMBER IS NULL THEN
                BEGIN
                    SELECT *
                      INTO V_TEMP_ROW
                      FROM UNATTACHED_MNL_DRFT_DTL
                     WHERE CHECK_SERIAL_NUMBER = rec.CHECK_SERIAL_NUMBER;

                    V_TEMP_ROW.PAID_DATE           := rec.PAID_DATE;
                    V_TEMP_ROW.BANK_PAID_AMOUNT    := rec.AMOUNT;
                    SD_BUSINESS_RULES_PKG.SET_STORE_DRAFT_FLAGS(V_TEMP_ROW);

                    UPDATE UNATTACHED_MNL_DRFT_DTL
                       SET ROW = V_TEMP_ROW
                     WHERE CHECK_SERIAL_NUMBER = rec.CHECK_SERIAL_NUMBER
                       AND VOID_DATE IS NULL
                       AND STOP_PAY_DATE IS NULL;

                EXCEPTION
                    WHEN OTHERS THEN
                        ERRPKG.INSERT_ERROR_LOG_SP(200,
                                                   'CCN_SD_PAID_LOAD_ROYAL_SP',
                                                   'Error occurred while updating data in UNATTACHED_MNL_DRFT_DTL table is '||SUBSTR(SQLERRM,1,400),
                                                   NULL, --cost_center_code
                                                   NVL(rec.CHECK_SERIAL_NUMBER,''));
                END;
            END IF;
        ELSE
            ERRPKG.INSERT_ERROR_LOG_SP(200, 'CCN_SD_PAID_LOAD_ROYAL_SP', 'Paid Date is null', NULL, NVL(rec.CHECK_SERIAL_NUMBER,''));
        END IF;
        V_TEMP_ROW := NULL ;
    END LOOP;
    PERFORM_BACKUP_PROCESS();
EXCEPTION
    WHEN OTHERS THEN
         ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'CCN_SD_PAID_LOAD_ROYAL_SP', SQLERRM, '000000', '0000000000'); 
END CCN_SD_PAID_LOAD_ROYAL_SP;

END SD_PAID_DETAILS_LOAD;