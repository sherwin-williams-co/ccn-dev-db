create or replace PACKAGE body SD_UI_REPORTS_PKG
/**************************************************************** 
This package will be used by UI for reporting purpose
created : 11/03/2014 jxc517 CCN Project....
changed :
*****************************************************************/
AS

PROCEDURE STORE_DRAFTS_FILTER_S_SP (
/*******************************************************************************
	STORE_DRAFTS_FILTER_S_SP

	This procedure is intended to select records from STORE_DRAFTS & UNATTACHED_MNL_DRFT_DTL table
  with all fields part of the filtering

Created : 10/27/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT SD_TABLE_IU_PKG.REF_CURSOR)
IS
    V_CODE NUMBER;
    V_ERRM VARCHAR2(500);

    V_TEMP_ROW               STORE_DRAFTS%ROWTYPE;
    V_CHECK_RANGE_START      STORE_DRAFTS.DRAFT_NUMBER%TYPE;
    V_CHECK_RANGE_END        STORE_DRAFTS.DRAFT_NUMBER%TYPE;
    V_TRANSACTION_DATE_START STORE_DRAFTS.TRANSACTION_DATE%TYPE;
    V_TRANSACTION_DATE_END   STORE_DRAFTS.TRANSACTION_DATE%TYPE;
    V_PAID_DATE_START        STORE_DRAFTS.PAID_DATE%TYPE;
    V_PAID_DATE_END          STORE_DRAFTS.PAID_DATE%TYPE;
    V_ISSUE_DATE_START       STORE_DRAFTS.ISSUE_DATE%TYPE;
    V_ISSUE_DATE_END         STORE_DRAFTS.ISSUE_DATE%TYPE;
    V_STORE_DRAFT_INDICATOR  VARCHAR2(100);
    V_TRANSACTION_CODE       VARCHAR2(100);
    V_MNL_DRFT_IND           VARCHAR2(1);
    V_GL_ACCOUNT_NUMBER      VARCHAR(8);

    LTAB_LNAME DBMS_UTILITY.LNAME_ARRAY;
    LN_LEN     BINARY_INTEGER;
BEGIN
    --Get the status indicators (comma separated)
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/STORE_DRAFT_INDICATOR/text()') = 1) THEN
        V_STORE_DRAFT_INDICATOR   := UPPER(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/STORE_DRAFT_INDICATOR/text()').GETSTRINGVAL());
    END IF;
    --Get the transaction types (comma separated)
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/TRANSACTION_CODE/text()') = 1) THEN
        V_TRANSACTION_CODE   := UPPER(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/TRANSACTION_CODE/text()').GETSTRINGVAL());
    END IF;
    --Get the GL Prime and Sub account numbers, after validating the input GL_ACCOUNT_NUMBER (inside the XML as a tag)
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/GL_ACCOUNT_NUMBER/text()') = 1) THEN
        V_GL_ACCOUNT_NUMBER   := UPPER(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/GL_ACCOUNT_NUMBER/text()').GETSTRINGVAL());
        SD_BUSINESS_RULES_PKG.SD_GL_ACCOUNT_VALIDATION(V_GL_ACCOUNT_NUMBER); --business rules
    END IF;

    SD_TABLE_IU_PKG.STORE_DRAFTS_ROWTYPE_SP(IN_TABLE_NAME,
                                            IN_ROW_DATA,
                                            V_TEMP_ROW);

    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/CHECK_RANGE_START/text()') = 1) THEN
        V_CHECK_RANGE_START := XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/CHECK_RANGE_START/text()').GETSTRINGVAL();
    END IF;
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/CHECK_RANGE_END/text()') = 1) THEN
        V_CHECK_RANGE_END := XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/CHECK_RANGE_END/text()').GETSTRINGVAL();
    END IF;

    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/TRANSACTION_DATE_START/text()') = 1) THEN
        V_TRANSACTION_DATE_START := TO_DATE(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/TRANSACTION_DATE_START/text()').GETSTRINGVAL(),'MM-DD-YYYY');
    END IF;
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/TRANSACTION_DATE_END/text()') = 1) THEN
        V_TRANSACTION_DATE_END   := TO_DATE(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/TRANSACTION_DATE_END/text()').GETSTRINGVAL(),'MM-DD-YYYY');
    END IF;

    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/PAID_DATE_START/text()') = 1) THEN
        V_PAID_DATE_START := TO_DATE(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/PAID_DATE_START/text()').GETSTRINGVAL(),'MM-DD-YYYY');
    END IF;
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/PAID_DATE_END/text()') = 1) THEN
        V_PAID_DATE_END   := TO_DATE(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/PAID_DATE_END/text()').GETSTRINGVAL(),'MM-DD-YYYY');
    END IF;

    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/ISSUE_DATE_START/text()') = 1) THEN
        V_ISSUE_DATE_START := TO_DATE(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/ISSUE_DATE_START/text()').GETSTRINGVAL(),'MM-DD-YYYY');
    END IF;
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/ISSUE_DATE_END/text()') = 1) THEN
        V_ISSUE_DATE_END   := TO_DATE(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/ISSUE_DATE_END/text()').GETSTRINGVAL(),'MM-DD-YYYY');
    END IF;

    --over write the values given by the rowtype procedure as we need to set them here for querying
    V_TEMP_ROW.OPEN_INDICATOR := NULL;
    V_TEMP_ROW.PAY_INDICATOR  := NULL;
    V_TEMP_ROW.VOID_INDICATOR := NULL;
    V_TEMP_ROW.STOP_INDICATOR := NULL;

    --Below process supports UI to pass comma seperated indicators like 'OPEN, PAID, MNL_DRFT'
    IF V_STORE_DRAFT_INDICATOR IS NOT NULL THEN
        DBMS_UTILITY.COMMA_TO_TABLE(LIST   => V_STORE_DRAFT_INDICATOR
                                   ,TABLEN => LN_LEN
                                   ,TAB    => LTAB_LNAME);
        FOR i IN 1 .. LN_LEN LOOP
            CASE LTAB_LNAME(i) 
                WHEN 'OPEN' THEN
                    V_TEMP_ROW.OPEN_INDICATOR := 'Y';
                WHEN 'PAID' THEN
                    V_TEMP_ROW.PAY_INDICATOR  := 'Y';
                WHEN 'VOID' THEN
                   V_TEMP_ROW.VOID_INDICATOR := 'Y';
                WHEN 'STOP' THEN
                    V_TEMP_ROW.STOP_INDICATOR := 'Y';
                WHEN 'MNL_DRFT' THEN
                    V_MNL_DRFT_IND := 'Y';
                ELSE NULL;
            END CASE;
        END LOOP;
    END IF;

    IF V_MNL_DRFT_IND = 'Y'
       AND V_TEMP_ROW.OPEN_INDICATOR IS NULL
       AND V_TEMP_ROW.PAY_INDICATOR IS NULL
       AND V_TEMP_ROW.VOID_INDICATOR IS NULL
       AND V_TEMP_ROW.STOP_INDICATOR IS NULL THEN --Return just the manual drafts
        OPEN OUT_REF_CUR FOR
            SELECT DISTINCT SD.*, 
                   DECODE(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,
                          '-',NULL,
                          SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER) AS GL_ACCOUNT_NUMBER
              FROM UNATTACHED_MNL_DRFT_DTL SD,
                   STORE_DRAFTS_DETAIL SDD
             WHERE NVL(SD.COST_CENTER_CODE,'XXX')                 = NVL(V_TEMP_ROW.COST_CENTER_CODE,NVL(SD.COST_CENTER_CODE,'XXX'))
               AND NVL(SD.CHECK_SERIAL_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CHECK_SERIAL_NUMBER,NVL(SD.CHECK_SERIAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_TRANSACTION_DATE_START,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_TRANSACTION_DATE_END,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.TERMINAL_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.TERMINAL_NUMBER,NVL(SD.TERMINAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_NUMBER,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_NUMBER,NVL(SD.TRANSACTION_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX')          = NVL(V_TEMP_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_JOB_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CUSTOMER_JOB_NUMBER,NVL(SD.CUSTOMER_JOB_NUMBER,'XXX'))
               AND INSTR(NVL(V_TRANSACTION_CODE,NVL(SD.POS_TRANSACTION_CODE,'XXX'))||',',NVL(SD.POS_TRANSACTION_CODE,'XXX')||',') > 0
               AND NVL(SD.POS_TRANSACTION_TIME,'XXX')             = NVL(V_TEMP_ROW.POS_TRANSACTION_TIME,NVL(SD.POS_TRANSACTION_TIME,'XXX'))
               AND NVL(SD.BANK_NUMBER,'XXX')                      = NVL(V_TEMP_ROW.BANK_NUMBER,NVL(SD.BANK_NUMBER,'XXX'))
               AND NVL(SD.BANK_ACCOUNT_NUMBER,'XXX')              = NVL(V_TEMP_ROW.BANK_ACCOUNT_NUMBER,NVL(SD.BANK_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.BANK_REFERENCE,'XXX')                   = NVL(V_TEMP_ROW.BANK_REFERENCE,NVL(SD.BANK_REFERENCE,'XXX'))
               AND NVL(SD.PAYEE_NAME,'XXX')                       = NVL(V_TEMP_ROW.PAYEE_NAME,NVL(SD.PAYEE_NAME,'XXX'))
               AND NVL(SD.ADDRESS_LINE_1,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_1,NVL(SD.ADDRESS_LINE_1,'XXX'))
               AND NVL(SD.ADDRESS_LINE_2,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_2,NVL(SD.ADDRESS_LINE_2,'XXX'))
               AND NVL(SD.CITY,'XXX')                             = NVL(V_TEMP_ROW.CITY,NVL(SD.CITY,'XXX'))
               AND NVL(SD.STATE_CODE,'XXX')                       = NVL(V_TEMP_ROW.STATE_CODE,NVL(SD.STATE_CODE,'XXX'))
               AND NVL(SD.ZIP_CODE_PREFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_PREFIX,NVL(SD.ZIP_CODE_PREFIX,'XXX'))
               AND NVL(SD.ZIP_CODE_SUFFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_SUFFIX,NVL(SD.ZIP_CODE_SUFFIX,'XXX'))
               AND NVL(SD.PHONE_AREA_CODE,'XXX')                  = NVL(V_TEMP_ROW.PHONE_AREA_CODE,NVL(SD.PHONE_AREA_CODE,'XXX'))
               AND NVL(SD.PHONE_NUMBER,'XXX')                     = NVL(V_TEMP_ROW.PHONE_NUMBER,NVL(SD.PHONE_NUMBER,'XXX'))
               AND NVL(SD.EMPLOYEE_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.EMPLOYEE_NUMBER,NVL(SD.EMPLOYEE_NUMBER,'XXX'))
               AND NVL(SD.PAID_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_PAID_DATE_START,NVL(SD.PAID_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_PAID_DATE_END,NVL(SD.PAID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE))           = NVL(V_TEMP_ROW.STOP_PAY_DATE,NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE))    = NVL(V_TEMP_ROW.STOP_PAY_REMOVE_DATE,NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.VOID_DATE,TRUNC(SYSDATE))               = NVL(V_TEMP_ROW.VOID_DATE,NVL(SD.VOID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE))      = NVL(V_TEMP_ROW.AMOUNT_CHANGE_DATE,NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.GROSS_AMOUNT,-1)                        = NVL(V_TEMP_ROW.GROSS_AMOUNT,NVL(SD.GROSS_AMOUNT,-1))
               AND NVL(SD.RETAIN_AMOUNT,-1)                       = NVL(V_TEMP_ROW.RETAIN_AMOUNT,NVL(SD.RETAIN_AMOUNT,-1))
               AND NVL(SD.NET_AMOUNT,-1)                          = NVL(V_TEMP_ROW.NET_AMOUNT,NVL(SD.NET_AMOUNT,-1))
               AND NVL(SD.ORIGINAL_NET_AMOUNT,-1)                 = NVL(V_TEMP_ROW.ORIGINAL_NET_AMOUNT,NVL(SD.ORIGINAL_NET_AMOUNT,-1))
               AND NVL(SD.BANK_PAID_AMOUNT,-1)                    = NVL(V_TEMP_ROW.BANK_PAID_AMOUNT,NVL(SD.BANK_PAID_AMOUNT,-1))
               AND NVL(SD.TRANSACTION_SOURCE,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_SOURCE,NVL(SD.TRANSACTION_SOURCE,'XXX'))
               AND NVL(SD.CHANGE_DATE,TRUNC(SYSDATE))             = NVL(V_TEMP_ROW.CHANGE_DATE,NVL(SD.CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.CHANGE_SOURCE,'XXX')                    = NVL(V_TEMP_ROW.CHANGE_SOURCE,NVL(SD.CHANGE_SOURCE,'XXX'))
               AND NVL(SD.SLS_BOOK_DATE,'XXX')                    = NVL(V_TEMP_ROW.SLS_BOOK_DATE,NVL(SD.SLS_BOOK_DATE,'XXX'))
               AND NVL(SD.CYCLE_RUN_NUMBER,'XXX')                 = NVL(V_TEMP_ROW.CYCLE_RUN_NUMBER,NVL(SD.CYCLE_RUN_NUMBER,'XXX'))
               AND NVL(SD.BOOK_DATE_SEQUENCE,'XXX')               = NVL(V_TEMP_ROW.BOOK_DATE_SEQUENCE,NVL(SD.BOOK_DATE_SEQUENCE,'XXX'))
               AND NVL(SD.REASON_CODE,'XXX')                      = NVL(V_TEMP_ROW.REASON_CODE,NVL(SD.REASON_CODE,'XXX'))
               AND NVL(SD.DRAFT_NUMBER,'XXX') BETWEEN NVL(V_CHECK_RANGE_START,NVL(SD.DRAFT_NUMBER,'XXX')) 
                                                            AND NVL(V_CHECK_RANGE_END,NVL(SD.DRAFT_NUMBER,'XXX'))
               /*AND (NVL(SD.VOID_INDICATOR,'N')                   = NVL(V_TEMP_ROW.VOID_INDICATOR,'XXX')
                    OR NVL(SD.PAY_INDICATOR,'N')                 = NVL(V_TEMP_ROW.PAY_INDICATOR,'XXX')
                    OR NVL(SD.STOP_INDICATOR,'N')                = NVL(V_TEMP_ROW.STOP_INDICATOR,'XXX')
                    OR NVL(SD.OPEN_INDICATOR,'N')                = NVL(V_TEMP_ROW.OPEN_INDICATOR,'XXX'))*/
               AND SD.COST_CENTER_CODE                        = SDD.COST_CENTER_CODE(+)
               AND SD.CHECK_SERIAL_NUMBER                     = SDD.CHECK_SERIAL_NUMBER(+)
               AND SD.TRANSACTION_DATE                        = SDD.TRANSACTION_DATE(+)
               AND NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX') 
                                                              = NVL(V_GL_ACCOUNT_NUMBER,NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX'));
    ELSIF V_STORE_DRAFT_INDICATOR IS NULL THEN  --Return everything
        OPEN OUT_REF_CUR FOR
            SELECT DISTINCT SD.*, 
                   DECODE(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,
                          '-',NULL,
                          SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER) AS GL_ACCOUNT_NUMBER
              FROM STORE_DRAFTS SD,
                   STORE_DRAFTS_DETAIL SDD
             WHERE NVL(SD.COST_CENTER_CODE,'XXX')                 = NVL(V_TEMP_ROW.COST_CENTER_CODE,NVL(SD.COST_CENTER_CODE,'XXX'))
               AND NVL(SD.CHECK_SERIAL_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CHECK_SERIAL_NUMBER,NVL(SD.CHECK_SERIAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_TRANSACTION_DATE_START,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_TRANSACTION_DATE_END,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.TERMINAL_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.TERMINAL_NUMBER,NVL(SD.TERMINAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_NUMBER,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_NUMBER,NVL(SD.TRANSACTION_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX')          = NVL(V_TEMP_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_JOB_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CUSTOMER_JOB_NUMBER,NVL(SD.CUSTOMER_JOB_NUMBER,'XXX'))
               AND INSTR(NVL(V_TRANSACTION_CODE,NVL(SD.POS_TRANSACTION_CODE,'XXX'))||',',NVL(SD.POS_TRANSACTION_CODE,'XXX')||',') > 0
               AND NVL(SD.POS_TRANSACTION_TIME,'XXX')             = NVL(V_TEMP_ROW.POS_TRANSACTION_TIME,NVL(SD.POS_TRANSACTION_TIME,'XXX'))
               AND NVL(SD.BANK_NUMBER,'XXX')                      = NVL(V_TEMP_ROW.BANK_NUMBER,NVL(SD.BANK_NUMBER,'XXX'))
               AND NVL(SD.BANK_ACCOUNT_NUMBER,'XXX')              = NVL(V_TEMP_ROW.BANK_ACCOUNT_NUMBER,NVL(SD.BANK_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.BANK_REFERENCE,'XXX')                   = NVL(V_TEMP_ROW.BANK_REFERENCE,NVL(SD.BANK_REFERENCE,'XXX'))
               AND NVL(SD.PAYEE_NAME,'XXX')                       = NVL(V_TEMP_ROW.PAYEE_NAME,NVL(SD.PAYEE_NAME,'XXX'))
               AND NVL(SD.ADDRESS_LINE_1,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_1,NVL(SD.ADDRESS_LINE_1,'XXX'))
               AND NVL(SD.ADDRESS_LINE_2,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_2,NVL(SD.ADDRESS_LINE_2,'XXX'))
               AND NVL(SD.CITY,'XXX')                             = NVL(V_TEMP_ROW.CITY,NVL(SD.CITY,'XXX'))
               AND NVL(SD.STATE_CODE,'XXX')                       = NVL(V_TEMP_ROW.STATE_CODE,NVL(SD.STATE_CODE,'XXX'))
               AND NVL(SD.ZIP_CODE_PREFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_PREFIX,NVL(SD.ZIP_CODE_PREFIX,'XXX'))
               AND NVL(SD.ZIP_CODE_SUFFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_SUFFIX,NVL(SD.ZIP_CODE_SUFFIX,'XXX'))
               AND NVL(SD.PHONE_AREA_CODE,'XXX')                  = NVL(V_TEMP_ROW.PHONE_AREA_CODE,NVL(SD.PHONE_AREA_CODE,'XXX'))
               AND NVL(SD.PHONE_NUMBER,'XXX')                     = NVL(V_TEMP_ROW.PHONE_NUMBER,NVL(SD.PHONE_NUMBER,'XXX'))
               AND NVL(SD.EMPLOYEE_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.EMPLOYEE_NUMBER,NVL(SD.EMPLOYEE_NUMBER,'XXX'))
               AND NVL(SD.PAID_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_PAID_DATE_START,NVL(SD.PAID_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_PAID_DATE_END,NVL(SD.PAID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE))           = NVL(V_TEMP_ROW.STOP_PAY_DATE,NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE))    = NVL(V_TEMP_ROW.STOP_PAY_REMOVE_DATE,NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.VOID_DATE,TRUNC(SYSDATE))               = NVL(V_TEMP_ROW.VOID_DATE,NVL(SD.VOID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE))      = NVL(V_TEMP_ROW.AMOUNT_CHANGE_DATE,NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.GROSS_AMOUNT,-1)                        = NVL(V_TEMP_ROW.GROSS_AMOUNT,NVL(SD.GROSS_AMOUNT,-1))
               AND NVL(SD.RETAIN_AMOUNT,-1)                       = NVL(V_TEMP_ROW.RETAIN_AMOUNT,NVL(SD.RETAIN_AMOUNT,-1))
               AND NVL(SD.NET_AMOUNT,-1)                          = NVL(V_TEMP_ROW.NET_AMOUNT,NVL(SD.NET_AMOUNT,-1))
               AND NVL(SD.ORIGINAL_NET_AMOUNT,-1)                 = NVL(V_TEMP_ROW.ORIGINAL_NET_AMOUNT,NVL(SD.ORIGINAL_NET_AMOUNT,-1))
               AND NVL(SD.BANK_PAID_AMOUNT,-1)                    = NVL(V_TEMP_ROW.BANK_PAID_AMOUNT,NVL(SD.BANK_PAID_AMOUNT,-1))
               AND NVL(SD.TRANSACTION_SOURCE,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_SOURCE,NVL(SD.TRANSACTION_SOURCE,'XXX'))
               AND NVL(SD.CHANGE_DATE,TRUNC(SYSDATE))             = NVL(V_TEMP_ROW.CHANGE_DATE,NVL(SD.CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.CHANGE_SOURCE,'XXX')                    = NVL(V_TEMP_ROW.CHANGE_SOURCE,NVL(SD.CHANGE_SOURCE,'XXX'))
               AND NVL(SD.SLS_BOOK_DATE,'XXX')                    = NVL(V_TEMP_ROW.SLS_BOOK_DATE,NVL(SD.SLS_BOOK_DATE,'XXX'))
               AND NVL(SD.CYCLE_RUN_NUMBER,'XXX')                 = NVL(V_TEMP_ROW.CYCLE_RUN_NUMBER,NVL(SD.CYCLE_RUN_NUMBER,'XXX'))
               AND NVL(SD.BOOK_DATE_SEQUENCE,'XXX')               = NVL(V_TEMP_ROW.BOOK_DATE_SEQUENCE,NVL(SD.BOOK_DATE_SEQUENCE,'XXX'))
               AND NVL(SD.REASON_CODE,'XXX')                      = NVL(V_TEMP_ROW.REASON_CODE,NVL(SD.REASON_CODE,'XXX'))
               AND NVL(SD.DRAFT_NUMBER,'XXX') BETWEEN NVL(V_CHECK_RANGE_START,NVL(SD.DRAFT_NUMBER,'XXX')) 
                                                            AND NVL(V_CHECK_RANGE_END,NVL(SD.DRAFT_NUMBER,'XXX'))
               AND SD.COST_CENTER_CODE                        = SDD.COST_CENTER_CODE(+)
               AND SD.CHECK_SERIAL_NUMBER                     = SDD.CHECK_SERIAL_NUMBER(+)
               AND SD.TRANSACTION_DATE                        = SDD.TRANSACTION_DATE(+)
               AND NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX') 
                                                              = NVL(V_GL_ACCOUNT_NUMBER,NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX'))
        UNION
            SELECT DISTINCT SD.*, 
                   DECODE(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,
                          '-',NULL,
                          SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER) AS GL_ACCOUNT_NUMBER
              FROM UNATTACHED_MNL_DRFT_DTL SD,
                   STORE_DRAFTS_DETAIL SDD
             WHERE NVL(SD.COST_CENTER_CODE,'XXX')                 = NVL(V_TEMP_ROW.COST_CENTER_CODE,NVL(SD.COST_CENTER_CODE,'XXX'))
               AND NVL(SD.CHECK_SERIAL_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CHECK_SERIAL_NUMBER,NVL(SD.CHECK_SERIAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_TRANSACTION_DATE_START,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_TRANSACTION_DATE_END,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.TERMINAL_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.TERMINAL_NUMBER,NVL(SD.TERMINAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_NUMBER,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_NUMBER,NVL(SD.TRANSACTION_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX')          = NVL(V_TEMP_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_JOB_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CUSTOMER_JOB_NUMBER,NVL(SD.CUSTOMER_JOB_NUMBER,'XXX'))
               AND INSTR(NVL(V_TRANSACTION_CODE,NVL(SD.POS_TRANSACTION_CODE,'XXX'))||',',NVL(SD.POS_TRANSACTION_CODE,'XXX')||',') > 0
               AND NVL(SD.POS_TRANSACTION_TIME,'XXX')             = NVL(V_TEMP_ROW.POS_TRANSACTION_TIME,NVL(SD.POS_TRANSACTION_TIME,'XXX'))
               AND NVL(SD.BANK_NUMBER,'XXX')                      = NVL(V_TEMP_ROW.BANK_NUMBER,NVL(SD.BANK_NUMBER,'XXX'))
               AND NVL(SD.BANK_ACCOUNT_NUMBER,'XXX')              = NVL(V_TEMP_ROW.BANK_ACCOUNT_NUMBER,NVL(SD.BANK_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.BANK_REFERENCE,'XXX')                   = NVL(V_TEMP_ROW.BANK_REFERENCE,NVL(SD.BANK_REFERENCE,'XXX'))
               AND NVL(SD.PAYEE_NAME,'XXX')                       = NVL(V_TEMP_ROW.PAYEE_NAME,NVL(SD.PAYEE_NAME,'XXX'))
               AND NVL(SD.ADDRESS_LINE_1,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_1,NVL(SD.ADDRESS_LINE_1,'XXX'))
               AND NVL(SD.ADDRESS_LINE_2,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_2,NVL(SD.ADDRESS_LINE_2,'XXX'))
               AND NVL(SD.CITY,'XXX')                             = NVL(V_TEMP_ROW.CITY,NVL(SD.CITY,'XXX'))
               AND NVL(SD.STATE_CODE,'XXX')                       = NVL(V_TEMP_ROW.STATE_CODE,NVL(SD.STATE_CODE,'XXX'))
               AND NVL(SD.ZIP_CODE_PREFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_PREFIX,NVL(SD.ZIP_CODE_PREFIX,'XXX'))
               AND NVL(SD.ZIP_CODE_SUFFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_SUFFIX,NVL(SD.ZIP_CODE_SUFFIX,'XXX'))
               AND NVL(SD.PHONE_AREA_CODE,'XXX')                  = NVL(V_TEMP_ROW.PHONE_AREA_CODE,NVL(SD.PHONE_AREA_CODE,'XXX'))
               AND NVL(SD.PHONE_NUMBER,'XXX')                     = NVL(V_TEMP_ROW.PHONE_NUMBER,NVL(SD.PHONE_NUMBER,'XXX'))
               AND NVL(SD.EMPLOYEE_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.EMPLOYEE_NUMBER,NVL(SD.EMPLOYEE_NUMBER,'XXX'))
               AND NVL(SD.PAID_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_PAID_DATE_START,NVL(SD.PAID_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_PAID_DATE_END,NVL(SD.PAID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE))           = NVL(V_TEMP_ROW.STOP_PAY_DATE,NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE))    = NVL(V_TEMP_ROW.STOP_PAY_REMOVE_DATE,NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.VOID_DATE,TRUNC(SYSDATE))               = NVL(V_TEMP_ROW.VOID_DATE,NVL(SD.VOID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE))      = NVL(V_TEMP_ROW.AMOUNT_CHANGE_DATE,NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.GROSS_AMOUNT,-1)                        = NVL(V_TEMP_ROW.GROSS_AMOUNT,NVL(SD.GROSS_AMOUNT,-1))
               AND NVL(SD.RETAIN_AMOUNT,-1)                       = NVL(V_TEMP_ROW.RETAIN_AMOUNT,NVL(SD.RETAIN_AMOUNT,-1))
               AND NVL(SD.NET_AMOUNT,-1)                          = NVL(V_TEMP_ROW.NET_AMOUNT,NVL(SD.NET_AMOUNT,-1))
               AND NVL(SD.ORIGINAL_NET_AMOUNT,-1)                 = NVL(V_TEMP_ROW.ORIGINAL_NET_AMOUNT,NVL(SD.ORIGINAL_NET_AMOUNT,-1))
               AND NVL(SD.BANK_PAID_AMOUNT,-1)                    = NVL(V_TEMP_ROW.BANK_PAID_AMOUNT,NVL(SD.BANK_PAID_AMOUNT,-1))
               AND NVL(SD.TRANSACTION_SOURCE,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_SOURCE,NVL(SD.TRANSACTION_SOURCE,'XXX'))
               AND NVL(SD.CHANGE_DATE,TRUNC(SYSDATE))             = NVL(V_TEMP_ROW.CHANGE_DATE,NVL(SD.CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.CHANGE_SOURCE,'XXX')                    = NVL(V_TEMP_ROW.CHANGE_SOURCE,NVL(SD.CHANGE_SOURCE,'XXX'))
               AND NVL(SD.SLS_BOOK_DATE,'XXX')                    = NVL(V_TEMP_ROW.SLS_BOOK_DATE,NVL(SD.SLS_BOOK_DATE,'XXX'))
               AND NVL(SD.CYCLE_RUN_NUMBER,'XXX')                 = NVL(V_TEMP_ROW.CYCLE_RUN_NUMBER,NVL(SD.CYCLE_RUN_NUMBER,'XXX'))
               AND NVL(SD.BOOK_DATE_SEQUENCE,'XXX')               = NVL(V_TEMP_ROW.BOOK_DATE_SEQUENCE,NVL(SD.BOOK_DATE_SEQUENCE,'XXX'))
               AND NVL(SD.REASON_CODE,'XXX')                      = NVL(V_TEMP_ROW.REASON_CODE,NVL(SD.REASON_CODE,'XXX'))
               AND NVL(SD.DRAFT_NUMBER,'XXX') BETWEEN NVL(V_CHECK_RANGE_START,NVL(SD.DRAFT_NUMBER,'XXX')) 
                                                            AND NVL(V_CHECK_RANGE_END,NVL(SD.DRAFT_NUMBER,'XXX'))
               AND SD.COST_CENTER_CODE                        = SDD.COST_CENTER_CODE(+)
               AND SD.CHECK_SERIAL_NUMBER                     = SDD.CHECK_SERIAL_NUMBER(+)
               AND SD.TRANSACTION_DATE                        = SDD.TRANSACTION_DATE(+)
               AND NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX') 
                                                              = NVL(V_GL_ACCOUNT_NUMBER,NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX'));
    ELSIF V_MNL_DRFT_IND = 'Y' AND (V_TEMP_ROW.OPEN_INDICATOR = 'Y'
                                    OR V_TEMP_ROW.PAY_INDICATOR = 'Y'
                                    OR V_TEMP_ROW.VOID_INDICATOR = 'Y'
                                    OR V_TEMP_ROW.STOP_INDICATOR = 'Y') THEN  --Return manual drafts and any drafts with requested flags
        OPEN OUT_REF_CUR FOR
            SELECT DISTINCT SD.*, 
                   DECODE(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,
                          '-',NULL,
                          SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER) AS GL_ACCOUNT_NUMBER
              FROM STORE_DRAFTS SD,
                   STORE_DRAFTS_DETAIL SDD
             WHERE NVL(SD.COST_CENTER_CODE,'XXX')                 = NVL(V_TEMP_ROW.COST_CENTER_CODE,NVL(SD.COST_CENTER_CODE,'XXX'))
               AND NVL(SD.CHECK_SERIAL_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CHECK_SERIAL_NUMBER,NVL(SD.CHECK_SERIAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_TRANSACTION_DATE_START,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_TRANSACTION_DATE_END,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.TERMINAL_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.TERMINAL_NUMBER,NVL(SD.TERMINAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_NUMBER,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_NUMBER,NVL(SD.TRANSACTION_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX')          = NVL(V_TEMP_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_JOB_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CUSTOMER_JOB_NUMBER,NVL(SD.CUSTOMER_JOB_NUMBER,'XXX'))
               AND INSTR(NVL(V_TRANSACTION_CODE,NVL(SD.POS_TRANSACTION_CODE,'XXX'))||',',NVL(SD.POS_TRANSACTION_CODE,'XXX')||',') > 0
               AND NVL(SD.POS_TRANSACTION_TIME,'XXX')             = NVL(V_TEMP_ROW.POS_TRANSACTION_TIME,NVL(SD.POS_TRANSACTION_TIME,'XXX'))
               AND NVL(SD.BANK_NUMBER,'XXX')                      = NVL(V_TEMP_ROW.BANK_NUMBER,NVL(SD.BANK_NUMBER,'XXX'))
               AND NVL(SD.BANK_ACCOUNT_NUMBER,'XXX')              = NVL(V_TEMP_ROW.BANK_ACCOUNT_NUMBER,NVL(SD.BANK_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.BANK_REFERENCE,'XXX')                   = NVL(V_TEMP_ROW.BANK_REFERENCE,NVL(SD.BANK_REFERENCE,'XXX'))
               AND NVL(SD.PAYEE_NAME,'XXX')                       = NVL(V_TEMP_ROW.PAYEE_NAME,NVL(SD.PAYEE_NAME,'XXX'))
               AND NVL(SD.ADDRESS_LINE_1,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_1,NVL(SD.ADDRESS_LINE_1,'XXX'))
               AND NVL(SD.ADDRESS_LINE_2,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_2,NVL(SD.ADDRESS_LINE_2,'XXX'))
               AND NVL(SD.CITY,'XXX')                             = NVL(V_TEMP_ROW.CITY,NVL(SD.CITY,'XXX'))
               AND NVL(SD.STATE_CODE,'XXX')                       = NVL(V_TEMP_ROW.STATE_CODE,NVL(SD.STATE_CODE,'XXX'))
               AND NVL(SD.ZIP_CODE_PREFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_PREFIX,NVL(SD.ZIP_CODE_PREFIX,'XXX'))
               AND NVL(SD.ZIP_CODE_SUFFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_SUFFIX,NVL(SD.ZIP_CODE_SUFFIX,'XXX'))
               AND NVL(SD.PHONE_AREA_CODE,'XXX')                  = NVL(V_TEMP_ROW.PHONE_AREA_CODE,NVL(SD.PHONE_AREA_CODE,'XXX'))
               AND NVL(SD.PHONE_NUMBER,'XXX')                     = NVL(V_TEMP_ROW.PHONE_NUMBER,NVL(SD.PHONE_NUMBER,'XXX'))
               AND NVL(SD.EMPLOYEE_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.EMPLOYEE_NUMBER,NVL(SD.EMPLOYEE_NUMBER,'XXX'))
               AND NVL(SD.PAID_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_PAID_DATE_START,NVL(SD.PAID_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_PAID_DATE_END,NVL(SD.PAID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE))           = NVL(V_TEMP_ROW.STOP_PAY_DATE,NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE))    = NVL(V_TEMP_ROW.STOP_PAY_REMOVE_DATE,NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.VOID_DATE,TRUNC(SYSDATE))               = NVL(V_TEMP_ROW.VOID_DATE,NVL(SD.VOID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE))      = NVL(V_TEMP_ROW.AMOUNT_CHANGE_DATE,NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.GROSS_AMOUNT,-1)                        = NVL(V_TEMP_ROW.GROSS_AMOUNT,NVL(SD.GROSS_AMOUNT,-1))
               AND NVL(SD.RETAIN_AMOUNT,-1)                       = NVL(V_TEMP_ROW.RETAIN_AMOUNT,NVL(SD.RETAIN_AMOUNT,-1))
               AND NVL(SD.NET_AMOUNT,-1)                          = NVL(V_TEMP_ROW.NET_AMOUNT,NVL(SD.NET_AMOUNT,-1))
               AND NVL(SD.ORIGINAL_NET_AMOUNT,-1)                 = NVL(V_TEMP_ROW.ORIGINAL_NET_AMOUNT,NVL(SD.ORIGINAL_NET_AMOUNT,-1))
               AND NVL(SD.BANK_PAID_AMOUNT,-1)                    = NVL(V_TEMP_ROW.BANK_PAID_AMOUNT,NVL(SD.BANK_PAID_AMOUNT,-1))
               AND NVL(SD.TRANSACTION_SOURCE,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_SOURCE,NVL(SD.TRANSACTION_SOURCE,'XXX'))
               AND NVL(SD.CHANGE_DATE,TRUNC(SYSDATE))             = NVL(V_TEMP_ROW.CHANGE_DATE,NVL(SD.CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.CHANGE_SOURCE,'XXX')                    = NVL(V_TEMP_ROW.CHANGE_SOURCE,NVL(SD.CHANGE_SOURCE,'XXX'))
               AND NVL(SD.SLS_BOOK_DATE,'XXX')                    = NVL(V_TEMP_ROW.SLS_BOOK_DATE,NVL(SD.SLS_BOOK_DATE,'XXX'))
               AND NVL(SD.CYCLE_RUN_NUMBER,'XXX')                 = NVL(V_TEMP_ROW.CYCLE_RUN_NUMBER,NVL(SD.CYCLE_RUN_NUMBER,'XXX'))
               AND NVL(SD.BOOK_DATE_SEQUENCE,'XXX')               = NVL(V_TEMP_ROW.BOOK_DATE_SEQUENCE,NVL(SD.BOOK_DATE_SEQUENCE,'XXX'))
               AND NVL(SD.REASON_CODE,'XXX')                      = NVL(V_TEMP_ROW.REASON_CODE,NVL(SD.REASON_CODE,'XXX'))
               AND NVL(SD.DRAFT_NUMBER,'XXX') BETWEEN NVL(V_CHECK_RANGE_START,NVL(SD.DRAFT_NUMBER,'XXX')) 
                                                            AND NVL(V_CHECK_RANGE_END,NVL(SD.DRAFT_NUMBER,'XXX'))
               AND (NVL(SD.VOID_INDICATOR,'N')                   = NVL(V_TEMP_ROW.VOID_INDICATOR,'XXX')
                    OR NVL(SD.PAY_INDICATOR,'N')                 = NVL(V_TEMP_ROW.PAY_INDICATOR,'XXX')
                    OR NVL(SD.STOP_INDICATOR,'N')                = NVL(V_TEMP_ROW.STOP_INDICATOR,'XXX')
                    OR NVL(SD.OPEN_INDICATOR,'N')                = NVL(V_TEMP_ROW.OPEN_INDICATOR,'XXX'))
               AND SD.COST_CENTER_CODE                        = SDD.COST_CENTER_CODE(+)
               AND SD.CHECK_SERIAL_NUMBER                     = SDD.CHECK_SERIAL_NUMBER(+)
               AND SD.TRANSACTION_DATE                        = SDD.TRANSACTION_DATE(+)
               AND NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX') 
                                                              = NVL(V_GL_ACCOUNT_NUMBER,NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX'))
        UNION
            SELECT DISTINCT SD.*, 
                   DECODE(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,
                          '-',NULL,
                          SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER) AS GL_ACCOUNT_NUMBER
              FROM UNATTACHED_MNL_DRFT_DTL SD,
                   STORE_DRAFTS_DETAIL SDD
             WHERE NVL(SD.COST_CENTER_CODE,'XXX')                 = NVL(V_TEMP_ROW.COST_CENTER_CODE,NVL(SD.COST_CENTER_CODE,'XXX'))
               AND NVL(SD.CHECK_SERIAL_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CHECK_SERIAL_NUMBER,NVL(SD.CHECK_SERIAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_TRANSACTION_DATE_START,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_TRANSACTION_DATE_END,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.TERMINAL_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.TERMINAL_NUMBER,NVL(SD.TERMINAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_NUMBER,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_NUMBER,NVL(SD.TRANSACTION_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX')          = NVL(V_TEMP_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_JOB_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CUSTOMER_JOB_NUMBER,NVL(SD.CUSTOMER_JOB_NUMBER,'XXX'))
               AND INSTR(NVL(V_TRANSACTION_CODE,NVL(SD.POS_TRANSACTION_CODE,'XXX'))||',',NVL(SD.POS_TRANSACTION_CODE,'XXX')||',') > 0
               AND NVL(SD.POS_TRANSACTION_TIME,'XXX')             = NVL(V_TEMP_ROW.POS_TRANSACTION_TIME,NVL(SD.POS_TRANSACTION_TIME,'XXX'))
               AND NVL(SD.BANK_NUMBER,'XXX')                      = NVL(V_TEMP_ROW.BANK_NUMBER,NVL(SD.BANK_NUMBER,'XXX'))
               AND NVL(SD.BANK_ACCOUNT_NUMBER,'XXX')              = NVL(V_TEMP_ROW.BANK_ACCOUNT_NUMBER,NVL(SD.BANK_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.BANK_REFERENCE,'XXX')                   = NVL(V_TEMP_ROW.BANK_REFERENCE,NVL(SD.BANK_REFERENCE,'XXX'))
               AND NVL(SD.PAYEE_NAME,'XXX')                       = NVL(V_TEMP_ROW.PAYEE_NAME,NVL(SD.PAYEE_NAME,'XXX'))
               AND NVL(SD.ADDRESS_LINE_1,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_1,NVL(SD.ADDRESS_LINE_1,'XXX'))
               AND NVL(SD.ADDRESS_LINE_2,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_2,NVL(SD.ADDRESS_LINE_2,'XXX'))
               AND NVL(SD.CITY,'XXX')                             = NVL(V_TEMP_ROW.CITY,NVL(SD.CITY,'XXX'))
               AND NVL(SD.STATE_CODE,'XXX')                       = NVL(V_TEMP_ROW.STATE_CODE,NVL(SD.STATE_CODE,'XXX'))
               AND NVL(SD.ZIP_CODE_PREFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_PREFIX,NVL(SD.ZIP_CODE_PREFIX,'XXX'))
               AND NVL(SD.ZIP_CODE_SUFFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_SUFFIX,NVL(SD.ZIP_CODE_SUFFIX,'XXX'))
               AND NVL(SD.PHONE_AREA_CODE,'XXX')                  = NVL(V_TEMP_ROW.PHONE_AREA_CODE,NVL(SD.PHONE_AREA_CODE,'XXX'))
               AND NVL(SD.PHONE_NUMBER,'XXX')                     = NVL(V_TEMP_ROW.PHONE_NUMBER,NVL(SD.PHONE_NUMBER,'XXX'))
               AND NVL(SD.EMPLOYEE_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.EMPLOYEE_NUMBER,NVL(SD.EMPLOYEE_NUMBER,'XXX'))
               AND NVL(SD.PAID_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_PAID_DATE_START,NVL(SD.PAID_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_PAID_DATE_END,NVL(SD.PAID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE))           = NVL(V_TEMP_ROW.STOP_PAY_DATE,NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE))    = NVL(V_TEMP_ROW.STOP_PAY_REMOVE_DATE,NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.VOID_DATE,TRUNC(SYSDATE))               = NVL(V_TEMP_ROW.VOID_DATE,NVL(SD.VOID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE))      = NVL(V_TEMP_ROW.AMOUNT_CHANGE_DATE,NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.GROSS_AMOUNT,-1)                        = NVL(V_TEMP_ROW.GROSS_AMOUNT,NVL(SD.GROSS_AMOUNT,-1))
               AND NVL(SD.RETAIN_AMOUNT,-1)                       = NVL(V_TEMP_ROW.RETAIN_AMOUNT,NVL(SD.RETAIN_AMOUNT,-1))
               AND NVL(SD.NET_AMOUNT,-1)                          = NVL(V_TEMP_ROW.NET_AMOUNT,NVL(SD.NET_AMOUNT,-1))
               AND NVL(SD.ORIGINAL_NET_AMOUNT,-1)                 = NVL(V_TEMP_ROW.ORIGINAL_NET_AMOUNT,NVL(SD.ORIGINAL_NET_AMOUNT,-1))
               AND NVL(SD.BANK_PAID_AMOUNT,-1)                    = NVL(V_TEMP_ROW.BANK_PAID_AMOUNT,NVL(SD.BANK_PAID_AMOUNT,-1))
               AND NVL(SD.TRANSACTION_SOURCE,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_SOURCE,NVL(SD.TRANSACTION_SOURCE,'XXX'))
               AND NVL(SD.CHANGE_DATE,TRUNC(SYSDATE))             = NVL(V_TEMP_ROW.CHANGE_DATE,NVL(SD.CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.CHANGE_SOURCE,'XXX')                    = NVL(V_TEMP_ROW.CHANGE_SOURCE,NVL(SD.CHANGE_SOURCE,'XXX'))
               AND NVL(SD.SLS_BOOK_DATE,'XXX')                    = NVL(V_TEMP_ROW.SLS_BOOK_DATE,NVL(SD.SLS_BOOK_DATE,'XXX'))
               AND NVL(SD.CYCLE_RUN_NUMBER,'XXX')                 = NVL(V_TEMP_ROW.CYCLE_RUN_NUMBER,NVL(SD.CYCLE_RUN_NUMBER,'XXX'))
               AND NVL(SD.BOOK_DATE_SEQUENCE,'XXX')               = NVL(V_TEMP_ROW.BOOK_DATE_SEQUENCE,NVL(SD.BOOK_DATE_SEQUENCE,'XXX'))
               AND NVL(SD.REASON_CODE,'XXX')                      = NVL(V_TEMP_ROW.REASON_CODE,NVL(SD.REASON_CODE,'XXX'))
               AND NVL(SD.DRAFT_NUMBER,'XXX') BETWEEN NVL(V_CHECK_RANGE_START,NVL(SD.DRAFT_NUMBER,'XXX')) 
                                                            AND NVL(V_CHECK_RANGE_END,NVL(SD.DRAFT_NUMBER,'XXX'))
               /*AND (NVL(SD.VOID_INDICATOR,'N')                   = NVL(V_TEMP_ROW.VOID_INDICATOR,'XXX')
                    OR NVL(SD.PAY_INDICATOR,'N')                 = NVL(V_TEMP_ROW.PAY_INDICATOR,'XXX')
                    OR NVL(SD.STOP_INDICATOR,'N')                = NVL(V_TEMP_ROW.STOP_INDICATOR,'XXX')
                    OR NVL(SD.OPEN_INDICATOR,'N')                = NVL(V_TEMP_ROW.OPEN_INDICATOR,'XXX'))*/
               AND SD.COST_CENTER_CODE                        = SDD.COST_CENTER_CODE(+)
               AND SD.CHECK_SERIAL_NUMBER                     = SDD.CHECK_SERIAL_NUMBER(+)
               AND SD.TRANSACTION_DATE                        = SDD.TRANSACTION_DATE(+)
               AND NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX') 
                                                              = NVL(V_GL_ACCOUNT_NUMBER,NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX'));
    ELSE --Return any drafts with requested flags, but not the manual drafts
        OPEN OUT_REF_CUR FOR
            SELECT DISTINCT SD.*, 
                   DECODE(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,
                          '-',NULL,
                          SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER) AS GL_ACCOUNT_NUMBER
              FROM STORE_DRAFTS SD,
                   STORE_DRAFTS_DETAIL SDD
             WHERE NVL(SD.COST_CENTER_CODE,'XXX')                 = NVL(V_TEMP_ROW.COST_CENTER_CODE,NVL(SD.COST_CENTER_CODE,'XXX'))
               AND NVL(SD.CHECK_SERIAL_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CHECK_SERIAL_NUMBER,NVL(SD.CHECK_SERIAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_TRANSACTION_DATE_START,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_TRANSACTION_DATE_END,NVL(SD.TRANSACTION_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.TERMINAL_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.TERMINAL_NUMBER,NVL(SD.TERMINAL_NUMBER,'XXX'))
               AND NVL(SD.TRANSACTION_NUMBER,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_NUMBER,NVL(SD.TRANSACTION_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX')          = NVL(V_TEMP_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(SD.CUSTOMER_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.CUSTOMER_JOB_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CUSTOMER_JOB_NUMBER,NVL(SD.CUSTOMER_JOB_NUMBER,'XXX'))
               AND INSTR(NVL(V_TRANSACTION_CODE,NVL(SD.POS_TRANSACTION_CODE,'XXX'))||',',NVL(SD.POS_TRANSACTION_CODE,'XXX')||',') > 0
               AND NVL(SD.POS_TRANSACTION_TIME,'XXX')             = NVL(V_TEMP_ROW.POS_TRANSACTION_TIME,NVL(SD.POS_TRANSACTION_TIME,'XXX'))
               AND NVL(SD.BANK_NUMBER,'XXX')                      = NVL(V_TEMP_ROW.BANK_NUMBER,NVL(SD.BANK_NUMBER,'XXX'))
               AND NVL(SD.BANK_ACCOUNT_NUMBER,'XXX')              = NVL(V_TEMP_ROW.BANK_ACCOUNT_NUMBER,NVL(SD.BANK_ACCOUNT_NUMBER,'XXX'))
               AND NVL(SD.BANK_REFERENCE,'XXX')                   = NVL(V_TEMP_ROW.BANK_REFERENCE,NVL(SD.BANK_REFERENCE,'XXX'))
               AND NVL(SD.PAYEE_NAME,'XXX')                       = NVL(V_TEMP_ROW.PAYEE_NAME,NVL(SD.PAYEE_NAME,'XXX'))
               AND NVL(SD.ADDRESS_LINE_1,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_1,NVL(SD.ADDRESS_LINE_1,'XXX'))
               AND NVL(SD.ADDRESS_LINE_2,'XXX')                   = NVL(V_TEMP_ROW.ADDRESS_LINE_2,NVL(SD.ADDRESS_LINE_2,'XXX'))
               AND NVL(SD.CITY,'XXX')                             = NVL(V_TEMP_ROW.CITY,NVL(SD.CITY,'XXX'))
               AND NVL(SD.STATE_CODE,'XXX')                       = NVL(V_TEMP_ROW.STATE_CODE,NVL(SD.STATE_CODE,'XXX'))
               AND NVL(SD.ZIP_CODE_PREFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_PREFIX,NVL(SD.ZIP_CODE_PREFIX,'XXX'))
               AND NVL(SD.ZIP_CODE_SUFFIX,'XXX')                  = NVL(V_TEMP_ROW.ZIP_CODE_SUFFIX,NVL(SD.ZIP_CODE_SUFFIX,'XXX'))
               AND NVL(SD.PHONE_AREA_CODE,'XXX')                  = NVL(V_TEMP_ROW.PHONE_AREA_CODE,NVL(SD.PHONE_AREA_CODE,'XXX'))
               AND NVL(SD.PHONE_NUMBER,'XXX')                     = NVL(V_TEMP_ROW.PHONE_NUMBER,NVL(SD.PHONE_NUMBER,'XXX'))
               AND NVL(SD.EMPLOYEE_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.EMPLOYEE_NUMBER,NVL(SD.EMPLOYEE_NUMBER,'XXX'))
               AND NVL(SD.PAID_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_PAID_DATE_START,NVL(SD.PAID_DATE,TRUNC(SYSDATE))) 
                                                            AND NVL(V_PAID_DATE_END,NVL(SD.PAID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE))           = NVL(V_TEMP_ROW.STOP_PAY_DATE,NVL(SD.STOP_PAY_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE))    = NVL(V_TEMP_ROW.STOP_PAY_REMOVE_DATE,NVL(SD.STOP_PAY_REMOVE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.VOID_DATE,TRUNC(SYSDATE))               = NVL(V_TEMP_ROW.VOID_DATE,NVL(SD.VOID_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE))      = NVL(V_TEMP_ROW.AMOUNT_CHANGE_DATE,NVL(SD.AMOUNT_CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.GROSS_AMOUNT,-1)                        = NVL(V_TEMP_ROW.GROSS_AMOUNT,NVL(SD.GROSS_AMOUNT,-1))
               AND NVL(SD.RETAIN_AMOUNT,-1)                       = NVL(V_TEMP_ROW.RETAIN_AMOUNT,NVL(SD.RETAIN_AMOUNT,-1))
               AND NVL(SD.NET_AMOUNT,-1)                          = NVL(V_TEMP_ROW.NET_AMOUNT,NVL(SD.NET_AMOUNT,-1))
               AND NVL(SD.ORIGINAL_NET_AMOUNT,-1)                 = NVL(V_TEMP_ROW.ORIGINAL_NET_AMOUNT,NVL(SD.ORIGINAL_NET_AMOUNT,-1))
               AND NVL(SD.BANK_PAID_AMOUNT,-1)                    = NVL(V_TEMP_ROW.BANK_PAID_AMOUNT,NVL(SD.BANK_PAID_AMOUNT,-1))
               AND NVL(SD.TRANSACTION_SOURCE,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_SOURCE,NVL(SD.TRANSACTION_SOURCE,'XXX'))
               AND NVL(SD.CHANGE_DATE,TRUNC(SYSDATE))             = NVL(V_TEMP_ROW.CHANGE_DATE,NVL(SD.CHANGE_DATE,TRUNC(SYSDATE)))
               AND NVL(SD.CHANGE_SOURCE,'XXX')                    = NVL(V_TEMP_ROW.CHANGE_SOURCE,NVL(SD.CHANGE_SOURCE,'XXX'))
               AND NVL(SD.SLS_BOOK_DATE,'XXX')                    = NVL(V_TEMP_ROW.SLS_BOOK_DATE,NVL(SD.SLS_BOOK_DATE,'XXX'))
               AND NVL(SD.CYCLE_RUN_NUMBER,'XXX')                 = NVL(V_TEMP_ROW.CYCLE_RUN_NUMBER,NVL(SD.CYCLE_RUN_NUMBER,'XXX'))
               AND NVL(SD.BOOK_DATE_SEQUENCE,'XXX')               = NVL(V_TEMP_ROW.BOOK_DATE_SEQUENCE,NVL(SD.BOOK_DATE_SEQUENCE,'XXX'))
               AND NVL(SD.REASON_CODE,'XXX')                      = NVL(V_TEMP_ROW.REASON_CODE,NVL(SD.REASON_CODE,'XXX'))
               AND NVL(SD.DRAFT_NUMBER,'XXX') BETWEEN NVL(V_CHECK_RANGE_START,NVL(SD.DRAFT_NUMBER,'XXX')) 
                                                            AND NVL(V_CHECK_RANGE_END,NVL(SD.DRAFT_NUMBER,'XXX'))
               AND (NVL(SD.VOID_INDICATOR,'N')                   = NVL(V_TEMP_ROW.VOID_INDICATOR,'XXX')
                    OR NVL(SD.PAY_INDICATOR,'N')                 = NVL(V_TEMP_ROW.PAY_INDICATOR,'XXX')
                    OR NVL(SD.STOP_INDICATOR,'N')                = NVL(V_TEMP_ROW.STOP_INDICATOR,'XXX')
                    OR NVL(SD.OPEN_INDICATOR,'N')                = NVL(V_TEMP_ROW.OPEN_INDICATOR,'XXX'))
               AND SD.COST_CENTER_CODE                        = SDD.COST_CENTER_CODE(+)
               AND SD.CHECK_SERIAL_NUMBER                     = SDD.CHECK_SERIAL_NUMBER(+)
               AND SD.TRANSACTION_DATE                        = SDD.TRANSACTION_DATE(+)
               AND NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX') 
                                                              = NVL(V_GL_ACCOUNT_NUMBER,NVL(SDD.GL_PRIME_ACCOUNT_NUMBER||'-'||SDD.GL_SUB_ACCOUNT_NUMBER,'XXX'));
    END IF;

EXCEPTION
    WHEN OTHERS THEN 
        V_CODE  := SQLCODE;
        V_ERRM  := SUBSTR(SQLERRM,1,200);
        ERRPKG.RAISE_ERR(V_CODE, 'STORE_DRAFTS_FILTER_S_SP, ' || ' ' || 'IN_TABLE_NAME IS ' || IN_TABLE_NAME, V_ERRM);
END STORE_DRAFTS_FILTER_S_SP;

PROCEDURE STORE_DRAFTS_DTL_FILTER_S_SP (
/*******************************************************************************
	STORE_DRAFTS_DTL_FILTER_S_SP
  
	This procedure is intended to select records from STORE_DRAFTS_DETAIL table

<?xml version="1.0" encoding="UTF-8" ?>
<STORE_DRAFTS_DETAIL_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
<STORE_DRAFTS_DETAIL>
<STORE_DRAFTS_DETAIL_ID>XXXXXXXXXXXXXXXXXXXXXX</STORE_DRAFTS_DETAIL_ID>
<COST_CENTER_CODE>XXXXXXXXXXXXXXXXXXXXXXXX</COST_CENTER_CODE>
<CHECK_SERIAL_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CHECK_SERIAL_NUMBER>
  <TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
  <TRANSACTION_DATE_START>03-30-2012</TRANSACTION_DATE_START>
<TERMINAL_NUMBER>XXXXXXXXXXXXXXXXXXXX</TERMINAL_NUMBER>
<TRANSACTION_NUMBER>XXXXXXXXXXXXXXXXXXXX</TRANSACTION_NUMBER>
<CUSTOMER_ACCOUNT_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CUSTOMER_ACCOUNT_NUMBER>
<CUSTOMER_JOB_NUMBER>XXXXXXXX</CUSTOMER_JOB_NUMBER>
<GL_PRIME_ACCOUNT_NUMBER>XXXXXXXXXXXXXXXX</GL_PRIME_ACCOUNT_NUMBER>
<GL_SUB_ACCOUNT_NUMBER>XXXXXXXXXXXX</GL_SUB_ACCOUNT_NUMBER>
<ITEM_QUANTITY>XXXXXXXXXXXXXXXXXXXXXX</ITEM_QUANTITY>
<ITEM_PRICE>XXXXXXXXXXXXXXXXXXXXXX</ITEM_PRICE>
<ITEM_EXT_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</ITEM_EXT_AMOUNT>
<BOOK_DATE_SEQUENCE>XXXXXXXXXXXXXXXXXXXX</BOOK_DATE_SEQUENCE>
<LBR_TRANSACTION_DATE>MM-DD-RRRR</LBR_TRANSACTION_DATE>
<LBR_TERMINAL_NUMBER>XXXXXXXXXXXXXXXXXXXX</LBR_TERMINAL_NUMBER>
<LBR_TRANSACTION_NUMBER>XXXXXXXXXXXXXXXXXXXX</LBR_TRANSACTION_NUMBER>
</STORE_DRAFTS_DETAIL>
</STORE_DRAFTS_DETAIL_UI_SP>

Created : 11/03/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT SD_TABLE_IU_PKG.REF_CURSOR)
IS
    V_CODE NUMBER;
    V_ERRM VARCHAR2(500);

    V_TEMP_ROW       STORE_DRAFTS_DETAIL%ROWTYPE;
    V_CHECK_RANGE_START      STORE_DRAFTS.DRAFT_NUMBER%TYPE;
    V_CHECK_RANGE_END        STORE_DRAFTS.DRAFT_NUMBER%TYPE;
    V_TRANSACTION_DATE_START STORE_DRAFTS.TRANSACTION_DATE%TYPE;
    V_TRANSACTION_DATE_END   STORE_DRAFTS.TRANSACTION_DATE%TYPE;
BEGIN

    SD_TABLE_IU_PKG.STORE_DRAFTS_DETAIL_ROWTYPE_SP(IN_TABLE_NAME,
                                                   IN_ROW_DATA,
                                                   V_TEMP_ROW);

    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/CHECK_RANGE_START/text()') = 1) THEN
        V_CHECK_RANGE_START := XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/CHECK_RANGE_START/text()').GETSTRINGVAL();
    END IF;
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/CHECK_RANGE_END/text()') = 1) THEN
        V_CHECK_RANGE_END := XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/CHECK_RANGE_END/text()').GETSTRINGVAL();
    END IF;

    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/TRANSACTION_DATE_START/text()') = 1) THEN
        V_TRANSACTION_DATE_START := TO_DATE(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/TRANSACTION_DATE_START/text()').GETSTRINGVAL(),'MM-DD-YYYY');
    END IF;
    IF (XMLTYPE(IN_ROW_DATA).EXISTSNODE('/STORE_DRAFTS/TRANSACTION_DATE_END/text()') = 1) THEN
        V_TRANSACTION_DATE_END   := TO_DATE(XMLTYPE(IN_ROW_DATA).EXTRACT('/STORE_DRAFTS/TRANSACTION_DATE_END/text()').GETSTRINGVAL(),'MM-DD-YYYY');
    END IF;

    OPEN OUT_REF_CUR FOR
        SELECT *
          FROM STORE_DRAFTS_DETAIL
         WHERE NVL(STORE_DRAFTS_DETAIL_ID,-1)              = NVL(V_TEMP_ROW.STORE_DRAFTS_DETAIL_ID,NVL(STORE_DRAFTS_DETAIL_ID,-1))
           AND NVL(COST_CENTER_CODE,'XXX')                 = NVL(V_TEMP_ROW.COST_CENTER_CODE,NVL(COST_CENTER_CODE,'XXX'))
           AND NVL(CHECK_SERIAL_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CHECK_SERIAL_NUMBER,NVL(CHECK_SERIAL_NUMBER,'XXX'))
           --AND NVL(TRANSACTION_DATE,TRUNC(SYSDATE))        = NVL(V_TEMP_ROW.TRANSACTION_DATE,NVL(TRANSACTION_DATE,TRUNC(SYSDATE)))
           AND NVL(TRANSACTION_DATE,TRUNC(SYSDATE)) BETWEEN NVL(V_TRANSACTION_DATE_START,NVL(TRANSACTION_DATE,TRUNC(SYSDATE))) 
                                                        AND NVL(V_TRANSACTION_DATE_END,NVL(TRANSACTION_DATE,TRUNC(SYSDATE)))
           AND NVL(TERMINAL_NUMBER,'XXX')                  = NVL(V_TEMP_ROW.TERMINAL_NUMBER,NVL(TERMINAL_NUMBER,'XXX'))
           AND NVL(TRANSACTION_NUMBER,'XXX')               = NVL(V_TEMP_ROW.TRANSACTION_NUMBER,NVL(TRANSACTION_NUMBER,'XXX'))
           AND NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX')          = NVL(V_TEMP_ROW.CUSTOMER_ACCOUNT_NUMBER,NVL(CUSTOMER_ACCOUNT_NUMBER,'XXX'))
           AND NVL(CUSTOMER_JOB_NUMBER,'XXX')              = NVL(V_TEMP_ROW.CUSTOMER_JOB_NUMBER,NVL(CUSTOMER_JOB_NUMBER,'XXX'))
           AND NVL(GL_PRIME_ACCOUNT_NUMBER,'XXX')          = NVL(V_TEMP_ROW.GL_PRIME_ACCOUNT_NUMBER,NVL(GL_PRIME_ACCOUNT_NUMBER,'XXX'))
           AND NVL(GL_SUB_ACCOUNT_NUMBER,'XXX')            = NVL(V_TEMP_ROW.GL_SUB_ACCOUNT_NUMBER,NVL(GL_SUB_ACCOUNT_NUMBER,'XXX'))
           AND NVL(ITEM_QUANTITY,-1)                       = NVL(V_TEMP_ROW.ITEM_QUANTITY,NVL(ITEM_QUANTITY,-1))
           AND NVL(ITEM_PRICE,-1)                          = NVL(V_TEMP_ROW.ITEM_PRICE,NVL(ITEM_PRICE,-1))
           AND NVL(ITEM_EXT_AMOUNT,-1)                     = NVL(V_TEMP_ROW.ITEM_EXT_AMOUNT,NVL(ITEM_EXT_AMOUNT,-1))
           AND NVL(BOOK_DATE_SEQUENCE,'XXX')               = NVL(V_TEMP_ROW.BOOK_DATE_SEQUENCE,NVL(BOOK_DATE_SEQUENCE,'XXX'))
           AND NVL(LBR_TRANSACTION_DATE,TRUNC(SYSDATE))    = NVL(V_TEMP_ROW.LBR_TRANSACTION_DATE,NVL(LBR_TRANSACTION_DATE,TRUNC(SYSDATE)))
           AND NVL(LBR_TERMINAL_NUMBER,'XXX')              = NVL(V_TEMP_ROW.LBR_TERMINAL_NUMBER,NVL(LBR_TERMINAL_NUMBER,'XXX'))
           AND NVL(LBR_TRANSACTION_NUMBER,'XXX')           = NVL(V_TEMP_ROW.LBR_TRANSACTION_NUMBER,NVL(LBR_TRANSACTION_NUMBER,'XXX'));

EXCEPTION
    WHEN OTHERS THEN
        V_CODE  := SQLCODE;
        V_ERRM  := SUBSTR(SQLERRM,1,200);
        ERRPKG.RAISE_ERR(V_CODE, 'STORE_DRAFTS_DETAIL_S_SP, ' || ' ' || 'IN_TABLE_NAME IS ' || IN_TABLE_NAME, V_ERRM);
END STORE_DRAFTS_DTL_FILTER_S_SP;

END SD_UI_REPORTS_PKG;

