create or replace PACKAGE BODY SD_POSXML_INTF_DIFF_pkg
/**************************************************************** 
      This package is used to Compare the Legacy Flat file data load and 
      the POSXML table driven data load and get the Differance files created.
      
created : 04/14/2016 AXD783 POS XML Conversion
changed : 
*****************************************************************/
AS

g_char             VARCHAR2(1) := 'X';
g_num              NUMBER := 9999999999;
g_date             DATE := TO_DATE('01-01-1000','MM-DD-YYYY');
g_schema           VARCHAR2(10) := 'STORDRFT';

PROCEDURE GEN_DELTA_FILES_sp
/*********************************************************************** 
        This Procedure is Wrapper procedure, which is used to generate
        all difference files in server.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
************************************************************************/

IS

v_error                       VARCHAR2(100);

BEGIN

    -- Call STORE_DRAFTS_DIFF_sp procedure
    v_error := 'DIff Tables between POSXML_ISSUE_CHG_DATA_TMP and FF_ISSUE_CHANGE_DATA_TMP';
    STORE_DRAFTS_DIFF_sp;
       
    -- Call STORE_DRAFT_INSTLR_DIFF_sp procedure
    v_error := 'DIff Tables between POSXML_INSTLR_LN_ITEM_DATA_TMP and FF_INSTLR_LN_ITEM_DATA_TMP';
    STORE_DRAFT_INSTLR_DIFF_sp;
  
    -- Call STORE_DRAFT_DISBRSMT_DIFF_sp procedure 
    v_error := 'DIff Tables between POSXML_DISBRSMT_LINE_ITEM_TMP and FF_DISBRSMT_LINE_ITEM_DATA_TMP';
    STORE_DRAFT_DISBRSMT_DIFF_sp;

    -- Call CUSTOMER_DIFF_sp procedure 
    v_error := 'DIff Tables between POSXML_CSTMR_TMP and FF_CUSTOMER_TMP';
    CUSTOMER_DIFF_sp;
   
    -- Call CSTMR_DETAILS_DIFF_sp procedure 
    v_error := 'DIff Tables between POSXML_CSTMR_DTLS_TMP and FF_CUSTOMER_DETAILS_TMP';
    CSTMR_DETAILS_DIFF_sp;
      
    -- Call CSTMR_LINE_ITEM_DIFF_sp procedure 
    v_error := 'DIff Tables between POSXML_CUST_LINE_ITEM_DATA_TMP and FF_CSTMR_LINE_ITEM_DATA_TMP';
    CSTMR_LINE_ITEM_DIFF_sp;
                          
    -- Call CSTMR_SALES_TAX_DIFF_sp procedure 
    v_error := 'DIff Tables between POSXML_CSTMR_SLS_TAX_TMP and FF_CSTMR_SALES_TAX_TMP';
    CSTMR_SALES_TAX_DIFF_sp;
   
    -- Call CSTMR_FORM_OF_PAY_DIFF_sp procedure 
    v_error := 'DIff Tables between POSXML_CSTMR_FRM_OF_PAY_TMP and FF_CSTMR_FORM_OF_PAY_TMP';
    CSTMR_FORM_OF_PAY_DIFF_sp;
     
    -- Call CSTMR_BANK_CARD_DIFF_sp procedure 
    v_error := 'DIff Tables between POSXML_CSTMR_BNK_CRD_TMP and FF_CSTMR_BANK_CARD_TMP';
    CSTMR_BANK_CARD_DIFF_sp;
      
    -- Call BANK_PAID_DATA_DIFF_sp procedure 
    v_error := 'DIff Tables between POSXML_BNK_PAID_DATA_TMP and FF_BANK_PAID_DATA';
    BANK_PAID_DATA_DIFF_sp;
  
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                   ,'GEN_DELTA_FILES_sp'||v_error
                                   ,SQLERRM
                                   ,'000000'
                                   ,'0000000000');
END GEN_DELTA_FILES_sp;


PROCEDURE STORE_DRAFTS_DIFF_sp
/**************************************************************** 
        This Procedure is used compare the legacy Store drafts load and 
        POSXML Store drafts load and creats a Difference file.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
*****************************************************************/
IS

CURSOR c_legacy IS
SELECT FF.COST_CENTER_CODE COST_CENTER_CODE1
      ,FF.CHECK_SERIAL_NUMBER CHECK_SERIAL_NUMBER1
      ,FF.DRAFT_NUMBER DRAFT_NUMBER1
      ,FF.PROCESS_DATE PROCESS_DATE1
      ,FF.FILLER FILLER1
      ,FF.NET_AMOUNT_SIGN NET_AMOUNT_SIGN1
      ,FF.NET_AMOUNT NET_AMOUNT1
      ,FF.GROSS_AMOUNT_SIGN GROSS_AMOUNT_SIGN1
      ,FF.GROSS_AMOUNT GROSS_AMOUNT1
      ,FF.RETAINAGE_AMOUNT_SIGN RETAINAGE_AMOUNT_SIGN1
      ,FF.RETAINAGE_AMOUNT RETAINAGE_AMOUNT1
      ,FF.ISSUE_DATE ISSUE_DATE1
      ,FF.TRANSACTION_DATE TRANSACTION_DATE1
      ,FF.TERMINAL_NUMBER TERMINAL_NUMBER1
      ,FF.TRANSACTION_NUMBER TRANSACTION_NUMBER1
      ,FF.CUSTOMER_ACCOUNT_NUMBER CUSTOMER_ACCOUNT_NUMBER1
      ,FF.CUSTOMER_JOB_NUMBER CUSTOMER_JOB_NUMBER1
      ,FF.POS_TRANSACTION_CODE POS_TRANSACTION_CODE1
      ,FF.PAYEE_NAME PAYEE_NAME1
      ,FF.ADDRESS_LINE_1 ADDRESS_LINE_11
      ,FF.ADDRESS_LINE_2 ADDRESS_LINE_21
      ,FF.CITY CITY1
      ,FF.STATE_CODE STATE_CODE1
      ,FF.ZIP_CODE ZIP_CODE1
      ,FF.PHONE_NUMBER PHONE_NUMBER1
      ,FF.TRANSACTION_TIME TRANSACTION_TIME1
      ,FF.EMPLOYEE_NUMBER EMPLOYEE_NUMBER1
      ,FF.BOOK_DATE BOOK_DATE1
      ,FF.CYCLE_RUN_NUMBER CYCLE_RUN_NUMBER1
      ,FF.REASON_CODE REASON_CODE1
      ,POS.COST_CENTER_CODE COST_CENTER_CODE2
      ,POS.CHECK_SERIAL_NUMBER CHECK_SERIAL_NUMBER2
      ,POS.DRAFT_NUMBER DRAFT_NUMBER2
      ,POS.PROCESS_DATE PROCESS_DATE2
      ,POS.FILLER FILLER2
      ,POS.NET_AMOUNT_SIGN NET_AMOUNT_SIGN2
      ,POS.NET_AMOUNT NET_AMOUNT2
      ,POS.GROSS_AMOUNT_SIGN GROSS_AMOUNT_SIGN2
      ,POS.GROSS_AMOUNT GROSS_AMOUNT2
      ,POS.RETAINAGE_AMOUNT_SIGN RETAINAGE_AMOUNT_SIGN2
      ,POS.RETAINAGE_AMOUNT RETAINAGE_AMOUNT2
      ,POS.ISSUE_DATE ISSUE_DATE2
      ,POS.TRANSACTION_DATE TRANSACTION_DATE2
      ,POS.TERMINAL_NUMBER TERMINAL_NUMBER2
      ,POS.TRANSACTION_NUMBER TRANSACTION_NUMBER2
      ,POS.CUSTOMER_ACCOUNT_NUMBER CUSTOMER_ACCOUNT_NUMBER2
      ,POS.CUSTOMER_JOB_NUMBER CUSTOMER_JOB_NUMBER2
      ,POS.POS_TRANSACTION_CODE POS_TRANSACTION_CODE2
      ,POS.PAYEE_NAME PAYEE_NAME2
      ,POS.ADDRESS_LINE_1 ADDRESS_LINE_12
      ,POS.ADDRESS_LINE_2 ADDRESS_LINE_22
      ,POS.CITY CITY2
      ,POS.STATE_CODE STATE_CODE2
      ,POS.ZIP_CODE ZIP_CODE2
      ,POS.PHONE_NUMBER PHONE_NUMBER2
      ,POS.TRANSACTION_TIME TRANSACTION_TIME2
      ,POS.EMPLOYEE_NUMBER EMPLOYEE_NUMBER2
      ,POS.BOOK_DATE BOOK_DATE2
      ,POS.CYCLE_RUN_NUMBER CYCLE_RUN_NUMBER2
      ,POS.REASON_CODE REASON_CODE2
  FROM FF_ISSUE_CHANGE_DATA_TMP FF
       FULL OUTER JOIN POSXML_ISSUE_CHG_DATA_TMP POS
       ON FF.CHECK_SERIAL_NUMBER = POS.CHECK_SERIAL_NUMBER
 WHERE FF.CHECK_SERIAL_NUMBER IS NULL OR
       POS.CHECK_SERIAL_NUMBER IS NULL OR
       NVL(FF.COST_CENTER_CODE,g_char) <> NVL(POS.COST_CENTER_CODE,g_char) OR
       NVL(FF.DRAFT_NUMBER,g_char) <> NVL(POS.DRAFT_NUMBER,g_char) OR
       NVL(FF.PROCESS_DATE,g_char) <> NVL(POS.PROCESS_DATE,g_char) OR
       NVL(FF.FILLER,g_char) <> NVL(POS.FILLER,g_char) OR
       NVL(FF.NET_AMOUNT_SIGN,g_char) <> NVL(POS.NET_AMOUNT_SIGN,g_char) OR
       NVL(FF.NET_AMOUNT,g_char) <> NVL(POS.NET_AMOUNT,g_char) OR
       NVL(FF.GROSS_AMOUNT_SIGN,g_char) <> NVL(POS.GROSS_AMOUNT_SIGN,g_char) OR
       NVL(FF.GROSS_AMOUNT,g_char) <> NVL(POS.GROSS_AMOUNT,g_char) OR
       NVL(FF.RETAINAGE_AMOUNT_SIGN,g_char) <> NVL(POS.RETAINAGE_AMOUNT_SIGN,g_char) OR
       NVL(FF.RETAINAGE_AMOUNT,g_char) <> NVL(POS.RETAINAGE_AMOUNT,g_char) OR
       NVL(FF.ISSUE_DATE,g_char) <> NVL(POS.ISSUE_DATE,g_char) OR
       NVL(FF.TRANSACTION_DATE,g_char) <> NVL(POS.TRANSACTION_DATE,g_char) OR
       NVL(FF.TERMINAL_NUMBER,g_char) <> NVL(POS.TERMINAL_NUMBER,g_char) OR
       NVL(FF.TRANSACTION_NUMBER,g_char) <> NVL(POS.TRANSACTION_NUMBER,g_char) OR
       NVL(FF.CUSTOMER_ACCOUNT_NUMBER,g_char) <> NVL(POS.CUSTOMER_ACCOUNT_NUMBER,g_char) OR
       NVL(FF.CUSTOMER_JOB_NUMBER,g_char) <> NVL(POS.CUSTOMER_JOB_NUMBER,g_char) OR
       NVL(FF.POS_TRANSACTION_CODE,g_char) <> NVL(POS.POS_TRANSACTION_CODE,g_char) OR
       NVL(FF.PAYEE_NAME,g_char) <> NVL(POS.PAYEE_NAME,g_char) OR
       NVL(FF.ADDRESS_LINE_1,g_char) <> NVL(POS.ADDRESS_LINE_1,g_char) OR
       NVL(FF.ADDRESS_LINE_2,g_char) <> NVL(POS.ADDRESS_LINE_2,g_char) OR
       NVL(FF.CITY,g_char) <> NVL(POS.CITY,g_char) OR
       NVL(FF.STATE_CODE,g_char) <> NVL(POS.STATE_CODE,g_char) OR
       NVL(FF.ZIP_CODE,g_char) <> NVL(POS.ZIP_CODE,g_char) OR
       NVL(FF.PHONE_NUMBER,g_char) <> NVL(POS.PHONE_NUMBER,g_char) OR
       NVL(FF.TRANSACTION_TIME,g_char) <> NVL(POS.TRANSACTION_TIME,g_char) OR
       NVL(FF.EMPLOYEE_NUMBER,g_char) <> NVL(POS.EMPLOYEE_NUMBER,g_char) OR
       NVL(FF.BOOK_DATE,g_char) <> NVL(POS.BOOK_DATE,g_char) OR
       NVL(FF.CYCLE_RUN_NUMBER,g_char) <> NVL(POS.CYCLE_RUN_NUMBER,g_char) OR
       NVL(FF.REASON_CODE,g_char) <> NVL(POS.REASON_CODE,g_char)
       ;

v_file_name                         VARCHAR2(100) := 'POSXML_STORE_DRAFTS_DIFF';
v_file_path                         VARCHAR2(100);
v_header                            CLOB;
v_store_draft_rec1                  CLOB;
v_store_draft_rec2                  CLOB;
v_store_drafts_diff_file            utl_file.file_type;
v_rec                               c_legacy%ROWTYPE;


BEGIN
       
         
    v_file_path := ccn_common_tools.get_datafile_path_fnc(g_schema);

    v_store_drafts_diff_file := utl_file.fopen ( v_file_path
                                                ,v_file_name || TO_CHAR(SYSDATE,'_MMDDYY') ||'.csv'
                                                ,'W' 
                                                ,32767); 

    v_header   :=   'IN_TABLE'                                ||','||
                    'COST_CENTER_CODE'                        ||','||   
                    'CHECK_SERIAL_NUMBER'                     ||','||  
                    'DRAFT_NUMBER'                            ||','|| 
                    'PROCESS_DATE'                            ||','|| 
                    'FILLER'                                  ||','|| 
                    'NET_AMOUNT_SIGN'                         ||','|| 
                    'NET_AMOUNT'                              ||','|| 
                    'GROSS_AMOUNT_SIGN'                       ||','||  
                    'GROSS_AMOUNT'                            ||','|| 
                    'RETAINAGE_AMOUNT_SIGN'                   ||','|| 
                    'RETAINAGE_AMOUNT'                        ||','|| 
                    'ISSUE_DATE'                              ||','|| 
                    'TRANSACTION_DATE'                        ||','||  
                    'TERMINAL_NUMBER'                         ||','|| 
                    'TRANSACTION_NUMBER'                      ||','|| 
                    'CUSTOMER_ACCOUNT_NUMBER'                 ||','||  
                    'CUSTOMER_JOB_NUMBER'                     ||','|| 
                    'POS_TRANSACTION_CODE'                    ||','|| 
                    'PAYEE_NAME'                              ||','|| 
                    'ADDRESS_LINE_1'                          ||','|| 
                    'ADDRESS_LINE_2'                          ||','|| 
                    'CITY'                                    ||','|| 
                    'STATE_CODE'                              ||','|| 
                    'ZIP_CODE'                                ||','|| 
                    'PHONE_NUMBER'                            ||','|| 
                    'TRANSACTION_TIME'                        ||','|| 
                    'EMPLOYEE_NUMBER'                         ||','|| 
                    'BOOK_DATE'                               ||','||  
                    'CYCLE_RUN_NUMBER'                        ||','|| 
                    'REASON_CODE'                             
                    ;  


    UTL_FILE.PUT_LINE(v_store_drafts_diff_file, v_header, TRUE);

    FOR v_rec IN c_legacy LOOP
               
        v_store_draft_rec1 := 'LEGACY'||','||v_rec.COST_CENTER_CODE1||','||v_rec.CHECK_SERIAL_NUMBER1||','||v_rec.DRAFT_NUMBER1
                              ||','||v_rec.PROCESS_DATE1||','||v_rec.FILLER1||','||v_rec.NET_AMOUNT_SIGN1||','||v_rec.NET_AMOUNT1||','||v_rec.GROSS_AMOUNT_SIGN1
                              ||','||v_rec.GROSS_AMOUNT1||','||v_rec.RETAINAGE_AMOUNT_SIGN1||','||v_rec.RETAINAGE_AMOUNT1||','||v_rec.ISSUE_DATE1||','||v_rec.TRANSACTION_DATE1
                              ||','||v_rec.TERMINAL_NUMBER1||','||v_rec.TRANSACTION_NUMBER1||','||v_rec.CUSTOMER_ACCOUNT_NUMBER1||','||v_rec.CUSTOMER_JOB_NUMBER1||','||v_rec.POS_TRANSACTION_CODE1
                              ||','||v_rec.PAYEE_NAME1||','||v_rec.ADDRESS_LINE_11||','||v_rec.ADDRESS_LINE_21||','||v_rec.CITY1||','||v_rec.STATE_CODE1||','||v_rec.ZIP_CODE1||','||v_rec.PHONE_NUMBER1
                              ||','||v_rec.TRANSACTION_TIME1||','||v_rec.EMPLOYEE_NUMBER1||','||v_rec.BOOK_DATE1||','||v_rec.CYCLE_RUN_NUMBER1||','||v_rec.REASON_CODE1
                              ;
                                
          
        v_store_draft_rec2 := 'POS'||','||v_rec.COST_CENTER_CODE2||','||v_rec.CHECK_SERIAL_NUMBER2||','||v_rec.DRAFT_NUMBER2
                              ||','||v_rec.PROCESS_DATE2||','||v_rec.FILLER2||','||v_rec.NET_AMOUNT_SIGN2||','||v_rec.NET_AMOUNT2||','||v_rec.GROSS_AMOUNT_SIGN2
                              ||','||v_rec.GROSS_AMOUNT2||','||v_rec.RETAINAGE_AMOUNT_SIGN2||','||v_rec.RETAINAGE_AMOUNT2||','||v_rec.ISSUE_DATE2||','||v_rec.TRANSACTION_DATE2
                              ||','||v_rec.TERMINAL_NUMBER2||','||v_rec.TRANSACTION_NUMBER2||','||v_rec.CUSTOMER_ACCOUNT_NUMBER2||','||v_rec.CUSTOMER_JOB_NUMBER2||','||v_rec.POS_TRANSACTION_CODE2
                              ||','||v_rec.PAYEE_NAME2||','||v_rec.ADDRESS_LINE_12||','||v_rec.ADDRESS_LINE_22||','||v_rec.CITY2||','||v_rec.STATE_CODE2||','||v_rec.ZIP_CODE2||','||v_rec.PHONE_NUMBER2
                              ||','||v_rec.TRANSACTION_TIME2||','||v_rec.EMPLOYEE_NUMBER2||','||v_rec.BOOK_DATE2||','||v_rec.CYCLE_RUN_NUMBER2||','||v_rec.REASON_CODE2
                              ;
                    
        UTL_FILE.PUT_LINE(v_store_drafts_diff_file, v_store_draft_rec1, TRUE);
            
        UTL_FILE.PUT_LINE(v_store_drafts_diff_file, v_store_draft_rec2, TRUE);
            
    END LOOP;

EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                   ,'STORE_DRAFTS_DIFF_sp'
                                   ,SQLERRM
                                   ,'000000'
                                   ,'0000000000');
END STORE_DRAFTS_DIFF_sp;

--

PROCEDURE STORE_DRAFT_INSTLR_DIFF_sp
/**************************************************************** 
        This Procedure is used compare the legacy Store drafts Installer lines details load 
        and the POSXML Store drafts Installer lines details load and creats a Difference file.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
*****************************************************************/
IS

CURSOR c_legacy IS
SELECT FF.COST_CENTER_CODE COST_CENTER_CODE1
      ,FF.CHECK_SERIAL_NUMBER CHECK_SERIAL_NUMBER1
      ,FF.PROCESS_DATE PROCESS_DATE1
      ,FF.FILLER FILLER1
      ,FF.ITEM_EXT_AMOUNT_SIGN ITEM_EXT_AMOUNT_SIGN1
      ,FF.ITEM_EXT_AMOUNT ITEM_EXT_AMOUNT1
      ,FF.ORGNL_TERMINAL_NUMBER ORGNL_TERMINAL_NUMBER1
      ,FF.ORGNL_TRANSACTION_NUMBER ORGNL_TRANSACTION_NUMBER1
      ,FF.ITEM_QUANTITY_SIGN ITEM_QUANTITY_SIGN1
      ,FF.ITEM_QUANTITY ITEM_QUANTITY1
      ,FF.ITEM_PRICE_SIGN ITEM_PRICE_SIGN1
      ,FF.ITEM_PRICE ITEM_PRICE1
      ,FF.GL_PRIME_ACCOUNT_NUMBER GL_PRIME_ACCOUNT_NUMBER1
      ,FF.GL_SUB_ACCOUNT_NUMBER GL_SUB_ACCOUNT_NUMBER1
      ,POS.COST_CENTER_CODE COST_CENTER_CODE2
      ,POS.CHECK_SERIAL_NUMBER CHECK_SERIAL_NUMBER2
      ,POS.PROCESS_DATE PROCESS_DATE2
      ,POS.FILLER FILLER2
      ,POS.ITEM_EXT_AMOUNT_SIGN ITEM_EXT_AMOUNT_SIGN2
      ,POS.ITEM_EXT_AMOUNT ITEM_EXT_AMOUNT2
      ,POS.ORGNL_TERMINAL_NUMBER ORGNL_TERMINAL_NUMBER2
      ,POS.ORGNL_TRANSACTION_NUMBER ORGNL_TRANSACTION_NUMBER2
      ,POS.ITEM_QUANTITY_SIGN ITEM_QUANTITY_SIGN2
      ,POS.ITEM_QUANTITY ITEM_QUANTITY2
      ,POS.ITEM_PRICE_SIGN ITEM_PRICE_SIGN2
      ,POS.ITEM_PRICE ITEM_PRICE2
      ,POS.GL_PRIME_ACCOUNT_NUMBER GL_PRIME_ACCOUNT_NUMBER2
      ,POS.GL_SUB_ACCOUNT_NUMBER GL_SUB_ACCOUNT_NUMBER2
  FROM FF_INSTLR_LN_ITEM_DATA_TMP FF
       FULL OUTER JOIN POSXML_INSTLR_LN_ITEM_DATA_TMP POS
       ON FF.CHECK_SERIAL_NUMBER = POS.CHECK_SERIAL_NUMBER
 WHERE FF.CHECK_SERIAL_NUMBER IS NULL OR
       POS.CHECK_SERIAL_NUMBER IS NULL OR
       NVL(FF.COST_CENTER_CODE,g_char) <> NVL(POS.COST_CENTER_CODE,g_char) OR
       NVL(FF.PROCESS_DATE,g_char) <> NVL(POS.PROCESS_DATE,g_char) OR
       NVL(FF.FILLER,g_char) <> NVL(POS.FILLER,g_char) OR
       NVL(FF.ITEM_EXT_AMOUNT_SIGN,g_char) <> NVL(POS.ITEM_EXT_AMOUNT_SIGN,g_char) OR
       NVL(FF.ITEM_EXT_AMOUNT,g_char) <> NVL(POS.ITEM_EXT_AMOUNT,g_char) OR
       NVL(FF.ORGNL_TERMINAL_NUMBER,g_char) <> NVL(POS.ORGNL_TERMINAL_NUMBER,g_char) OR
       NVL(FF.ORGNL_TRANSACTION_NUMBER,g_char) <> NVL(POS.ORGNL_TRANSACTION_NUMBER,g_char) OR
       NVL(FF.ITEM_QUANTITY_SIGN,g_char) <> NVL(POS.ITEM_QUANTITY_SIGN,g_char) OR
       NVL(FF.ITEM_QUANTITY,g_char) <> NVL(POS.ITEM_QUANTITY,g_char) OR
       NVL(FF.ITEM_PRICE_SIGN,g_char) <> NVL(POS.ITEM_PRICE_SIGN,g_char) OR
       NVL(FF.ITEM_PRICE,g_char) <> NVL(POS.ITEM_PRICE,g_char) OR
       NVL(FF.GL_PRIME_ACCOUNT_NUMBER,g_char) <> NVL(POS.GL_PRIME_ACCOUNT_NUMBER,g_char) OR
       NVL(FF.GL_SUB_ACCOUNT_NUMBER,g_char) <> NVL(POS.GL_SUB_ACCOUNT_NUMBER,g_char)
       ;

v_file_name                         VARCHAR2(100) := 'POSXML_STORE_DRAFT_INSTLR_DIFF';
v_file_path 	                    VARCHAR2(100);
v_header                            CLOB;
v_out_rec1                          CLOB;
v_out_rec2                          CLOB;
v_output_file                       utl_file.file_type;
v_rec                               c_legacy%ROWTYPE;


BEGIN
       
       
    v_file_path := ccn_common_tools.get_datafile_path_fnc(g_schema);

    v_output_file := utl_file.fopen ( v_file_path
                                     ,v_file_name || TO_CHAR(SYSDATE,'_MMDDYY') ||'.csv'
                                     ,'W' 
                                     ,32767); 

    v_header  :=    'IN_TABLE'                                 ||','||
                    'COST_CENTER_CODE'                         ||','||
                    'CHECK_SERIAL_NUMBER'                      ||','||
                    'PROCESS_DATE'                             ||','||
                    'FILLER'                                   ||','||                                        
                    'ITEM_EXT_AMOUNT_SIGN'                     ||','||                                        
                    'ITEM_EXT_AMOUNT'                          ||','|| 
                    'ORGNL_TERMINAL_NUMBER'                    ||','||
                    'ORGNL_TRANSACTION_NUMBER'                 ||','||
                    'ITEM_QUANTITY_SIGN'                       ||','||
                    'ITEM_QUANTITY'                            ||','||
                    'ITEM_PRICE_SIGN'                          ||','||
                    'ITEM_PRICE'                               ||','||
                    'GL_PRIME_ACCOUNT_NUMBER'                  ||','|| 
                    'GL_SUB_ACCOUNT_NUMBER'                    
                    ;  


    UTL_FILE.PUT_LINE(v_output_file, v_header, TRUE);

	FOR v_rec IN c_legacy  LOOP
               
        v_out_rec1 := 'LEGACY'||','||v_rec.COST_CENTER_CODE1||','||v_rec.CHECK_SERIAL_NUMBER1||','||v_rec.PROCESS_DATE1||','||v_rec.FILLER1||','||v_rec.ITEM_EXT_AMOUNT_SIGN1||','||v_rec.ITEM_EXT_AMOUNT1
                       ||','||v_rec.ORGNL_TERMINAL_NUMBER1||','||v_rec.ORGNL_TRANSACTION_NUMBER1||','||v_rec.ITEM_QUANTITY_SIGN1||','||v_rec.ITEM_QUANTITY1||','||v_rec.ITEM_PRICE_SIGN1||','||v_rec.ITEM_PRICE1
                       ||','||v_rec.GL_PRIME_ACCOUNT_NUMBER1||','||v_rec.GL_SUB_ACCOUNT_NUMBER1
                       ;
                                
          
        v_out_rec2 := 'POS'||','||v_rec.COST_CENTER_CODE2||','||v_rec.CHECK_SERIAL_NUMBER2||','||v_rec.PROCESS_DATE2||','||v_rec.FILLER2||','||v_rec.ITEM_EXT_AMOUNT_SIGN2||','||v_rec.ITEM_EXT_AMOUNT2
                       ||','||v_rec.ORGNL_TERMINAL_NUMBER2||','||v_rec.ORGNL_TRANSACTION_NUMBER2||','||v_rec.ITEM_QUANTITY_SIGN2||','||v_rec.ITEM_QUANTITY2||','||v_rec.ITEM_PRICE_SIGN2||','||v_rec.ITEM_PRICE2
                       ||','||v_rec.GL_PRIME_ACCOUNT_NUMBER2||','||v_rec.GL_SUB_ACCOUNT_NUMBER2
                       ;
                      
                  
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec1, TRUE);
           
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec2, TRUE);
            
    END LOOP;

EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                  ,'STORE_DRAFT_INSTLR_DIFF_sp'
                                  ,SQLERRM
                                  ,'000000'
                                  ,'0000000000');
END STORE_DRAFT_INSTLR_DIFF_sp;


--

PROCEDURE STORE_DRAFT_DISBRSMT_DIFF_sp
/**************************************************************** 
        This Procedure is used compare the legacy Store drafts disbusement load 
        and the POSXML Store drafts disbusement load and creats a Difference file.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
*****************************************************************/
IS

CURSOR c_legacy IS
SELECT FF.COST_CENTER_CODE COST_CENTER_CODE1
      ,FF.CHECK_SERIAL_NUMBER CHECK_SERIAL_NUMBER1
      ,FF.PROCESS_DATE PROCESS_DATE1
      ,FF.FILLER FILLER1
      ,FF.ITEM_EXT_AMOUNT_SIGN ITEM_EXT_AMOUNT_SIGN1
      ,FF.ITEM_EXT_AMOUNT ITEM_EXT_AMOUNT1
      ,FF.GL_PRIME_ACCOUNT_NUMBER GL_PRIME_ACCOUNT_NUMBER1
      ,FF.GL_SUB_ACCOUNT_NUMBER GL_SUB_ACCOUNT_NUMBER1
      ,POS.COST_CENTER_CODE COST_CENTER_CODE2
      ,POS.CHECK_SERIAL_NUMBER CHECK_SERIAL_NUMBER2
      ,POS.PROCESS_DATE PROCESS_DATE2
      ,POS.FILLER FILLER2
      ,POS.ITEM_EXT_AMOUNT_SIGN ITEM_EXT_AMOUNT_SIGN2
      ,POS.ITEM_EXT_AMOUNT ITEM_EXT_AMOUNT2
      ,POS.GL_PRIME_ACCOUNT_NUMBER GL_PRIME_ACCOUNT_NUMBER2
      ,POS.GL_SUB_ACCOUNT_NUMBER GL_SUB_ACCOUNT_NUMBER2
  FROM FF_DISBRSMT_LINE_ITEM_DATA_TMP FF
       FULL OUTER JOIN POSXML_DISBRSMT_LINE_ITEM_TMP POS
       ON FF.CHECK_SERIAL_NUMBER = POS.CHECK_SERIAL_NUMBER
 WHERE NVL(FF.COST_CENTER_CODE,g_char) <> NVL(POS.COST_CENTER_CODE,g_char) OR
       NVL(FF.CHECK_SERIAL_NUMBER,g_char) <> NVL(POS.CHECK_SERIAL_NUMBER,g_char) OR
       NVL(FF.PROCESS_DATE,g_char) <> NVL(POS.PROCESS_DATE,g_char) OR
       NVL(FF.FILLER,g_char) <> NVL(POS.FILLER,g_char) OR
       NVL(FF.ITEM_EXT_AMOUNT_SIGN,g_char) <> NVL(POS.ITEM_EXT_AMOUNT_SIGN,g_char) OR
       NVL(FF.ITEM_EXT_AMOUNT,g_char) <> NVL(POS.ITEM_EXT_AMOUNT,g_char) OR
       NVL(FF.GL_PRIME_ACCOUNT_NUMBER,g_char) <> NVL(POS.GL_PRIME_ACCOUNT_NUMBER,g_char) OR
       NVL(FF.GL_SUB_ACCOUNT_NUMBER,g_char) <> NVL(POS.GL_SUB_ACCOUNT_NUMBER,g_char) 
       ;

v_file_name                         VARCHAR2(100) := 'POSXML_STORE_DRAFT_DISBRSMT_DIFF';
v_file_path 	                    VARCHAR2(100);
v_header                            CLOB;
v_out_rec1                          CLOB;
v_out_rec2                          CLOB;
v_output_file                       utl_file.file_type;
v_rec                               c_legacy%ROWTYPE;


BEGIN
       
    v_file_path := ccn_common_tools.get_datafile_path_fnc(g_schema);

    v_output_file := utl_file.fopen ( v_file_path
                                     ,v_file_name || TO_CHAR(SYSDATE,'_MMDDYY') ||'.csv'
                                     ,'W' 
                                     ,32767); 

    v_header   :=   'IN_TABLE'                                 ||','||
                    'COST_CENTER_CODE'                         ||','||
                    'CHECK_SERIAL_NUMBER'                      ||','||
                    'PROCESS_DATE'                             ||','||
                    'FILLER'                                   ||','||                                        
                    'ITEM_EXT_AMOUNT_SIGN'                     ||','||                                        
                    'ITEM_EXT_AMOUNT'                          ||','|| 
                    'GL_PRIME_ACCOUNT_NUMBER'                  ||','|| 
                    'GL_SUB_ACCOUNT_NUMBER'                    
                    ;  


    UTL_FILE.PUT_LINE(v_output_file, v_header, TRUE);

    FOR v_rec IN c_legacy  LOOP
               
        v_out_rec1 := 'LEGACY'||','||v_rec.COST_CENTER_CODE1||','||v_rec.CHECK_SERIAL_NUMBER1||','||v_rec.PROCESS_DATE1||','||v_rec.FILLER1||','||v_rec.ITEM_EXT_AMOUNT_SIGN1
                       ||','||v_rec.ITEM_EXT_AMOUNT1||','||v_rec.GL_PRIME_ACCOUNT_NUMBER1||','||v_rec.GL_SUB_ACCOUNT_NUMBER1
                       ;
                                
          
        v_out_rec2 := 'POS'||','||v_rec.COST_CENTER_CODE2||','||v_rec.CHECK_SERIAL_NUMBER2||','||v_rec.PROCESS_DATE2||','||v_rec.FILLER2||','||v_rec.ITEM_EXT_AMOUNT_SIGN2
                       ||','||v_rec.ITEM_EXT_AMOUNT2||','||v_rec.GL_PRIME_ACCOUNT_NUMBER2||','||v_rec.GL_SUB_ACCOUNT_NUMBER2
                       ;
                                
                  
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec1, TRUE);
            
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec2, TRUE);
            
    END LOOP;

EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                  ,'STORE_DRAFT_DISBRSMT_DIFF_sp'
                                  ,SQLERRM
                                  ,'000000'
                                  ,'0000000000');
END STORE_DRAFT_DISBRSMT_DIFF_sp;


PROCEDURE CUSTOMER_DIFF_sp
/**************************************************************** 
        This Procedure is used compare the legacy customer load 
        and the POSXML customer load and creats a Difference file.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
*****************************************************************/
IS

CURSOR c_legacy IS
SELECT FF.COST_CENTER_CODE COST_CENTER_CODE1
      ,FF.TERMINAL_NUMBER TERMINAL_NUMBER1
      ,FF.TRANSACTION_NUMBER TRANSACTION_NUMBER1
      ,FF.SORT_FORCE SORT_FORCE1
      ,FF.SEGMENT_CODE SEGMENT_CODE1
      ,FF.SUB_SEGMENT_CODE SUB_SEGMENT_CODE1
      ,FF.FILLER FILLER1
      ,FF.TRANSACTION_DATE TRANSACTION_DATE1
      ,FF.CUSTOMER_ACCOUNT_NUMBER CUSTOMER_ACCOUNT_NUMBER1
      ,FF.CUSTOMER_JOB_NUMBER CUSTOMER_JOB_NUMBER1
      ,FF.POS_TRANSACTION_NUMBER_BATCH POS_TRANSACTION_NUMBER_BATCH1
      ,FF.POS_TRANSACTION_TIME POS_TRANSACTION_TIME1
      ,FF.CYCLE_RUN_NUMBER CYCLE_RUN_NUMBER1
      ,FF.EMPLOYEE_NUMBER EMPLOYEE_NUMBER1
      ,FF.POS_MODE_INDICATOR POS_MODE_INDICATOR1
      ,FF.BUSINESS_TYPE_CODE BUSINESS_TYPE_CODE1
      ,FF.SLS_TERRITORY_NUMBER SLS_TERRITORY_NUMBER1
      ,FF.SLS_TERRITORY_NUMBER_NO_CORR SLS_TERRITORY_NUMBER_NO_CORR1
      ,FF.TERRITORY_SPLIT_INDICATOR TERRITORY_SPLIT_INDICATOR1
      ,FF.POS_TRANSACTION_CODE POS_TRANSACTION_CODE1
      ,FF.POS_TRANSACTION_DATE POS_TRANSACTION_DATE1
      ,FF.POS_TERMINAL_NUMBER POS_TERMINAL_NUMBER1
      ,FF.POS_TRANSACTION_NUMBER POS_TRANSACTION_NUMBER1
      ,FF.PURCHASE_ORDER_NUMBER PURCHASE_ORDER_NUMBER1
      ,POS.COST_CENTER_CODE COST_CENTER_CODE2
      ,POS.TERMINAL_NUMBER TERMINAL_NUMBER2
      ,POS.TRANSACTION_NUMBER TRANSACTION_NUMBER2
      ,POS.SORT_FORCE SORT_FORCE2
      ,POS.SEGMENT_CODE SEGMENT_CODE2
      ,POS.SUB_SEGMENT_CODE SUB_SEGMENT_CODE2
      ,POS.FILLER FILLER2
      ,POS.TRANSACTION_DATE TRANSACTION_DATE2
      ,POS.CUSTOMER_ACCOUNT_NUMBER CUSTOMER_ACCOUNT_NUMBER2
      ,POS.CUSTOMER_JOB_NUMBER CUSTOMER_JOB_NUMBER2
      ,POS.POS_TRANSACTION_NUMBER_BATCH POS_TRANSACTION_NUMBER_BATCH2
      ,POS.POS_TRANSACTION_TIME POS_TRANSACTION_TIME2
      ,POS.CYCLE_RUN_NUMBER CYCLE_RUN_NUMBER2
      ,POS.EMPLOYEE_NUMBER EMPLOYEE_NUMBER2
      ,POS.POS_MODE_INDICATOR POS_MODE_INDICATOR2
      ,POS.BUSINESS_TYPE_CODE BUSINESS_TYPE_CODE2
      ,POS.SLS_TERRITORY_NUMBER SLS_TERRITORY_NUMBER2
      ,POS.SLS_TERRITORY_NUMBER_NO_CORR SLS_TERRITORY_NUMBER_NO_CORR2
      ,POS.TERRITORY_SPLIT_INDICATOR TERRITORY_SPLIT_INDICATOR2
      ,POS.POS_TRANSACTION_CODE POS_TRANSACTION_CODE2
      ,POS.POS_TRANSACTION_DATE POS_TRANSACTION_DATE2
      ,POS.POS_TERMINAL_NUMBER POS_TERMINAL_NUMBER2
      ,POS.POS_TRANSACTION_NUMBER POS_TRANSACTION_NUMBER2
      ,POS.PURCHASE_ORDER_NUMBER PURCHASE_ORDER_NUMBER2
  FROM FF_CUSTOMER_TMP FF
       FULL OUTER JOIN POSXML_CSTMR_TMP POS
       ON FF.COST_CENTER_CODE = POS.COST_CENTER_CODE  
   AND FF.TERMINAL_NUMBER = POS.TERMINAL_NUMBER  
   AND FF.TRANSACTION_NUMBER = POS.TRANSACTION_NUMBER 
 WHERE FF.COST_CENTER_CODE  IS NULL OR  
       FF.TERMINAL_NUMBER  IS NULL OR  
       FF.TRANSACTION_NUMBER  IS NULL OR 
       POS.COST_CENTER_CODE  IS NULL OR 
       POS.TERMINAL_NUMBER  IS NULL OR 
       POS.TRANSACTION_NUMBER  IS NULL OR      
       NVL(FF.SORT_FORCE,g_char) <> NVL(POS.SORT_FORCE,g_char) OR
       NVL(FF.SEGMENT_CODE,g_char) <> NVL(POS.SEGMENT_CODE,g_char) OR
       NVL(FF.SUB_SEGMENT_CODE,g_char) <> NVL(POS.SUB_SEGMENT_CODE,g_char) OR
       NVL(FF.FILLER,g_char) <> NVL(POS.FILLER,g_char) OR
       NVL(FF.TRANSACTION_DATE,g_char) <> NVL(POS.TRANSACTION_DATE,g_char) OR
       NVL(FF.CUSTOMER_ACCOUNT_NUMBER,g_char) <> NVL(POS.CUSTOMER_ACCOUNT_NUMBER,g_char) OR
       NVL(FF.CUSTOMER_JOB_NUMBER,g_char) <> NVL(POS.CUSTOMER_JOB_NUMBER,g_char) OR
       NVL(FF.POS_TRANSACTION_NUMBER_BATCH,g_char) <> NVL(POS.POS_TRANSACTION_NUMBER_BATCH,g_char) OR
       NVL(FF.POS_TRANSACTION_TIME,g_char) <> NVL(POS.POS_TRANSACTION_TIME,g_char) OR
       NVL(FF.CYCLE_RUN_NUMBER,g_char) <> NVL(POS.CYCLE_RUN_NUMBER,g_char) OR
       NVL(FF.EMPLOYEE_NUMBER,g_char) <> NVL(POS.EMPLOYEE_NUMBER,g_char) OR
       NVL(FF.POS_MODE_INDICATOR,g_char) <> NVL(POS.POS_MODE_INDICATOR,g_char) OR
       NVL(FF.BUSINESS_TYPE_CODE,g_char) <> NVL(POS.BUSINESS_TYPE_CODE,g_char) OR
       NVL(FF.SLS_TERRITORY_NUMBER,g_char) <> NVL(POS.SLS_TERRITORY_NUMBER,g_char) OR
       NVL(FF.SLS_TERRITORY_NUMBER_NO_CORR,g_char) <> NVL(POS.SLS_TERRITORY_NUMBER_NO_CORR,g_char) OR
       NVL(FF.TERRITORY_SPLIT_INDICATOR,g_char) <> NVL(POS.TERRITORY_SPLIT_INDICATOR,g_char) OR
       NVL(FF.POS_TRANSACTION_CODE,g_char) <> NVL(POS.POS_TRANSACTION_CODE,g_char) OR
       NVL(FF.POS_TRANSACTION_DATE,g_char) <> NVL(POS.POS_TRANSACTION_DATE,g_char) OR
       NVL(FF.POS_TERMINAL_NUMBER,g_char) <> NVL(POS.POS_TERMINAL_NUMBER,g_char) OR
       NVL(FF.POS_TRANSACTION_NUMBER,g_char) <> NVL(POS.POS_TRANSACTION_NUMBER,g_char) OR
       NVL(FF.DATA_INDICATOR,g_char) <> NVL(POS.DATA_INDICATOR,g_char) OR
       NVL(FF.PURCHASE_ORDER_NUMBER,g_char) <> NVL(POS.PURCHASE_ORDER_NUMBER,g_char) 
       ;

v_file_name                         VARCHAR2(100) := 'POSXML_CUSTOMER_DIFF';
v_file_path 	                    VARCHAR2(100);
v_header                            CLOB;
v_out_rec1                          CLOB;
v_out_rec2                          CLOB;
v_output_file                       utl_file.file_type;
v_rec                               c_legacy%ROWTYPE;


BEGIN
       
                
    v_file_path := ccn_common_tools.get_datafile_path_fnc(g_schema);

    v_output_file := utl_file.fopen ( v_file_path
                                     ,v_file_name || TO_CHAR(SYSDATE,'_MMDDYY') ||'.csv'
                                     ,'W' 
                                     ,32767); 

    v_header   :=   'IN_TABLE'                      ||','||
                    'COST_CENTER_CODE'             ||','||         
                    'TERMINAL_NUMBER'               ||','||              
                    'TRANSACTION_NUMBER'            ||','||           
                    'SORT_FORCE'                    ||','||                  
                    'SEGMENT_CODE'                  ||','||               
                    'SUB_SEGMENT_CODE'              ||','||              
                    'FILLER'                        ||','||             
                    'TRANSACTION_DATE'              ||','||                 
                    'CUSTOMER_ACCOUNT_NUMBER'       ||','||         
                    'CUSTOMER_JOB_NUMBER'           ||','||         
                    'POS_TRANSACTION_NUMBER_BATCH'  ||','||       
                    'POS_TRANSACTION_TIME'          ||','||             
                    'CYCLE_RUN_NUMBER'              ||','||                 
                    'EMPLOYEE_NUMBER'               ||','||                 
                    'POS_MODE_INDICATOR'            ||','||                
                    'BUSINESS_TYPE_CODE'            ||','||            
                    'SLS_TERRITORY_NUMBER'          ||','||             
                    'SLS_TERRITORY_NUMBER_NO_CORR'  ||','||      
                    'TERRITORY_SPLIT_INDICATOR'     ||','||           
                    'POS_TRANSACTION_CODE'          ||','||             
                    'POS_TRANSACTION_DATE'          ||','||           
                    'POS_TERMINAL_NUMBER'           ||','||            
                    'POS_TRANSACTION_NUMBER'        ||','||       
                    'PURCHASE_ORDER_NUMBER'         
                    ;  


    UTL_FILE.PUT_LINE(v_output_file, v_header, TRUE);

    FOR v_rec IN c_legacy  LOOP
               
        v_out_rec1 := 'LEGACY'||','||v_rec.COST_CENTER_CODE1||','||v_rec.TERMINAL_NUMBER1||','||v_rec.TRANSACTION_NUMBER1||','||v_rec.SORT_FORCE1||','||v_rec.SEGMENT_CODE1
                      ||','||v_rec.SUB_SEGMENT_CODE1||','||v_rec.FILLER1||','||v_rec.TRANSACTION_DATE1||','||v_rec.CUSTOMER_ACCOUNT_NUMBER1||','||v_rec.CUSTOMER_JOB_NUMBER1
                      ||','||v_rec.POS_TRANSACTION_NUMBER_BATCH1||','||v_rec.POS_TRANSACTION_TIME1||','||v_rec.CYCLE_RUN_NUMBER1||','||v_rec.EMPLOYEE_NUMBER1
                      ||','||v_rec.POS_MODE_INDICATOR1||','||v_rec.BUSINESS_TYPE_CODE1||','||v_rec.SLS_TERRITORY_NUMBER1||','||v_rec.SLS_TERRITORY_NUMBER_NO_CORR1
                      ||','||v_rec.TERRITORY_SPLIT_INDICATOR1||','||v_rec.POS_TRANSACTION_CODE1||','||v_rec.POS_TRANSACTION_DATE1||','||v_rec.POS_TERMINAL_NUMBER1
                      ||','||v_rec.POS_TRANSACTION_NUMBER1||','||v_rec.PURCHASE_ORDER_NUMBER1
                      ;
                                
          
        v_out_rec2 := 'POS'||','||v_rec.COST_CENTER_CODE2||','||v_rec.TERMINAL_NUMBER2||','||v_rec.TRANSACTION_NUMBER2||','||v_rec.SORT_FORCE2||','||v_rec.SEGMENT_CODE2
                       ||','||v_rec.SUB_SEGMENT_CODE2||','||v_rec.FILLER2||','||v_rec.TRANSACTION_DATE2||','||v_rec.CUSTOMER_ACCOUNT_NUMBER2||','||v_rec.CUSTOMER_JOB_NUMBER2
                       ||','||v_rec.POS_TRANSACTION_NUMBER_BATCH2||','||v_rec.POS_TRANSACTION_TIME2||','||v_rec.CYCLE_RUN_NUMBER2||','||v_rec.EMPLOYEE_NUMBER2
                       ||','||v_rec.POS_MODE_INDICATOR2||','||v_rec.BUSINESS_TYPE_CODE2||','||v_rec.SLS_TERRITORY_NUMBER2||','||v_rec.SLS_TERRITORY_NUMBER_NO_CORR2
                       ||','||v_rec.TERRITORY_SPLIT_INDICATOR2||','||v_rec.POS_TRANSACTION_CODE2||','||v_rec.POS_TRANSACTION_DATE2||','||v_rec.POS_TERMINAL_NUMBER2
                       ||','||v_rec.POS_TRANSACTION_NUMBER2||','||v_rec.PURCHASE_ORDER_NUMBER2
                       ;
                                
                  
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec1, TRUE);
         
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec2, TRUE);
            
    END LOOP;

EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                  ,'CUSTOMER_DIFF_sp'
                                  ,SQLERRM
                                  ,'000000'
                                  ,'0000000000');
END CUSTOMER_DIFF_sp;



PROCEDURE CSTMR_DETAILS_DIFF_sp
/*********************************************************************** 
        This Procedure is used compare the legacy customer details load 
        and the POSXML customer details load and creats a Difference file.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
************************************************************************/
IS

CURSOR c_legacy IS
SELECT FF.COST_CENTER_CODE COST_CENTER_CODE1
      ,FF.TERMINAL_NUMBER TERMINAL_NUMBER1
      ,FF.TRANSACTION_NUMBER TRANSACTION_NUMBER1
      ,FF.FILLER FILLER1
      ,FF.SALES_NUMBER SALES_NUMBER1
      ,FF.ITEM_QUANTITY_SIGN ITEM_QUANTITY_SIGN1
      ,FF.ITEM_QUANTITY ITEM_QUANTITY1
      ,FF.ITEM_PRICE_SIGN ITEM_PRICE_SIGN1
      ,FF.ITEM_PRICE ITEM_PRICE1
      ,FF.ITEM_EXTERNAL_AMOUNT_SIGN ITEM_EXTERNAL_AMOUNT_SIGN1
      ,FF.ITEM_EXTERNAL_AMOUNT ITEM_EXTERNAL_AMOUNT1
      ,FF.ITEM_DISC_AMOUNT_SIGN ITEM_DISC_AMOUNT_SIGN1
      ,FF.ITEM_DISC_AMOUNT ITEM_DISC_AMOUNT1
      ,FF.ITEM_SALES_TAX_INDICATOR ITEM_SALES_TAX_INDICATOR1
      ,FF.ITEM_DISC_CODE ITEM_DISC_CODE1
      ,FF.ITEM_DISC_TYPE ITEM_DISC_TYPE1
      ,FF.SALES_PROMO_CODE SALES_PROMO_CODE1
      ,FF.GL_PRIME_ACCOUNT GL_PRIME_ACCOUNT1
      ,FF.GL_SUB_ACCOUNT GL_SUB_ACCOUNT1
      ,FF.SCHEDULE_TYPE SCHEDULE_TYPE1
      ,FF.SCHEDULE_VERSION SCHEDULE_VERSION1
      ,FF.PRICE_LVL_CODE PRICE_LVL_CODE1
      ,FF.PERCENT_OFF_LVL PERCENT_OFF_LVL1
      ,FF.PROD_DESC_SOURCE PROD_DESC_SOURCE1
      ,FF.ORGNL_POS_TERMINAL_NUMBER ORGNL_POS_TERMINAL_NUMBER1
      ,FF.ORGNL_POS_TRANSACTION_NUMBER ORGNL_POS_TRANSACTION_NUMBER1
      ,POS.COST_CENTER_CODE COST_CENTER_CODE2
      ,POS.TERMINAL_NUMBER TERMINAL_NUMBER2
      ,POS.TRANSACTION_NUMBER TRANSACTION_NUMBER2
      ,POS.FILLER FILLER2
      ,POS.SALES_NUMBER SALES_NUMBER2
      ,POS.ITEM_QUANTITY_SIGN ITEM_QUANTITY_SIGN2
      ,POS.ITEM_QUANTITY ITEM_QUANTITY2
      ,POS.ITEM_PRICE_SIGN ITEM_PRICE_SIGN2
      ,POS.ITEM_PRICE ITEM_PRICE2
      ,POS.ITEM_EXTERNAL_AMOUNT_SIGN ITEM_EXTERNAL_AMOUNT_SIGN2
      ,POS.ITEM_EXTERNAL_AMOUNT ITEM_EXTERNAL_AMOUNT2
      ,POS.ITEM_DISC_AMOUNT_SIGN ITEM_DISC_AMOUNT_SIGN2
      ,POS.ITEM_DISC_AMOUNT ITEM_DISC_AMOUNT2
      ,POS.ITEM_SALES_TAX_INDICATOR ITEM_SALES_TAX_INDICATOR2
      ,POS.ITEM_DISC_CODE ITEM_DISC_CODE2
      ,POS.ITEM_DISC_TYPE ITEM_DISC_TYPE2
      ,POS.SALES_PROMO_CODE SALES_PROMO_CODE2
      ,POS.GL_PRIME_ACCOUNT GL_PRIME_ACCOUNT2
      ,POS.GL_SUB_ACCOUNT GL_SUB_ACCOUNT2
      ,POS.SCHEDULE_TYPE SCHEDULE_TYPE2
      ,POS.SCHEDULE_VERSION SCHEDULE_VERSION2
      ,POS.PRICE_LVL_CODE PRICE_LVL_CODE2
      ,POS.PERCENT_OFF_LVL PERCENT_OFF_LVL2
      ,POS.PROD_DESC_SOURCE PROD_DESC_SOURCE2
      ,POS.ORGNL_POS_TERMINAL_NUMBER ORGNL_POS_TERMINAL_NUMBER2
      ,POS.ORGNL_POS_TRANSACTION_NUMBER ORGNL_POS_TRANSACTION_NUMBER2 
  FROM FF_CUSTOMER_DETAILS_TMP FF
       FULL OUTER JOIN POSXML_CSTMR_DTLS_TMP POS
       ON FF.COST_CENTER_CODE = POS.COST_CENTER_CODE  
   AND FF.TERMINAL_NUMBER = POS.TERMINAL_NUMBER  
   AND FF.TRANSACTION_NUMBER = POS.TRANSACTION_NUMBER 
 WHERE FF.COST_CENTER_CODE  IS NULL OR  
       FF.TERMINAL_NUMBER  IS NULL OR  
       FF.TRANSACTION_NUMBER  IS NULL OR 
       POS.COST_CENTER_CODE  IS NULL OR 
       POS.TERMINAL_NUMBER  IS NULL OR
       POS.TRANSACTION_NUMBER  IS NULL OR
       NVL(FF.FILLER,g_char) <> NVL(POS.FILLER,g_char) OR
       NVL(FF.SALES_NUMBER,g_char) <> NVL(POS.SALES_NUMBER,g_char) OR
       NVL(FF.ITEM_QUANTITY_SIGN,g_char) <> NVL(POS.ITEM_QUANTITY_SIGN,g_char) OR
       NVL(FF.ITEM_QUANTITY,g_char) <> NVL(POS.ITEM_QUANTITY,g_char) OR
       NVL(FF.ITEM_PRICE_SIGN,g_char) <> NVL(POS.ITEM_PRICE_SIGN,g_char) OR
       NVL(FF.ITEM_PRICE,g_char) <> NVL(POS.ITEM_PRICE,g_char) OR
       NVL(FF.ITEM_EXTERNAL_AMOUNT_SIGN,g_char) <> NVL(POS.ITEM_EXTERNAL_AMOUNT_SIGN,g_char) OR
       NVL(FF.ITEM_EXTERNAL_AMOUNT,g_char) <> NVL(POS.ITEM_EXTERNAL_AMOUNT,g_char) OR
       NVL(FF.ITEM_DISC_AMOUNT_SIGN,g_char) <> NVL(POS.ITEM_DISC_AMOUNT_SIGN,g_char) OR
       NVL(FF.ITEM_DISC_AMOUNT,g_char) <> NVL(POS.ITEM_DISC_AMOUNT,g_char) OR
       NVL(FF.ITEM_SALES_TAX_INDICATOR,g_char) <> NVL(POS.ITEM_SALES_TAX_INDICATOR,g_char) OR
       NVL(FF.ITEM_DISC_CODE,g_char) <> NVL(POS.ITEM_DISC_CODE,g_char) OR
       NVL(FF.ITEM_DISC_TYPE,g_char) <> NVL(POS.ITEM_DISC_TYPE,g_char) OR
       NVL(FF.SALES_PROMO_CODE,g_char) <> NVL(POS.SALES_PROMO_CODE,g_char) OR
       NVL(FF.GL_PRIME_ACCOUNT,g_char) <> NVL(POS.GL_PRIME_ACCOUNT,g_char) OR
       NVL(FF.GL_SUB_ACCOUNT,g_char) <> NVL(POS.GL_SUB_ACCOUNT,g_char) OR
       NVL(FF.SCHEDULE_TYPE,g_char) <> NVL(POS.SCHEDULE_TYPE,g_char) OR
       NVL(FF.SCHEDULE_VERSION,g_char) <> NVL(POS.SCHEDULE_VERSION,g_char) OR
       NVL(FF.PRICE_LVL_CODE,g_char) <> NVL(POS.PRICE_LVL_CODE,g_char) OR
       NVL(FF.PERCENT_OFF_LVL,g_char) <> NVL(POS.PERCENT_OFF_LVL,g_char) OR
       NVL(FF.PROD_DESC_SOURCE,g_char) <> NVL(POS.PROD_DESC_SOURCE,g_char) OR
       NVL(FF.ORGNL_POS_TERMINAL_NUMBER,g_char) <> NVL(POS.ORGNL_POS_TERMINAL_NUMBER,g_char) OR
       NVL(FF.ORGNL_POS_TRANSACTION_NUMBER,g_char) <> NVL(POS.ORGNL_POS_TRANSACTION_NUMBER,g_char)
       ;

v_file_name                         VARCHAR2(100) := 'POSXML_CSTMR_DETAILS_DIFF';
v_file_path 	                    VARCHAR2(100);
v_header                            CLOB;
v_out_rec1                          CLOB;
v_out_rec2                          CLOB;
v_output_file                       utl_file.file_type;
v_rec                               c_legacy%ROWTYPE;


BEGIN
       
                
    v_file_path := ccn_common_tools.get_datafile_path_fnc(g_schema);

    v_output_file := utl_file.fopen ( v_file_path
                                     ,v_file_name || TO_CHAR(SYSDATE,'_MMDDYY') ||'.csv'
                                     ,'W' 
                                     ,32767); 

    v_header   :=   'IN_TABLE'                          ||','||
                    'COST_CENTER_CODE'                  ||','||   
                    'TERMINAL_NUMBER'                   ||','||   
                    'TRANSACTION_NUMBER'                ||','||   
                    'FILLER'                            ||','||   
                    'SALES_NUMBER'                      ||','||   
                    'ITEM_QUANTITY_SIGN'                ||','||   
                    'ITEM_QUANTITY'                     ||','||   
                    'ITEM_PRICE_SIGN'                   ||','||   
                    'ITEM_PRICE'                        ||','||   
                    'ITEM_EXTERNAL_AMOUNT_SIGN'         ||','||  
                    'ITEM_EXTERNAL_AMOUNT'              ||','||  
                    'ITEM_DISC_AMOUNT_SIGN'             ||','||   
                    'ITEM_DISC_AMOUNT'                  ||','||   
                    'ITEM_SALES_TAX_INDICATOR'          ||','||   
                    'ITEM_DISC_CODE'                    ||','||   
                    'ITEM_DISC_TYPE'                    ||','||  
                    'SALES_PROMO_CODE'                  ||','||   
                    'GL_PRIME_ACCOUNT'                  ||','||   
                    'GL_SUB_ACCOUNT'                    ||','||  
                    'SCHEDULE_TYPE'                     ||','||   
                    'SCHEDULE_VERSION'                  ||','||   
                    'PRICE_LVL_CODE'                    ||','||   
                    'PERCENT_OFF_LVL'                   ||','||   
                    'PROD_DESC_SOURCE'                  ||','||   
                    'ORGNL_POS_TERMINAL_NUMBER'         ||','||   
                    'ORGNL_POS_TRANSACTION_NUMBER'      
                     ;  


    UTL_FILE.PUT_LINE(v_output_file, v_header, TRUE);

    FOR v_rec IN c_legacy    LOOP
               
        v_out_rec1 := 'LEGACY'||','||v_rec.COST_CENTER_CODE1||','||v_rec.TERMINAL_NUMBER1||','||v_rec.TRANSACTION_NUMBER1||','||v_rec.FILLER1||','||v_rec.SALES_NUMBER1||','||v_rec.ITEM_QUANTITY_SIGN1
                       ||','||v_rec.ITEM_QUANTITY1||','||v_rec.ITEM_PRICE_SIGN1||','||v_rec.ITEM_PRICE1||','||v_rec.ITEM_EXTERNAL_AMOUNT_SIGN1||','||v_rec.ITEM_EXTERNAL_AMOUNT1||','||v_rec.ITEM_DISC_AMOUNT_SIGN1
                       ||','||v_rec.ITEM_DISC_AMOUNT1||','||v_rec.ITEM_SALES_TAX_INDICATOR1||','||v_rec.ITEM_DISC_CODE1||','||v_rec.ITEM_DISC_TYPE1||','||v_rec.SALES_PROMO_CODE1
                       ||','||v_rec.GL_PRIME_ACCOUNT1||','||v_rec.GL_SUB_ACCOUNT1||','||v_rec.SCHEDULE_TYPE1||','||v_rec.SCHEDULE_VERSION1||','||v_rec.PRICE_LVL_CODE1
                       ||','||v_rec.PERCENT_OFF_LVL1||','||v_rec.PROD_DESC_SOURCE1||','||v_rec.ORGNL_POS_TERMINAL_NUMBER1||','||v_rec.ORGNL_POS_TRANSACTION_NUMBER1
                       ;
                                
          
        v_out_rec2 := 'POS'||','||v_rec.COST_CENTER_CODE2||','||v_rec.TERMINAL_NUMBER2||','||v_rec.TRANSACTION_NUMBER2||','||v_rec.FILLER2||','||v_rec.SALES_NUMBER2||','||v_rec.ITEM_QUANTITY_SIGN2
                       ||','||v_rec.ITEM_QUANTITY2||','||v_rec.ITEM_PRICE_SIGN2||','||v_rec.ITEM_PRICE2||','||v_rec.ITEM_EXTERNAL_AMOUNT_SIGN2||','||v_rec.ITEM_EXTERNAL_AMOUNT2
                       ||','||v_rec.ITEM_DISC_AMOUNT_SIGN2||','||v_rec.ITEM_DISC_AMOUNT2||','||v_rec.ITEM_SALES_TAX_INDICATOR2||','||v_rec.ITEM_DISC_CODE2||','||v_rec.ITEM_DISC_TYPE2
                       ||','||v_rec.SALES_PROMO_CODE2||','||v_rec.GL_PRIME_ACCOUNT2||','||v_rec.GL_SUB_ACCOUNT2||','||v_rec.SCHEDULE_TYPE2||','||v_rec.SCHEDULE_VERSION2
                       ||','||v_rec.PRICE_LVL_CODE2||','||v_rec.PERCENT_OFF_LVL2||','||v_rec.PROD_DESC_SOURCE2||','||v_rec.ORGNL_POS_TERMINAL_NUMBER2||','||v_rec.ORGNL_POS_TRANSACTION_NUMBER2
                       ;
                                
                  
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec1, TRUE);
          
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec2, TRUE);
            
    END LOOP;

EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                  ,'CSTMR_DETAILS_DIFF_sp'
                                  ,SQLERRM
                                  ,'000000'
                                  ,'0000000000');
END CSTMR_DETAILS_DIFF_sp;


PROCEDURE CSTMR_LINE_ITEM_DIFF_sp
/*********************************************************************** 
        This Procedure is used compare the legacy customer Line details load 
        and the POSXML customer Line details load and creats a Difference file.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
************************************************************************/
IS

CURSOR c_legacy IS
SELECT FF.COST_CENTER_CODE COST_CENTER_CODE1
      ,FF.CHECK_SERIAL_NUMBER CHECK_SERIAL_NUMBER1
      ,FF.PROCESS_DATE PROCESS_DATE1
      ,FF.FILLER FILLER1
      ,FF.ITEM_EXT_AMOUNT_SIGN ITEM_EXT_AMOUNT_SIGN1
      ,FF.ITEM_EXT_AMOUNT ITEM_EXT_AMOUNT1
      ,FF.ORGNL_CUSTOMER_ACCOUNT_NUMBER ORGNL_CUSTOMER_ACCOUNT_NUMBER1
      ,FF.ORGNL_JOB_NUMBER ORGNL_JOB_NUMBER1
      ,POS.COST_CENTER_CODE COST_CENTER_CODE2
      ,POS.CHECK_SERIAL_NUMBER CHECK_SERIAL_NUMBER2
      ,POS.PROCESS_DATE PROCESS_DATE2
      ,POS.FILLER FILLER2
      ,POS.ITEM_EXT_AMOUNT_SIGN ITEM_EXT_AMOUNT_SIGN2
      ,POS.ITEM_EXT_AMOUNT ITEM_EXT_AMOUNT2
      ,POS.ORGNL_CUSTOMER_ACCOUNT_NUMBER ORGNL_CUSTOMER_ACCOUNT_NUMBER2
      ,POS.ORGNL_JOB_NUMBER ORGNL_JOB_NUMBER2
  FROM FF_CSTMR_LINE_ITEM_DATA_TMP FF
       FULL OUTER JOIN POSXML_CUST_LINE_ITEM_DATA_TMP POS
       ON FF.CHECK_SERIAL_NUMBER = POS.CHECK_SERIAL_NUMBER 
 WHERE FF.CHECK_SERIAL_NUMBER IS NULL OR
       POS.CHECK_SERIAL_NUMBER IS NULL OR 
       NVL(FF.COST_CENTER_CODE,g_char) <> NVL(POS.COST_CENTER_CODE,g_char) OR
       NVL(FF.PROCESS_DATE,g_char) <> NVL(POS.PROCESS_DATE,g_char) OR
       NVL(FF.FILLER,g_char) <> NVL(POS.FILLER,g_char) OR
       NVL(FF.ITEM_EXT_AMOUNT_SIGN,g_char) <> NVL(POS.ITEM_EXT_AMOUNT_SIGN,g_char) OR
       NVL(FF.ITEM_EXT_AMOUNT,g_char) <> NVL(POS.ITEM_EXT_AMOUNT,g_char) OR
       NVL(FF.ORGNL_CUSTOMER_ACCOUNT_NUMBER,g_char) <> NVL(POS.ORGNL_CUSTOMER_ACCOUNT_NUMBER,g_char) OR
       NVL(FF.ORGNL_JOB_NUMBER,g_char) <> NVL(POS.ORGNL_JOB_NUMBER,g_char)
       ;

v_file_name                         VARCHAR2(100) := 'POSXML_CSTMR_LINE_ITEM_DIFF';
v_file_path 	                    VARCHAR2(100);
v_header                            CLOB;
v_out_rec1                          CLOB;
v_out_rec2                          CLOB;
v_output_file                       utl_file.file_type;
v_rec                               c_legacy%ROWTYPE;


BEGIN
       
                
    v_file_path := ccn_common_tools.get_datafile_path_fnc(g_schema);

    v_output_file := utl_file.fopen ( v_file_path
                                     ,v_file_name || TO_CHAR(SYSDATE,'_MMDDYY') ||'.csv'
                                     ,'W' 
                                     ,32767); 

    v_header   :=   'IN_TABLE'                                 ||','||
                    'COST_CENTER_CODE'                         ||','||
                    'CHECK_SERIAL_NUMBER'                      ||','||
                    'PROCESS_DATE'                             ||','||
                    'FILLER'                                   ||','||                                        
                    'ITEM_EXT_AMOUNT_SIGN'                     ||','||                                        
                    'ITEM_EXT_AMOUNT'                          ||','|| 
                    'ORGNL_CUSTOMER_ACCOUNT_NUMBER'            ||','|| 
                    'ORGNL_JOB_NUMBER'                         
                     ;  


    UTL_FILE.PUT_LINE(v_output_file, v_header, TRUE);

    FOR v_rec IN c_legacy    LOOP
               
        v_out_rec1 := 'LEGACY'||','||v_rec.COST_CENTER_CODE1||','||v_rec.CHECK_SERIAL_NUMBER1||','||v_rec.PROCESS_DATE1||','||v_rec.FILLER1||','||v_rec.ITEM_EXT_AMOUNT_SIGN1
                       ||','||v_rec.ITEM_EXT_AMOUNT1||','||v_rec.ORGNL_CUSTOMER_ACCOUNT_NUMBER1||','||v_rec.ORGNL_JOB_NUMBER1
                       ;
                                
          
        v_out_rec2 := 'POS'||','||v_rec.COST_CENTER_CODE2||','||v_rec.CHECK_SERIAL_NUMBER2||','||v_rec.PROCESS_DATE2||','||v_rec.FILLER2||','||v_rec.ITEM_EXT_AMOUNT_SIGN2
                       ||','||v_rec.ITEM_EXT_AMOUNT2||','||v_rec.ORGNL_CUSTOMER_ACCOUNT_NUMBER2||','||v_rec.ORGNL_JOB_NUMBER2
                       ;
                                
                  
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec1, TRUE);
         
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec2, TRUE);
            
    END LOOP;

EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                   ,'CSTMR_LINE_ITEM_DIFF_sp'
                                   ,SQLERRM
                                   ,'000000'
                                   ,'0000000000');
END CSTMR_LINE_ITEM_DIFF_sp;



PROCEDURE CSTMR_SALES_TAX_DIFF_sp
/*********************************************************************** 
        This Procedure is used compare the legacy customer sales tax load 
        and the POSXML customer sales tax load and creats a Difference file.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
************************************************************************/
IS

CURSOR c_legacy IS
SELECT FF.COST_CENTER_CODE COST_CENTER_CODE1
      ,FF.TERMINAL_NUMBER TERMINAL_NUMBER1
      ,FF.TRANSACTION_NUMBER TRANSACTION_NUMBER1
      ,FF.FILLER FILLER1
      ,FF.SALES_TAX_COLL_AMOUNT_SIGN SALES_TAX_COLL_AMOUNT_SIGN1
      ,FF.SALES_TAX_COLL_AMOUNT SALES_TAX_COLL_AMOUNT1
      ,FF.SALES_TAX_INDICATOR SALES_TAX_INDICATOR1
      ,FF.SALES_TAX_RATE_SIGN SALES_TAX_RATE_SIGN1
      ,FF.SALES_TAX_RATE SALES_TAX_RATE1
      ,FF.SALES_TAX_CODE SALES_TAX_CODE1
      ,POS.COST_CENTER_CODE COST_CENTER_CODE2
      ,POS.TERMINAL_NUMBER TERMINAL_NUMBER2
      ,POS.TRANSACTION_NUMBER TRANSACTION_NUMBER2
      ,POS.FILLER FILLER2
      ,POS.SALES_TAX_COLL_AMOUNT_SIGN SALES_TAX_COLL_AMOUNT_SIGN2
      ,POS.SALES_TAX_COLL_AMOUNT SALES_TAX_COLL_AMOUNT2
      ,POS.SALES_TAX_INDICATOR SALES_TAX_INDICATOR2
      ,POS.SALES_TAX_RATE_SIGN SALES_TAX_RATE_SIGN2
      ,POS.SALES_TAX_RATE SALES_TAX_RATE2
      ,POS.SALES_TAX_CODE SALES_TAX_CODE2
  FROM FF_CSTMR_SALES_TAX_TMP FF
       FULL OUTER JOIN POSXML_CSTMR_SLS_TAX_TMP POS
       ON FF.COST_CENTER_CODE = POS.COST_CENTER_CODE  
   AND FF.TERMINAL_NUMBER = POS.TERMINAL_NUMBER  
   AND FF.TRANSACTION_NUMBER = POS.TRANSACTION_NUMBER 
 WHERE FF.COST_CENTER_CODE  IS NULL OR  
       FF.TERMINAL_NUMBER  IS NULL OR  
       FF.TRANSACTION_NUMBER  IS NULL OR 
       POS.COST_CENTER_CODE  IS NULL OR 
       POS.TERMINAL_NUMBER  IS NULL OR 
       POS.TRANSACTION_NUMBER  IS NULL OR 
       NVL(FF.FILLER,g_char) <> NVL(POS.FILLER,g_char) OR
       NVL(FF.SALES_TAX_COLL_AMOUNT_SIGN,g_char) <> NVL(POS.SALES_TAX_COLL_AMOUNT_SIGN,g_char) OR
       NVL(FF.SALES_TAX_COLL_AMOUNT,g_char) <> NVL(POS.SALES_TAX_COLL_AMOUNT,g_char) OR
       NVL(FF.SALES_TAX_INDICATOR,g_char) <> NVL(POS.SALES_TAX_INDICATOR,g_char) OR
       NVL(FF.SALES_TAX_RATE_SIGN,g_char) <> NVL(POS.SALES_TAX_RATE_SIGN,g_char) OR
       NVL(FF.SALES_TAX_RATE,g_char) <> NVL(POS.SALES_TAX_RATE,g_char) OR
       NVL(FF.SALES_TAX_CODE,g_char) <> NVL(POS.SALES_TAX_CODE,g_char) 
       ;

v_file_name                         VARCHAR2(100) := 'POSXML_CSTMR_SALES_TAX_DIFF';
v_file_path 	                    VARCHAR2(100);
v_header                            CLOB;
v_out_rec1                          CLOB;
v_out_rec2                          CLOB;
v_count                             NUMBER;
v_output_file                       utl_file.file_type;
v_rec                               c_legacy%ROWTYPE;


BEGIN
       
    v_file_path := ccn_common_tools.get_datafile_path_fnc(g_schema);

    v_output_file := utl_file.fopen ( v_file_path
                                     ,v_file_name || TO_CHAR(SYSDATE,'_MMDDYY') ||'.csv'
                                     ,'W' 
                                     ,32767); 

    v_header   :=   'IN_TABLE'                               ||','||
                    'COST_CENTER_CODE'                       ||','||  
                    'TERMINAL_NUMBER'                        ||','|| 
                    'TRANSACTION_NUMBER'                     ||','||
                    'FILLER'                                 ||','||                                        
                    'SALES_TAX_COLL_AMOUNT_SIGN'             ||','||                                        
                    'SALES_TAX_COLL_AMOUNT'                  ||','|| 
                    'SALES_TAX_INDICATOR'                    ||','|| 
                    'SALES_TAX_RATE'                         ||','|| 
                    'SALES_TAX_CODE'                        
                     ;  


    UTL_FILE.PUT_LINE(v_output_file, v_header, TRUE);

    FOR v_rec IN c_legacy  LOOP
               
        v_out_rec1 := 'LEGACY'||','||v_rec.COST_CENTER_CODE1||','||v_rec.TERMINAL_NUMBER1||','||v_rec.TRANSACTION_NUMBER1||','||v_rec.FILLER1||','||v_rec.SALES_TAX_COLL_AMOUNT_SIGN1
                       ||','||v_rec.SALES_TAX_COLL_AMOUNT1||','||v_rec.SALES_TAX_INDICATOR1||','||v_rec.SALES_TAX_RATE_SIGN1||','||v_rec.SALES_TAX_RATE1||','||v_rec.SALES_TAX_CODE1
                       ;
                                
          
        v_out_rec2 := 'POS'||','||v_rec.COST_CENTER_CODE2||','||v_rec.TERMINAL_NUMBER2||','||v_rec.TRANSACTION_NUMBER2||','||v_rec.FILLER2||','||v_rec.SALES_TAX_COLL_AMOUNT_SIGN2
                       ||','||v_rec.SALES_TAX_COLL_AMOUNT2||','||v_rec.SALES_TAX_INDICATOR2||','||v_rec.SALES_TAX_RATE_SIGN2||','||v_rec.SALES_TAX_RATE2||','||v_rec.SALES_TAX_CODE2
                       ;
                                
                  
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec1, TRUE);
          
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec2, TRUE);
            
    END LOOP;

EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                  ,'CSTMR_SALES_TAX_DIFF_sp'
                                  ,SQLERRM
                                  ,'000000'
                                  ,'0000000000');
END CSTMR_SALES_TAX_DIFF_sp;



PROCEDURE CSTMR_FORM_OF_PAY_DIFF_sp
/*********************************************************************** 
        This Procedure is used compare the legacy customer form of pay load 
        and the POSXML customer form of pay load and creats a Difference file.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
************************************************************************/
IS

CURSOR c_legacy IS
SELECT FF.COST_CENTER_CODE COST_CENTER_CODE1
      ,FF.TERMINAL_NUMBER TERMINAL_NUMBER1
      ,FF.TRANSACTION_NUMBER TRANSACTION_NUMBER1
      ,FF.FILLER FILLER1
      ,FF.PAY_DISC_CODE PAY_DISC_CODE1
      ,FF.TRANSACTION_TOTAL_AMOUNT_SIGN TRANSACTION_TOTAL_AMOUNT_SIGN1
      ,FF.TRANSACTION_TOTAL_AMOUNT TRANSACTION_TOTAL_AMOUNT1
      ,FF.POS_LINE_CNT POS_LINE_CNT1
      ,FF.PAY_AMOUNT_SIGN PAY_AMOUNT_SIGN1
      ,FF.PAY_AMOUNT PAY_AMOUNT1
      ,FF.POS_DISC_SIGN POS_DISC_SIGN1
      ,FF.POS_DISC POS_DISC1
      ,POS.COST_CENTER_CODE COST_CENTER_CODE2
      ,POS.TERMINAL_NUMBER TERMINAL_NUMBER2
      ,POS.TRANSACTION_NUMBER TRANSACTION_NUMBER2
      ,POS.FILLER FILLER2
      ,POS.PAY_DISC_CODE PAY_DISC_CODE2
      ,POS.TRANSACTION_TOTAL_AMOUNT_SIGN TRANSACTION_TOTAL_AMOUNT_SIGN2
      ,POS.TRANSACTION_TOTAL_AMOUNT TRANSACTION_TOTAL_AMOUNT2
      ,POS.POS_LINE_CNT POS_LINE_CNT2
      ,POS.PAY_AMOUNT_SIGN PAY_AMOUNT_SIGN2
      ,POS.PAY_AMOUNT PAY_AMOUNT2
      ,POS.POS_DISC_SIGN POS_DISC_SIGN2
      ,POS.POS_DISC POS_DISC2
  FROM FF_CSTMR_FORM_OF_PAY_TMP FF 
       FULL OUTER JOIN POSXML_CSTMR_FRM_OF_PAY_TMP POS
       ON FF.COST_CENTER_CODE = POS.COST_CENTER_CODE  
   AND FF.TERMINAL_NUMBER = POS.TERMINAL_NUMBER  
   AND FF.TRANSACTION_NUMBER = POS.TRANSACTION_NUMBER 
 WHERE FF.COST_CENTER_CODE  IS NULL OR  
       FF.TERMINAL_NUMBER  IS NULL OR  
       FF.TRANSACTION_NUMBER  IS NULL OR 
       POS.COST_CENTER_CODE  IS NULL OR 
       POS.TERMINAL_NUMBER  IS NULL OR 
       POS.TRANSACTION_NUMBER  IS NULL OR
       NVL(FF.FILLER,g_char) <> NVL(POS.FILLER,g_char) OR
       NVL(FF.PAY_DISC_CODE,g_char) <> NVL(POS.PAY_DISC_CODE,g_char) OR
       NVL(FF.TRANSACTION_TOTAL_AMOUNT_SIGN,g_char) <> NVL(POS.TRANSACTION_TOTAL_AMOUNT_SIGN,g_char) OR
       NVL(FF.TRANSACTION_TOTAL_AMOUNT,g_char) <> NVL(POS.TRANSACTION_TOTAL_AMOUNT,g_char) OR
       NVL(FF.POS_LINE_CNT,g_char) <> NVL(POS.POS_LINE_CNT,g_char) OR
       NVL(FF.PAY_AMOUNT_SIGN,g_char) <> NVL(POS.PAY_AMOUNT_SIGN,g_char) OR
       NVL(FF.PAY_AMOUNT,g_char) <> NVL(POS.PAY_AMOUNT,g_char) OR
       NVL(FF.POS_DISC_SIGN,g_char) <> NVL(POS.POS_DISC_SIGN,g_char) OR
       NVL(FF.POS_DISC,g_char) <> NVL(POS.POS_DISC,g_char) 
       ;

v_file_name                         VARCHAR2(100) := 'POSXML_CSTMR_FORM_OF_PAY_DIFF';
v_file_path 	                    VARCHAR2(100);
v_header                            CLOB;
v_out_rec1                          CLOB;
v_out_rec2                          CLOB;
v_output_file                       utl_file.file_type;
v_rec                               c_legacy%ROWTYPE;


BEGIN       
                
    v_file_path := ccn_common_tools.get_datafile_path_fnc(g_schema);

    v_output_file := utl_file.fopen ( v_file_path
                                     ,v_file_name || TO_CHAR(SYSDATE,'_MMDDYY') ||'.csv'
                                     ,'W' 
                                     ,32767); 

    v_header   :=   'IN_TABLE'                              ||','||
                    'COST_CENTER_CODE'                      ||','||    
                    'TERMINAL_NUMBER'                       ||','|| 
                    'TRANSACTION_NUMBER'                    ||','|| 
                    'FILLER'                                ||','|| 
                    'PAY_DISC_CODE'                         ||','|| 
                    'TRANSACTION_TOTAL_AMOUNT_SIGN'         ||','|| 
                    'TRANSACTION_TOTAL_AMOUNT'              ||','|| 
                    'POS_LINE_CNT'                          ||','|| 
                    'PAY_AMOUNT_SIGN'                       ||','|| 
                    'PAY_AMOUNT'                            ||','|| 
                    'POS_DISC_SIGN'                         ||','|| 
                    'POS_DISC'                               
                     ;  


    UTL_FILE.PUT_LINE(v_output_file, v_header, TRUE);

    FOR v_rec IN c_legacy  LOOP
               
        v_out_rec1 := 'LEGACY'||','||v_rec.COST_CENTER_CODE1||','||v_rec.TERMINAL_NUMBER1||','||v_rec.TRANSACTION_NUMBER1||','||v_rec.FILLER1||','||v_rec.PAY_DISC_CODE1||','||v_rec.TRANSACTION_TOTAL_AMOUNT_SIGN1
                      ||','||v_rec.TRANSACTION_TOTAL_AMOUNT1||','||v_rec.POS_LINE_CNT1||','||v_rec.PAY_AMOUNT_SIGN1||','||v_rec.PAY_AMOUNT1||','||v_rec.POS_DISC_SIGN1||','||v_rec.POS_DISC1
                       ;
                                
          
        v_out_rec2 := 'POS'||','||v_rec.COST_CENTER_CODE2||','||v_rec.TERMINAL_NUMBER2||','||v_rec.TRANSACTION_NUMBER2||','||v_rec.FILLER2||','||v_rec.PAY_DISC_CODE2||','||v_rec.TRANSACTION_TOTAL_AMOUNT_SIGN2
                      ||','||v_rec.TRANSACTION_TOTAL_AMOUNT2||','||v_rec.POS_LINE_CNT2||','||v_rec.PAY_AMOUNT_SIGN2||','||v_rec.PAY_AMOUNT2||','||v_rec.POS_DISC_SIGN2||','||v_rec.POS_DISC2
                      ;
                                
                  
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec1, TRUE);
            
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec2, TRUE);
            
    END LOOP;

EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                   ,'CSTMR_FORM_OF_PAY_DIFF_sp'
                                   ,SQLERRM
                                   ,'000000'
                                   ,'0000000000');
END CSTMR_FORM_OF_PAY_DIFF_sp;


PROCEDURE CSTMR_BANK_CARD_DIFF_sp
/*********************************************************************** 
        This Procedure is used compare the legacy customer bank card load 
        and the POSXML customer bank card load and creats a Difference file.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
************************************************************************/
IS

CURSOR c_legacy IS
SELECT FF.COST_CENTER_CODE COST_CENTER_CODE1
      ,FF.TERMINAL_NUMBER TERMINAL_NUMBER1
      ,FF.TRANSACTION_NUMBER TRANSACTION_NUMBER1
      ,FF.FILLER FILLER1
      ,FF.BANK_CARD_ACCOUNT_NUMBER BANK_CARD_ACCOUNT_NUMBER1
      ,FF.BANK_AUTH BANK_AUTH1
      ,FF.BANK_AMOUNT_SIGN BANK_AMOUNT_SIGN1
      ,FF.BANK_AMOUNT BANK_AMOUNT1
      ,FF.BANK_TYPE BANK_TYPE1
      ,POS.COST_CENTER_CODE COST_CENTER_CODE2
      ,POS.TERMINAL_NUMBER TERMINAL_NUMBER2
      ,POS.TRANSACTION_NUMBER TRANSACTION_NUMBER2
      ,POS.FILLER FILLER2
      ,POS.BANK_CARD_ACCOUNT_NUMBER BANK_CARD_ACCOUNT_NUMBER2
      ,POS.BANK_AUTH BANK_AUTH2
      ,POS.BANK_AMOUNT_SIGN BANK_AMOUNT_SIGN2
      ,POS.BANK_AMOUNT BANK_AMOUNT2
      ,POS.BANK_TYPE BANK_TYPE2
  FROM FF_CSTMR_BANK_CARD_TMP FF
       FULL OUTER JOIN POSXML_CSTMR_BNK_CRD_TMP POS
       ON FF.COST_CENTER_CODE = POS.COST_CENTER_CODE  
   AND FF.TERMINAL_NUMBER = POS.TERMINAL_NUMBER  
   AND FF.TRANSACTION_NUMBER = POS.TRANSACTION_NUMBER 
 WHERE FF.COST_CENTER_CODE  IS NULL OR  
       FF.TERMINAL_NUMBER  IS NULL OR  
       FF.TRANSACTION_NUMBER  IS NULL OR 
       POS.COST_CENTER_CODE  IS NULL OR 
       POS.TERMINAL_NUMBER  IS NULL OR 
       POS.TRANSACTION_NUMBER  IS NULL OR 
       NVL(FF.SORT_FORCE,g_char) <> NVL(POS.SORT_FORCE,g_char) OR
       NVL(FF.SEGMENT_CODE,g_char) <> NVL(POS.SEGMENT_CODE,g_char) OR
       NVL(FF.SUB_SEGMENT_CODE,g_char) <> NVL(POS.SUB_SEGMENT_CODE,g_char) OR
       NVL(FF.FILLER,g_char) <> NVL(POS.FILLER,g_char) OR
       NVL(FF.BANK_CARD_ACCOUNT_NUMBER,g_char) <> NVL(POS.BANK_CARD_ACCOUNT_NUMBER,g_char) OR
       NVL(FF.BANK_AUTH,g_char) <> NVL(POS.BANK_AUTH,g_char) OR
       NVL(FF.BANK_AMOUNT_SIGN,g_char) <> NVL(POS.BANK_AMOUNT_SIGN,g_char) OR
       NVL(FF.BANK_AMOUNT,g_char) <> NVL(POS.BANK_AMOUNT,g_char) OR
       NVL(FF.BANK_TYPE,g_char) <> NVL(POS.BANK_TYPE,g_char)
       ;

v_file_name                         VARCHAR2(100) := 'POSXML_CSTMR_BANK_CARD_DIFF';
v_file_path 	                    VARCHAR2(100);
v_header                            CLOB;
v_out_rec1                          CLOB;
v_out_rec2                          CLOB;
v_count                             NUMBER;
v_output_file                       utl_file.file_type;
v_rec                               c_legacy%ROWTYPE;


BEGIN
             
    v_file_path := ccn_common_tools.get_datafile_path_fnc(g_schema);

    v_output_file := utl_file.fopen ( v_file_path
                                     ,v_file_name || TO_CHAR(SYSDATE,'_MMDDYY') ||'.csv'
                                     ,'W' 
                                     ,32767); 

    v_header   :=   'IN_TABLE'                               ||','||
                    'COST_CENTER_CODE'                       ||','||    
                    'TERMINAL_NUMBER'                        ||','|| 
                    'TRANSACTION_NUMBER'                     ||','|| 
                    'FILLER'                                 ||','||
                    'BANK_CARD_ACCOUNT_NUMBER'               ||','|| 
                    'BANK_AUTH'                              ||','|| 
                    'BANK_AMOUNT'                            ||','|| 
                    'BANK_TYPE'    
                     ;  


    UTL_FILE.PUT_LINE(v_output_file, v_header, TRUE);

    FOR v_rec IN c_legacy  LOOP
               
        v_out_rec1 := 'LEGACY'||','||v_rec.COST_CENTER_CODE1||','||v_rec.TERMINAL_NUMBER1||','||v_rec.TRANSACTION_NUMBER1||','||v_rec.FILLER1||','||v_rec.BANK_CARD_ACCOUNT_NUMBER1
                       ||','||v_rec.BANK_AUTH1||','||v_rec.BANK_AMOUNT_SIGN1||','||v_rec.BANK_AMOUNT1||','||v_rec.BANK_TYPE1
                       ;
                                
          
        v_out_rec2 := 'POS'||','||v_rec.COST_CENTER_CODE2||','||v_rec.TERMINAL_NUMBER2||','||v_rec.TRANSACTION_NUMBER2||','||v_rec.FILLER2||','||v_rec.BANK_CARD_ACCOUNT_NUMBER2||','||v_rec.BANK_AUTH2
                       ||','||v_rec.BANK_AMOUNT_SIGN2||','||v_rec.BANK_AMOUNT2||','||v_rec.BANK_TYPE2
                       ;
                                
                  
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec1, TRUE);
            
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec2, TRUE);
            
    END LOOP;

EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                  ,'CSTMR_BANK_CARD_DIFF_sp'
                                  ,SQLERRM
                                  ,'000000'
                                  ,'0000000000');
END CSTMR_BANK_CARD_DIFF_sp;

--
PROCEDURE BANK_PAID_DATA_DIFF_sp
/*********************************************************************** 
        This Procedure is used compare the legacy customer bank paid data load 
        and the POSXML customer bank paid data load and creats a Difference file.
        
created : 04/14/2016 AXD783 POS XML Conversion
changed :
************************************************************************/
IS

CURSOR c_legacy IS
SELECT FF.TRANSACTION_SOURCE TRANSACTION_SOURCE1
      ,FF.TRANSACTION_TYPE TRANSACTION_TYPE1
      ,FF.COST_CENTER_CODE COST_CENTER_CODE1
      ,FF.CHECK_SERIAL_NUMBER CHECK_SERIAL_NUMBER1
      ,FF.PROCESS_DATE PROCESS_DATE1
      ,FF.FILLER FILLER1
      ,FF.TRANSACTION_SEGMENT_TYPE TRANSACTION_SEGMENT_TYPE1
      ,FF.PAID_DATE PAID_DATE1
      ,FF.STOP_PAY_DATE STOP_PAY_DATE1
      ,FF.STOP_PAY_REMOVE_DATE STOP_PAY_REMOVE_DATE1
      ,FF.VOID_DATE VOID_DATE1
      ,FF.BANK_PAID_AMOUNT_SIGN BANK_PAID_AMOUNT_SIGN1
      ,FF.BANK_PAID_AMOUNT BANK_PAID_AMOUNT1
      ,FF.BANK_NUMBER BANK_NUMBER1
      ,FF.BANK_ACCOUNT_NUMBER BANK_ACCOUNT_NUMBER1
      ,FF.CPCS_NUMBER CPCS_NUMBER1
      ,FF.FILLER1 FILLER11
      ,FF.PAYEE_INFO PAYEE_INFO1
      ,FF.ADDITIONAL_INFO ADDITIONAL_INFO1
      ,FF.FS_ACCOUNT_NUMBER1 FS_ACCOUNT_NUMBER11
      ,FF.FS_AMOUNT_SIGN1 FS_AMOUNT_SIGN11
      ,FF.FS_AMOUNT1 FS_AMOUNT11
      ,FF.FS_ACCOUNT_NUMBER2 FS_ACCOUNT_NUMBER21
      ,FF.FS_AMOUNT_SIGN2 FS_AMOUNT_SIGN21
      ,FF.FS_AMOUNT2 FS_AMOUNT21
      ,FF.FS_ACCOUNT_NUMBER3 FS_ACCOUNT_NUMBER31
      ,FF.FS_AMOUNT_SIGN3 FS_AMOUNT_SIGN31
      ,FF.FS_AMOUNT3 FS_AMOUNT31
      ,POS.TRANSACTION_SOURCE TRANSACTION_SOURCE2
      ,POS.TRANSACTION_TYPE TRANSACTION_TYPE2
      ,POS.COST_CENTER_CODE COST_CENTER_CODE2
      ,POS.CHECK_SERIAL_NUMBER CHECK_SERIAL_NUMBER2
      ,POS.PROCESS_DATE PROCESS_DATE2
      ,POS.FILLER FILLER2
      ,POS.TRANSACTION_SEGMENT_TYPE TRANSACTION_SEGMENT_TYPE2
      ,POS.PAID_DATE PAID_DATE2
      ,POS.STOP_PAY_DATE STOP_PAY_DATE2
      ,POS.STOP_PAY_REMOVE_DATE STOP_PAY_REMOVE_DATE2
      ,POS.VOID_DATE VOID_DATE2
      ,POS.BANK_PAID_AMOUNT_SIGN BANK_PAID_AMOUNT_SIGN2
      ,POS.BANK_PAID_AMOUNT BANK_PAID_AMOUNT2
      ,POS.BANK_NUMBER BANK_NUMBER2
      ,POS.BANK_ACCOUNT_NUMBER BANK_ACCOUNT_NUMBER2
      ,POS.CPCS_NUMBER CPCS_NUMBER2
      ,POS.FILLER1 FILLER12
      ,POS.PAYEE_INFO PAYEE_INFO2
      ,POS.ADDITIONAL_INFO ADDITIONAL_INFO2
      ,POS.FS_ACCOUNT_NUMBER1 FS_ACCOUNT_NUMBER12
      ,POS.FS_AMOUNT_SIGN1 FS_AMOUNT_SIGN12
      ,POS.FS_AMOUNT1 FS_AMOUNT12
      ,POS.FS_ACCOUNT_NUMBER2 FS_ACCOUNT_NUMBER22
      ,POS.FS_AMOUNT_SIGN2 FS_AMOUNT_SIGN22
      ,POS.FS_AMOUNT2 FS_AMOUNT22
      ,POS.FS_ACCOUNT_NUMBER3 FS_ACCOUNT_NUMBER32
      ,POS.FS_AMOUNT_SIGN3 FS_AMOUNT_SIGN32
      ,POS.FS_AMOUNT3 FS_AMOUNT32
  FROM FF_BANK_PAID_DATA FF
       FULL OUTER JOIN POSXML_BNK_PAID_DATA_TMP POS
       ON FF.CHECK_SERIAL_NUMBER = POS.CHECK_SERIAL_NUMBER 
 WHERE FF.CHECK_SERIAL_NUMBER IS NULL OR
       POS.CHECK_SERIAL_NUMBER IS NULL OR 
       NVL(FF.TRANSACTION_SOURCE,g_char) <> NVL(POS.TRANSACTION_SOURCE,g_char) OR
       NVL(FF.TRANSACTION_TYPE,g_char) <> NVL(POS.TRANSACTION_TYPE,g_char) OR
       NVL(FF.COST_CENTER_CODE,g_char) <> NVL(POS.COST_CENTER_CODE,g_char) OR
       NVL(FF.PROCESS_DATE,g_char) <> NVL(POS.PROCESS_DATE,g_char) OR
       NVL(FF.FILLER,g_char) <> NVL(POS.FILLER,g_char) OR
       NVL(FF.TRANSACTION_SEGMENT_TYPE,g_char) <> NVL(POS.TRANSACTION_SEGMENT_TYPE,g_char) OR
       NVL(FF.PAID_DATE,g_char) <> NVL(POS.PAID_DATE,g_char) OR
       NVL(FF.STOP_PAY_DATE,g_char) <> NVL(POS.STOP_PAY_DATE,g_char) OR
       NVL(FF.STOP_PAY_REMOVE_DATE,g_char) <> NVL(POS.STOP_PAY_REMOVE_DATE,g_char) OR
       NVL(FF.VOID_DATE,g_char) <> NVL(POS.VOID_DATE,g_char) OR
       NVL(FF.BANK_PAID_AMOUNT_SIGN,g_char) <> NVL(POS.BANK_PAID_AMOUNT_SIGN,g_char) OR
       NVL(FF.BANK_PAID_AMOUNT,g_char) <> NVL(POS.BANK_PAID_AMOUNT,g_char) OR
       NVL(FF.BANK_NUMBER,g_char) <> NVL(POS.BANK_NUMBER,g_char) OR
       NVL(FF.BANK_ACCOUNT_NUMBER,g_char) <> NVL(POS.BANK_ACCOUNT_NUMBER,g_char) OR
       NVL(FF.CPCS_NUMBER,g_char) <> NVL(POS.CPCS_NUMBER,g_char) OR
       NVL(FF.FILLER1,g_char) <> NVL(POS.FILLER1,g_char) OR
       NVL(FF.PAYEE_INFO,g_char) <> NVL(POS.PAYEE_INFO,g_char) OR
       NVL(FF.ADDITIONAL_INFO,g_char) <> NVL(POS.ADDITIONAL_INFO,g_char) OR
       NVL(FF.FS_ACCOUNT_NUMBER1,g_char) <> NVL(POS.FS_ACCOUNT_NUMBER1,g_char) OR
       NVL(FF.FS_AMOUNT_SIGN1,g_char) <> NVL(POS.FS_AMOUNT_SIGN1,g_char) OR
       NVL(FF.FS_AMOUNT1,g_char) <> NVL(POS.FS_AMOUNT1,g_char) OR
       NVL(FF.FS_ACCOUNT_NUMBER2,g_char) <> NVL(POS.FS_ACCOUNT_NUMBER2,g_char) OR
       NVL(FF.FS_AMOUNT_SIGN2,g_char) <> NVL(POS.FS_AMOUNT_SIGN2,g_char) OR
       NVL(FF.FS_AMOUNT2,g_char) <> NVL(POS.FS_AMOUNT2,g_char) OR
       NVL(FF.FS_ACCOUNT_NUMBER3,g_char) <> NVL(POS.FS_ACCOUNT_NUMBER3,g_char) OR
       NVL(FF.FS_AMOUNT_SIGN3,g_char) <> NVL(POS.FS_AMOUNT_SIGN3,g_char) OR
       NVL(FF.FS_AMOUNT3,g_char) <> NVL(POS.FS_AMOUNT3,g_char)
       ;

v_file_name                         VARCHAR2(100) := 'POSXML_BANK_PAID_DATA_DIFF';
v_file_path 	                    VARCHAR2(100);
v_header                            CLOB;
v_out_rec1                          CLOB;
v_out_rec2                          CLOB;
v_output_file                       utl_file.file_type;
v_rec                               c_legacy%ROWTYPE;


BEGIN
       
                
    v_file_path := ccn_common_tools.get_datafile_path_fnc(g_schema);

    v_output_file := utl_file.fopen ( v_file_path
                                     ,v_file_name || TO_CHAR(SYSDATE,'_MMDDYY') ||'.csv'
                                     ,'W' 
                                     ,32767); 

    v_header   :=   'IN_TABLE'                                ||','||
                    'TRANSACTION_SOURCE'                      ||','|| 
                    'TRANSACTION_TYPE'                        ||','||   
                    'COST_CENTER_CODE'                        ||','||   
                    'CHECK_SERIAL_NUMBER'                     ||','||  
                    'PROCESS_DATE'                            ||','|| 
                    'FILLER'                                  ||','|| 
                    'TRANSACTION_SEGMENT_TYPE'                ||','|| 
                    'PAID_DATE'                               ||','||
                    'STOP_PAY_DATE'                           ||','||
                    'STOP_PAY_REMOVE_DATE'                    ||','||
                    'VOID_DATE'                               ||','||
                    'BANK_PAID_AMOUNT_SIGN'                   ||','||
                    'BANK_PAID_AMOUNT'                        ||','||
                    'BANK_NUMBER'                             ||','||   
                    'BANK_ACCOUNT_NUMBER'                     ||','||
                    'CPCS_NUMBER'                             ||','||
                    'FILLER1'                                 ||','|| 
                    'PAYEE_INFO'                              ||','||
                    'ADDITIONAL_INFO'                         ||','|| 
                    'FS_ACCOUNT_NUMBER1'                      ||','||  
                    'FS_AMOUNT_SIGN1'                         ||','||     
                    'FS_AMOUNT1'                              ||','||
                    'FS_ACCOUNT_NUMBER2'                      ||','||
                    'FS_AMOUNT_SIGN2'                         ||','||
                    'FS_AMOUNT2'                              ||','||
                    'FS_ACCOUNT_NUMBER3'                      ||','||
                    'FS_AMOUNT_SIGN3'                         ||','||
                    'FS_AMOUNT3'       
                     ;  


    UTL_FILE.PUT_LINE(v_output_file, v_header, TRUE);

    FOR v_rec IN c_legacy  LOOP
               
        v_out_rec1 := 'LEGACY'||','||v_rec.TRANSACTION_SOURCE1||','||v_rec.TRANSACTION_TYPE1||','||v_rec.COST_CENTER_CODE1||','||v_rec.CHECK_SERIAL_NUMBER1||','||v_rec.PROCESS_DATE1
                       ||','||v_rec.FILLER1||','||v_rec.TRANSACTION_SEGMENT_TYPE1||','||v_rec.PAID_DATE1||','||v_rec.STOP_PAY_DATE1||','||v_rec.STOP_PAY_REMOVE_DATE1
                       ||','||v_rec.VOID_DATE1||','||v_rec.BANK_PAID_AMOUNT_SIGN1||','||v_rec.BANK_PAID_AMOUNT1||','||v_rec.BANK_NUMBER1||','||v_rec.BANK_ACCOUNT_NUMBER1
                       ||','||v_rec.CPCS_NUMBER1||','||v_rec.FILLER11||','||v_rec.PAYEE_INFO1||','||v_rec.ADDITIONAL_INFO1||','||v_rec.FS_ACCOUNT_NUMBER11||','||v_rec.FS_AMOUNT_SIGN11
                       ||','||v_rec.FS_AMOUNT11||','||v_rec.FS_ACCOUNT_NUMBER21||','||v_rec.FS_AMOUNT_SIGN21||','||v_rec.FS_AMOUNT21||','||v_rec.FS_ACCOUNT_NUMBER31
                       ||','||v_rec.FS_AMOUNT_SIGN31||','||v_rec.FS_AMOUNT31
                       ;
                                
          
        v_out_rec2 := 'POS'||','||v_rec.TRANSACTION_SOURCE2||','||v_rec.TRANSACTION_TYPE2||','||v_rec.COST_CENTER_CODE2||','||v_rec.CHECK_SERIAL_NUMBER2||','||v_rec.PROCESS_DATE2
                       ||','||v_rec.FILLER2||','||v_rec.TRANSACTION_SEGMENT_TYPE2||','||v_rec.PAID_DATE2||','||v_rec.STOP_PAY_DATE2||','||v_rec.STOP_PAY_REMOVE_DATE2||','||v_rec.VOID_DATE2
                       ||','||v_rec.BANK_PAID_AMOUNT_SIGN2||','||v_rec.BANK_PAID_AMOUNT2||','||v_rec.BANK_NUMBER2||','||v_rec.BANK_ACCOUNT_NUMBER2||','||v_rec.CPCS_NUMBER2
                       ||','||v_rec.FILLER12||','||v_rec.PAYEE_INFO2||','||v_rec.ADDITIONAL_INFO2||','||v_rec.FS_ACCOUNT_NUMBER12||','||v_rec.FS_AMOUNT_SIGN12||','||v_rec.FS_AMOUNT12
                       ||','||v_rec.FS_ACCOUNT_NUMBER22||','||v_rec.FS_AMOUNT_SIGN22||','||v_rec.FS_AMOUNT22||','||v_rec.FS_ACCOUNT_NUMBER32||','||v_rec.FS_AMOUNT_SIGN32
                       ||','||v_rec.FS_AMOUNT32
                        ;
                                
                  
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec1, TRUE);
       
        UTL_FILE.PUT_LINE(v_output_file, v_out_rec2, TRUE);
            
    END LOOP;

EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE
                                   ,'BANK_PAID_DATA_DIFF_sp'
                                   ,SQLERRM
                                   ,'000000'
                                   ,'0000000000');
END BANK_PAID_DATA_DIFF_sp;

END SD_POSXML_INTF_DIFF_pkg;