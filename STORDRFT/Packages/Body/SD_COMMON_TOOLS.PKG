create or replace PACKAGE body SD_COMMON_TOOLS
/**************************************************************** 
This package will have store drafts specific tools

created : 07/23/2014 jxc517 CCN Project....
changed :
*****************************************************************/
AS

FUNCTION GET_HEX_VALUE_FOR_TRNSCTN_TYP
/******************************************************************
This function will return the hexadecimal conversion of the value passed in
based on the transaction type passed in

created : 11/10/2014 jxc517 CCN Project....
changed :
******************************************************************/
(IN_TRANSACTION_TYPE IN   VARCHAR2
,IN_AMOUNT           IN   NUMBER) RETURN VARCHAR2
IS
    V_RETURN_VALUE       VARCHAR2(100) := TO_CHAR(IN_AMOUNT); 
    V_INTERMEDIATE_VALUE VARCHAR2(100);
    V_LAST_CHARACTER     VARCHAR2(1);
BEGIN
IF IN_TRANSACTION_TYPE IN ('10','15') THEN
    V_LAST_CHARACTER     := SUBSTR(TO_CHAR(IN_AMOUNT),-1);
    V_INTERMEDIATE_VALUE := SUBSTR(TO_CHAR(ABS(IN_AMOUNT)),1,LENGTH(TO_CHAR(ABS(IN_AMOUNT)))-1);
    IF IN_AMOUNT < 0 THEN
        CASE 
            WHEN V_LAST_CHARACTER = '0' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'}';
            WHEN V_LAST_CHARACTER = '1' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'J';
            WHEN V_LAST_CHARACTER = '2' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'K';
            WHEN V_LAST_CHARACTER = '3' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'L';
            WHEN V_LAST_CHARACTER = '4' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'M';
            WHEN V_LAST_CHARACTER = '5' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'N';
            WHEN V_LAST_CHARACTER = '6' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'O';
            WHEN V_LAST_CHARACTER = '7' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'P';
            WHEN V_LAST_CHARACTER = '8' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'Q';
            WHEN V_LAST_CHARACTER = '9' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'R';
            ELSE
                NULL;
        END CASE;
    ELSE
        CASE 
            WHEN V_LAST_CHARACTER = '0' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'{';
            WHEN V_LAST_CHARACTER = '1' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'A';
            WHEN V_LAST_CHARACTER = '2' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'B';
            WHEN V_LAST_CHARACTER = '3' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'C';
            WHEN V_LAST_CHARACTER = '4' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'D';
            WHEN V_LAST_CHARACTER = '5' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'E';
            WHEN V_LAST_CHARACTER = '6' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'F';
            WHEN V_LAST_CHARACTER = '7' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'G';
            WHEN V_LAST_CHARACTER = '8' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'H';
            WHEN V_LAST_CHARACTER = '9' THEN
                V_RETURN_VALUE := V_INTERMEDIATE_VALUE||'I';
            ELSE
                NULL;
        END CASE;
    END IF;
END IF;
    RETURN V_RETURN_VALUE;
EXCEPTION
    WHEN OTHERS THEN
         RETURN V_RETURN_VALUE; 
END GET_HEX_VALUE_FOR_TRNSCTN_TYP;

PROCEDURE GENERATE_SECOND_WEEKDAY
/******************************************************************
This procedure will return the run date for the monthly process. This date would be
second weekday of the month.

This process will check if the second day of the month is saturday or sunday. 
If it is saturday or sunday, it will add 2 days to get the second weekday.
If it is Monday then, second weekday has to be next day, so add 1 day.
If not 2nd of the month itself is the second week day

It will then write the file with the date in the server

created : 02/29/2016 nxk927 CCN Project....
changed :
******************************************************************/
IS
  V_SECOND_WEEKDAY DATE;
  V_DATE           DATE := TRUNC(SYSDATE, 'MON') +1;
  PATH        	   VARCHAR2(50) := 'STORDRFT_LOAD_FILES';
  FILENAME  	     VARCHAR2(50) := 'SECOND_WEEKDAY.TXT';
  OUTPUT_FILE 		 UTL_FILE.FILE_TYPE;
  V_OUT_CLOB       CLOB;
BEGIN
    SELECT CASE 
              --checking if it is saturday or sunday
              --adding 2 days to current date if it is saturday or sunday to get the second working day
              WHEN TO_CHAR(V_DATE,'dy') IN ('SAT','SUN')  
                  THEN V_DATE + 2 
              --checking if it is monday
              --adding 1 day to current date if it is monday to get the second working day   
              WHEN TO_CHAR(V_DATE,'dy') = 'MON'  
                  THEN V_DATE + 1
              ELSE V_DATE
           END AS SECOND_WEEKDAY
      INTO V_SECOND_WEEKDAY
      FROM DUAL;
      V_OUT_CLOB:= TO_CHAR(V_SECOND_WEEKDAY,'MM/DD/YYYY');
      IF V_OUT_CLOB <> EMPTY_CLOB() THEN
         OUTPUT_FILE := UTL_FILE.FOPEN (PATH,FILENAME,'W',32767); 
         UTL_FILE.PUT_LINE(OUTPUT_FILE, V_OUT_CLOB, TRUE);
         UTL_FILE.FCLOSE(OUTPUT_FILE);
      END IF;
   
END GENERATE_SECOND_WEEKDAY;

END SD_COMMON_TOOLS;