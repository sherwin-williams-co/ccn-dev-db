create or replace 
PACKAGE body          GAINLOSS_JV_PKG
/****************************************************************************** 
This package will hold all pl/sql objects that are needed to 
create and build the Monthly GAINLOSS_JV

created : 11/24/2014 NXK927
revisions: 
******************************************************************************/
AS

FUNCTION IS_CC_JV_GAIN_LOSS_ELIGIBLE(
/***********************************************************
This Procedure determine if a cost center needs to be included in JV or not
      
Created : 12/19/2014 jxc517 CCN Project.....
Modified: 
************************************************************/
    IN_COST_CENTER_CODE       IN     VARCHAR2,
    IN_DATE                   IN     DATE) RETURN BOOLEAN
IS
    V_RETURN_VALUE     BOOLEAN := TRUE;
    V_OPEN_DATE        DATE;
    V_DRFTS_COUNT      NUMBER := 0;
BEGIN
/* ###### RULE 1 ######
If store does not participate in jv gain loss process, the labors for previous month
will be closed[UPDATE BOOK_DATE_SEQUENCE IN CUSTOMER table]
These stores will not be considered as part of jv process*/
    BEGIN
        SELECT COUNT(*)
          INTO V_DRFTS_COUNT
          FROM STORE_DRAFT_REPORT
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
           AND DRAFT_AMOUNT IS NOT NULL;
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;
    IF V_DRFTS_COUNT = 0 THEN
        V_RETURN_VALUE := FALSE;
    END IF;

/* ###### RULE 2 ######
If store wrote their first draft in the month being closed, all the labor and draft records
for that store will be closed [UPDATE BOOK_DATE_SEQUENCE IN CUSTOMER, STORE_DRAFTS, STORE_DRAFTS_DETAIL table]
These stores will not be considered as part of jv process*/
    BEGIN
        SELECT COUNT(*)
          INTO V_DRFTS_COUNT
          FROM STORE_DRAFTS
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
           AND TRANSACTION_DATE < ADD_MONTHS(IN_DATE,-1);
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;
    IF V_DRFTS_COUNT = 0 THEN
        V_RETURN_VALUE := FALSE;
    END IF;
    RETURN V_RETURN_VALUE;
EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END IS_CC_JV_GAIN_LOSS_ELIGIBLE;

PROCEDURE CREATE_GAINLOSS_JV(
/*****************************************************************************
This procedure will create JV entries for GAIN AND LOSS

created : 11/24/2014 NXK927 
revision: 12/09/2014 jxc517 CCN Project.....
          Modified the cursor to pick correct data, added input parameter which should be
          first of the month on which we are running the report
          Example for november JV run it should be 01-DEC-2014
*****************************************************************************/
IN_DATE    IN DATE)
IS

CURSOR jv_cursor  IS 
    SELECT COST_CENTER_CODE,
           (SELECT SUM(NVL(DRAFT_AMOUNT,0)) - SUM(NVL(LABOR_AMOUNT,0))
              FROM STORE_DRAFT_REPORT
             WHERE COST_CENTER_CODE = SDR.COST_CENTER_CODE
               AND TRANSACTION_DATE >= ADD_MONTHS(IN_DATE,-2)
               AND PL_DATE IS NOT NULL) PL_GAIN_LOSS,
            TO_CHAR(ADD_MONTHS(IN_DATE,-1), 'YYYY/MM') BOOK_DATE
      FROM STORE_DRAFT_REPORT SDR
     WHERE TRANSACTION_DATE >= ADD_MONTHS(IN_DATE,-2)
     GROUP BY COST_CENTER_CODE, TO_CHAR(ADD_MONTHS(IN_DATE,-1), 'YYYY/MM');

    V_COUNT           NUMBER := 0;
    V_BATCH_NUMBER    BATCH_JOB.BATCH_JOB_NUMBER%TYPE;
    V_TRANS_STATUS    BATCH_JOB.TRANS_STATUS%TYPE := 'SUCCESSFUL';
BEGIN
    CCN_BATCH_PKG.INSERT_BATCH_JOB('GAINLOSS_JOB', V_BATCH_NUMBER);
    CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
    FOR rec IN jv_cursor LOOP
        BEGIN
            IF IS_CC_JV_GAIN_LOSS_ELIGIBLE(rec.COST_CENTER_CODE, IN_DATE) THEN
                INSERT INTO GAINLOSS_JV VALUES rec;
            END IF;
            V_COUNT := V_COUNT + 1;
            IF V_COUNT > 500 THEN
                COMMIT;
                V_COUNT := 0;
            END IF; 
        EXCEPTION
            WHEN OTHERS THEN
                V_TRANS_STATUS := 'ERROR';
        END;
    END LOOP; --end cost_center_rec
    COMMIT;
    CCN_BATCH_PKG.UPDATE_BATCH_JOB('GAINLOSS_JOB', V_BATCH_NUMBER, V_TRANS_STATUS);
    CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
EXCEPTION
    WHEN OTHERS THEN
        CCN_BATCH_PKG.UPDATE_BATCH_JOB('GAINLOSS_JOB', V_BATCH_NUMBER, V_TRANS_STATUS);
        CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
END CREATE_GAINLOSS_JV;

PROCEDURE LOAD_GAINLOSS_JV_HST
/*------------------------------------------------------------------------------
This Procedure pull data from GAINLOSS_JV and Insert into
GAINLOSS_JV_HST table for historical purpose

created : 11/24/2014 NXK927 
revision: 
------------------------------------------------------------------------------*/
IS
    CURSOR GL_JV_CUR IS SELECT * FROM GAINLOSS_JV;
    V_COMMIT        NUMBER:=0; 
BEGIN
    FOR GL_JV_HST_REC IN GL_JV_CUR LOOP
        BEGIN
            INSERT INTO GAINLOSS_JV_HST VALUES GL_JV_HST_REC;
            V_COMMIT := V_COMMIT + 1;
            IF V_COMMIT > 500 THEN
                COMMIT;
                V_COMMIT := 0;
            END IF;
        EXCEPTION
            WHEN OTHERS THEN
                ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE,
                                           'LOAD_GAINLOSS_JV_HST',
                                           SQLERRM,
                                           GL_JV_HST_REC.COST_CENTER_CODE,
                                           GL_JV_HST_REC.BOOK_DATE);
        END;
    END LOOP;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
         ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE,
                                    'LOAD_GAINLOSS_JV_HST',
                                    SQLERRM,
                                    '000000',
                                    '0000000000');
END LOAD_GAINLOSS_JV_HST;

END GAINLOSS_JV_PKG;