create or replace 
PACKAGE  BODY SD_REPORT_PKG AS 
/*********************************************************** 
THIS PACKAGE WILL HOLD ALL PL/SQL OBJECTS THAT ARE NEEDED TO 
STORE DRAFT REPORTS FROM 


CREATED : 08/01/2014

REVISIONS: 
************************************************************/

PROCEDURE STORE_DRAFT_REPORT_QUERY
/**********************************************************

THIS PROCEDURE WILL BUILD THE STORE DRAFT REPORT DATA 

CREATED : 08/01/2014
**********************************************************/
(IN_START_DATE IN DATE,
IN_END_DATE IN DATE 
)
IS
CURSOR STORE_DRAFT_CUR IS
 SELECT A.*,
       DIVISION,
       AREA,
       DISTRICT,
       DIVISION_NAME,
       AREA_NAME,
       DISTRICT_NAME,
       COST_CENTER_NAME,
       PRIMARY_PHONE_NUMBER AS PHONE_NUMBER
       FROM
            ( SELECT cd.COST_CENTER_CODE AS CC_CODE,
              SUBSTR(CD.COST_CENTER_CODE,3,4) COST_CENTER_CODE,
	            CD.TERMINAL_NUMBER, 
              CD.TRANSACTION_NUMBER,
              CD.TRANSACTION_DATE,
              NULL AS DRAFT_NUMBER,
              CD.ITEM_QUANTITY,
              ITEM_PRICE AS LABOR_AMOUNT,
              NULL AS DRAFT_AMOUNT,
             c.CUSTOMER_ACCOUNT_NUMBER, 
             c.PURCHASE_ORDER_NUMBER,
             sd.PAYEE_NAME,
             NULL AS LBR_TRANSACTION_NUMBER,
             NULL AS LBR_TERMINAL_NUMBER,
             NULL AS LBR_TRANSACTION_DATE
      FROM CUSTOMER_DETAILS CD, customer c, store_drafts SD
      WHERE cd.TRANSACTION_DATE BETWEEN IN_START_DATE AND  IN_END_DATE
      and CD.TERMINAL_NUMBER= C.TERMINAL_NUMBER
      AND CD.TRANSACTION_NUMBER = C.TRANSACTION_NUMBER
      and SD.TERMINAL_NUMBER= CD.TERMINAL_NUMBER
      AND SD.TRANSACTION_NUMBER = CD.TRANSACTION_NUMBER
      union      
        SELECT sdd.COST_CENTER_CODE AS CC_CODE,
             SUBSTR(SDD.COST_CENTER_CODE,3,4) COST_CENTER_CODE,
	           SDD.TERMINAL_NUMBER, 
             SDD.TRANSACTION_NUMBER,
             SDD.TRANSACTION_DATE,
             SUBSTR(sdd.CHECK_SERIAL_NUMBER,6,5) AS DRAFT_NUMBER,
             SDD.ITEM_QUANTITY,
             NULL AS LABOR_AMOUNT,
             SDD.ITEM_PRICE AS DRAFT_AMOUNT,
             c.CUSTOMER_ACCOUNT_NUMBER,      
             C.PURCHASE_ORDER_NUMBER,
             SD.PAYEE_NAME,
             LBR_TRANSACTION_NUMBER,
             LBR_TERMINAL_NUMBER,
             LBR_TRANSACTION_DATE
      FROM STORE_DRAFTS_DETAIL SDD, Customer C, STORE_DRAFTS SD
      WHERE sdd.TRANSACTION_DATE BETWEEN IN_START_DATE AND  IN_END_DATE
      and C.TERMINAL_NUMBER= SDD.TERMINAL_NUMBER
     AND C.TRANSACTION_NUMBER = SDD.TRANSACTION_NUMBER
     and SDD.CHECK_SERIAL_NUMBER = SD.CHECK_SERIAL_NUMBER) A, 
      CCN_HIERARCHY_INFO CH, 
      PHONE_NBR P
  WHERE SUBSTR(CH.COST_CENTER_CODE,3,4) = A.COST_CENTER_CODE
  AND SUBSTR(P.COST_CENTER_CODE,3,4) = A.COST_CENTER_CODE
  AND CH.HRCHY_HDR_NAME = 'GLOBAL_HIERARCHY'
AND A.TERMINAL_NUMBER IS NOT NULL
AND A.TRANSACTION_NUMBER IS NOT NULL;
     
 V_COUNT                 NUMBER := 0;
V_STORE_DRAFT_ROW       STORE_DRAFT_REPORT%ROWTYPE;

 
BEGIN

 FOR STORE_DRAFT_REC IN STORE_DRAFT_CUR LOOP

   BEGIN
 
     V_STORE_DRAFT_ROW.COST_CENTER_CODE                 := STORE_DRAFT_REC.COST_CENTER_CODE;
    V_STORE_DRAFT_ROW.COST_CENTER_NAME                  := STORE_DRAFT_REC.COST_CENTER_NAME;
    V_STORE_DRAFT_ROW.COST_CENTER_MGR                   := SD_REPORT_PKG.CC_MANAGER(STORE_DRAFT_REC.CC_CODE);
    V_STORE_DRAFT_ROW.CUSTOMER_ACCOUNT_NUMBER           := STORE_DRAFT_REC.CUSTOMER_ACCOUNT_NUMBER;
    V_STORE_DRAFT_ROW.PAYEE_NAME                        := STORE_DRAFT_REC.PAYEE_NAME;
    V_STORE_DRAFT_ROW.PURCHASE_ORDER_NUMBER             := nvl(STORE_DRAFT_REC.PURCHASE_ORDER_NUMBER, '***xNOxCUSTOMERxNAMEx***');
    V_STORE_DRAFT_ROW.TERMINAL_NUMBER                   := STORE_DRAFT_REC.TERMINAL_NUMBER;
    V_STORE_DRAFT_ROW.TRANSACTION_NUMBER                := STORE_DRAFT_REC.TRANSACTION_NUMBER;
    V_STORE_DRAFT_ROW.TRANSACTION_DATE                  := STORE_DRAFT_REC.TRANSACTION_DATE;
    V_STORE_DRAFT_ROW.LBR_TRANSACTION_NUMBER            := STORE_DRAFT_REC.LBR_TRANSACTION_NUMBER;
    V_STORE_DRAFT_ROW.LBR_TERMINAL_NUMBER               := STORE_DRAFT_REC.LBR_TERMINAL_NUMBER;
    V_STORE_DRAFT_ROW.LBR_TRANSACTION_DATE              := STORE_DRAFT_REC.LBR_TRANSACTION_DATE;
    V_STORE_DRAFT_ROW.DRAFT_NUMBER                      := STORE_DRAFT_REC.DRAFT_NUMBER;
    V_STORE_DRAFT_ROW.DRAFT_AMOUNT                      := STORE_DRAFT_REC.DRAFT_AMOUNT;
    V_STORE_DRAFT_ROW.LABOR_AMOUNT                      := STORE_DRAFT_REC.LABOR_AMOUNT;
    V_STORE_DRAFT_ROW.ITEM_QUANTITY                     := STORE_DRAFT_REC.ITEM_QUANTITY;
    V_STORE_DRAFT_ROW.PHONE_NUMBER                      := STORE_DRAFT_REC.PHONE_NUMBER;
    V_STORE_DRAFT_ROW.AREA                              := STORE_DRAFT_REC.AREA;
    V_STORE_DRAFT_ROW.AREA_NAME                         := STORE_DRAFT_REC.AREA_NAME;
    --V_STORE_DRAFT_ROW.AREA_MGR                          := SD_REPORT_PKG.GET_MANAGER_NAME('ADMIN_TO_SALES_AREA',STORE_DRAFT_REC.DIVISION || STORE_DRAFT_REC.AREA);
    V_STORE_DRAFT_ROW.AREA_MGR                          := SD_REPORT_PKG.GET_MANAGER_NAME('AREA_MGR', STORE_DRAFT_REC.DIVISION || STORE_DRAFT_REC.AREA);
    V_STORE_DRAFT_ROW.DISTRICT                          := STORE_DRAFT_REC.DISTRICT;
    V_STORE_DRAFT_ROW.DISTRICT_NAME                     := STORE_DRAFT_REC.DISTRICT_NAME;
    --V_STORE_DRAFT_ROW.DISTRICT_MGR                      := SD_REPORT_PKG.GET_MANAGER_NAME('ADMIN_TO_SALES_DISTRICT',STORE_DRAFT_REC.DIVISION || STORE_DRAFT_REC.AREA || STORE_DRAFT_REC.DISTRICT);
    V_STORE_DRAFT_ROW.DISTRICT_MGR                      := SD_REPORT_PKG.GET_MANAGER_NAME('DIST_MGR',STORE_DRAFT_REC.DIVISION || STORE_DRAFT_REC.AREA || STORE_DRAFT_REC.DISTRICT);
    V_STORE_DRAFT_ROW.DIVISION                          := STORE_DRAFT_REC.DIVISION;
    V_STORE_DRAFT_ROW.DIVISION_NAME                     := STORE_DRAFT_REC.DIVISION_NAME;
    --V_STORE_DRAFT_ROW.DIVISION_MGR                      := SD_REPORT_PKG.GET_MANAGER_NAME('ADMIN_TO_SALES_DIVISION',STORE_DRAFT_REC.DIVISION);
    V_STORE_DRAFT_ROW.DIVISION_MGR                      := SD_REPORT_PKG.GET_MANAGER_NAME('DIV_MGR',STORE_DRAFT_REC.DIVISION);

    INSERT INTO STORE_DRAFT_REPORT VALUES  V_STORE_DRAFT_ROW;
                V_COUNT := V_COUNT + 1;
            IF V_COUNT > 1000 THEN
                COMMIT;
                V_COUNT := 0;
            END IF;   
        EXCEPTION
            WHEN OTHERS THEN
                NULL;
                 --  dbms_output.put_line(STORE_DRAFT_REC.PAYEE_NAME|| ' - ' || STORE_DRAFT_REC.CUSTOMER_ACCOUNT_NUMBER || '-' || SQLERRM);                        
        END;
    END LOOP;
    COMMIT;

END STORE_DRAFT_REPORT_QUERY;

FUNCTION GET_RQSTD_ATTRIBUTE_VALUE(
    IN_UPPER_LVL_VER_VALUE  IN     HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%TYPE,
    IN_ATTRIBUTE_NAME       IN     VARCHAR2) RETURN VARCHAR2
IS
    V_COUNT           NUMBER        := 1;
    V_ATTRIBUTE_NAME  VARCHAR2(100);
    OUT_ATTRIBUTE_VALUE VARCHAR2(100);
BEGIN
    WHILE IN_UPPER_LVL_VER_VALUE.EXISTSNODE('//attributes/upper_lvl_ver_desc[' || V_COUNT || ']') = 1 LOOP
        V_ATTRIBUTE_NAME := UPPER(REPLACE(IN_UPPER_LVL_VER_VALUE.EXTRACT('/attributes/upper_lvl_ver_desc' || '[' || V_COUNT || ']/Name/text()').GETSTRINGVAL(),' ','_'));
        IF V_ATTRIBUTE_NAME = UPPER(REPLACE(IN_ATTRIBUTE_NAME,' ','_'))
           AND (IN_UPPER_LVL_VER_VALUE.EXISTSNODE('/attributes/upper_lvl_ver_desc[' || V_COUNT || ']/Value/text()') = 1) THEN
            OUT_ATTRIBUTE_VALUE := IN_UPPER_LVL_VER_VALUE.EXTRACT('/attributes/upper_lvl_ver_desc[' || V_COUNT || ']/Value/text()').GETSTRINGVAL();
        END IF;
        V_COUNT := V_COUNT + 1;
    END LOOP;
    RETURN OUT_ATTRIBUTE_VALUE;
EXCEPTION
    WHEN OTHERS THEN
        RETURN OUT_ATTRIBUTE_VALUE;
END GET_RQSTD_ATTRIBUTE_VALUE;



/*
FUNCTION GET_MANAGER_NAME(
    IN_HRCHY_HDR_NAME IN HIERARCHY_DETAIL.HRCHY_HDR_NAME%TYPE,
    IN_HRCHY_DTL_PREV_LVL_VAL IN HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE
     ) RETURN VARCHAR2
IS
    V_MANAGER_NAME VARCHAR2(100); -- EMPLOYEE_DETAILS.EMPLOYEE_NAME%TYPE;
 
BEGIN

SELECT DISTINCT EMPLOYEE_NAME 
INTO V_MANAGER_NAME 
FROM EMPLOYEE_DETAILS, HIERARCHY_DETAIL
WHERE SUBSTR(SD_REPORT_PKG.GET_RQSTD_ATTRIBUTE_VALUE(UPPER_LVL_VER_VALUE,'MANAGERNAME'),2) = EMPLOYEE_NUMBER
AND HRCHY_HDR_NAME = IN_HRCHY_HDR_NAME
AND  (CASE 
        WHEN HRCHY_HDR_NAME = 'ADMIN_TO_SALES_DISTRICT' THEN SUBSTR(HRCHY_DTL_PREV_LVL_VAL,5,6) 
        WHEN HRCHY_HDR_NAME = 'ADMIN_TO_SALES_AREA' THEN SUBSTR(HRCHY_DTL_PREV_LVL_VAL,5,4)
        WHEN HRCHY_HDR_NAME = 'ADMIN_TO_SALES_DIVISION' THEN SUBSTR(HRCHY_DTL_PREV_LVL_VAL,5,2)
     ELSE HRCHY_DTL_PREV_LVL_VAL
     END) = IN_HRCHY_DTL_PREV_LVL_VAL 
     ;

  RETURN V_MANAGER_NAME;
EXCEPTION
    WHEN OTHERS THEN
    RETURN NULL;

END;
*/

FUNCTION CC_MANAGER(
    IN_COST_CENTER_CODE EMPLOYEE_DETAILS.COST_CENTER_CODE%TYPE)
    RETURN VARCHAR2
IS 
V_CC_MANAGER EMPLOYEE_DETAILS.EMPLOYEE_NAME%TYPE;

BEGIN 
SELECT EMPLOYEE_NAME INTO V_CC_MANAGER
FROM EMPLOYEE_DETAILS 
WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
AND JOB_TITLE = 'STORE MGR'
and EMP_PAYROLL_STATUS = 'A';

 RETURN V_CC_MANAGER;
 EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;

END;

FUNCTION GET_MANAGER_NAME(
   IN_IND in VARCHAR2,
   IN_HRCHY_DTL_PREV_LVL_VAL IN HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE
  )
      RETURN VARCHAR2
IS
    V_MANAGER_NAME VARCHAR2(100); -- EMPLOYEE_DETAILS.EMPLOYEE_NAME%TYPE;
    
BEGIN
IF IN_IND = 'AREA_MGR' THEN
  SELECT DISTINCT EMPLOYEE_NAME
  INTO V_MANAGER_NAME
  FROM EMPLOYEE_DETAILS,
    HIERARCHY_DETAIL
  WHERE SUBSTR(SD_REPORT_PKG.GET_RQSTD_ATTRIBUTE_VALUE(UPPER_LVL_VER_VALUE,'MANAGERNAME'),2) = EMPLOYEE_NUMBER
  AND HRCHY_HDR_NAME                                                           = 'ADMIN_TO_SALES_AREA'
  AND SUBSTR(HRCHY_DTL_PREV_LVL_VAL,5,4)                                       = IN_HRCHY_DTL_PREV_LVL_VAL;
elsif IN_IND = 'DIST_MGR' THEN
  SELECT DISTINCT EMPLOYEE_NAME
  INTO V_MANAGER_NAME
  FROM EMPLOYEE_DETAILS,
    HIERARCHY_DETAIL
  WHERE SUBSTR(SD_REPORT_PKG.GET_RQSTD_ATTRIBUTE_VALUE(UPPER_LVL_VER_VALUE,'MANAGERNAME'),2) = EMPLOYEE_NUMBER
  AND HRCHY_HDR_NAME                                                           = 'ADMIN_TO_SALES_DISTRICT'
  AND SUBSTR(HRCHY_DTL_PREV_LVL_VAL,5,6)                                       = IN_HRCHY_DTL_PREV_LVL_VAL;
elsif IN_IND = 'DIV_MGR' THEN
  SELECT DISTINCT EMPLOYEE_NAME
  INTO V_MANAGER_NAME
  FROM EMPLOYEE_DETAILS,
    HIERARCHY_DETAIL
  WHERE SUBSTR(SD_REPORT_PKG.GET_RQSTD_ATTRIBUTE_VALUE(UPPER_LVL_VER_VALUE,'MANAGERNAME'),2) = EMPLOYEE_NUMBER
  AND HRCHY_HDR_NAME                                                           = 'ADMIN_TO_SALES_DIVISION'
  AND SUBSTR(HRCHY_DTL_PREV_LVL_VAL,5,2)                                       = IN_HRCHY_DTL_PREV_LVL_VAL;
ELSE
  NULL;
END IF;
 
 RETURN V_MANAGER_NAME;

EXCEPTION
  WHEN OTHERS THEN
  RETURN NULL;

END;

END SD_REPORT_PKG;