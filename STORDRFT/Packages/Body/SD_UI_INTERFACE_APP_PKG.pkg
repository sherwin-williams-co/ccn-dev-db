create or replace PACKAGE BODY          SD_UI_INTERFACE_APP_PKG
AS
/**********************************************************
	SD_UI_INTERFACE_APP_PKG

	This Package is intended to be the wrapper for all Store draft
  related packages that are invoked from UI

created : 05/02/2013 jxc517 CCN Project....
changed :
**********************************************************/
FUNCTION EXTRACT_TABLE_CLOB (
/*******************************************************************************
	EXTRACT_TABLE_CLOB

	This procedure will extract the required clob from passed XML clob
  and sends back the result as clob

Created : 05/07/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB) RETURN CLOB
IS
BEGIN

    RETURN SYS.XMLTYPE(IN_ROW_DATA).EXTRACT('/' || IN_TABLE_NAME ||'_UI_SP/'|| IN_TABLE_NAME).getCLOBVal();

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END EXTRACT_TABLE_CLOB;

PROCEDURE CUSTOMER_FORM_OF_PAY_UI_SP (
/*******************************************************************************
	CUSTOMER_FORM_OF_PAY_UI_SP

	This procedure is intended to RETURN a ref cursor with data from CUSTOMER_FORM_OF_PAY table

<CUSTOMER_FORM_OF_PAY_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
   <CUSTOMER_FORM_OF_PAY>
    <COST_CENTER_CODE>702345</COST_CENTER_CODE>
    <TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
    <TERMINAL_NUMBER>12345</TERMINAL_NUMBER>
    <TRANSACTION_NUMBER>12345</TRANSACTION_NUMBER>
    <SEGMENT_CODE>12</SEGMENT_CODE>
  	<SUB_SEGMENT_CODE>12</SUB_SEGMENT_CODE>
    </CUSTOMER_FORM_OF_PAY>
 </CUSTOMER_FORM_OF_PAY_UI_SP>

Created : 05/20/2014 nxk927 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_TABLE_IU_PKG.CUSTOMER_FORM_OF_PAY_S_SP(IN_TABLE_NAME,
                                              EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                              OUT_REF_CUR);

END CUSTOMER_FORM_OF_PAY_UI_SP;

PROCEDURE CUSTOMER_BANK_CARD_UI_SP (
/*******************************************************************************
	CUSTOMER_BANK_CARD_UI_SP

	This procedure is intended to RETURN a ref cursor with data from CUSTOMER_BANK_CARD table

<CUSTOMER_BANK_CARD_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
  <CUSTOMER_BANK_CARD>
		<COST_CENTER_CODE>701221</COST_CENTER_CODE>
    <CUSTOMER_BANK_CARD_ID>436245</CUSTOMER_BANK_CARD_ID>
		<TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
		<TERMINAL_NUMBER>15767</TERMINAL_NUMBER>
		<TRANSACTION_NUMBER>16086</TRANSACTION_NUMBER>
		<SEGMENT_CODE>07</SEGMENT_CODE>
		<SUB_SEGMENT_CODE>12</SUB_SEGMENT_CODE>
		</CUSTOMER_BANK_CARD>
 </CUSTOMER_BANK_CARD_UI_SP>

Created : 05/20/2014 nxk927 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_TABLE_IU_PKG.CUSTOMER_BANK_CARD_S_SP(IN_TABLE_NAME,
                                             EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                            OUT_REF_CUR);
   
END CUSTOMER_BANK_CARD_UI_SP;

PROCEDURE CUSTOMER_DETAILS_UI_SP (
/*******************************************************************************
	CUSTOMER_DETAILS_UI_SP

	This procedure is intended to RETURN a ref cursor with data from CUSTOMER_DETAILS table

<CUSTOMER_DETAILS_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
 	<CUSTOMER_DETAILS>
    <CUSTOMER_DETAIL_ID>436236</CUSTOMER_DETAIL_ID>
		<COST_CENTER_CODE>701030</COST_CENTER_CODE>
		<TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
		<TERMINAL_NUMBER>10232</TERMINAL_NUMBER>
		<TRANSACTION_NUMBER>07713</TRANSACTION_NUMBER>
		<SEGMENT_CODE>01</SEGMENT_CODE>
		<SALES_NUMBER>005849542</SALES_NUMBER>
  	</CUSTOMER_DETAILS>
 </CUSTOMER_DETAILS_UI_SP>

Created : 05/20/2014 nxk927 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

     SD_TABLE_IU_PKG.CUSTOMER_DETAILS_S_SP(IN_TABLE_NAME,
                                            EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                           OUT_REF_CUR);

END CUSTOMER_DETAILS_UI_SP;

PROCEDURE STORE_DRAFTS_UI_SP (
/*******************************************************************************
	STORE_DRAFTS_UI_SP

	This procedure is intended to RETURN a ref cursor with data from STORE_DRAFTS table

<STORE_DRAFTS_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
 <STORE_DRAFTS>
  <STORE_DRAFT_INDICATOR>NONE/PAID/VOID/STOP/OPEN/MNL_DRFT</STORE_DRAFT_INDICATOR>
  <COST_CENTER_CODE>701030</COST_CENTER_CODE>
  <CHECK_SERIAL_NUMBER>0103032009</CHECK_SERIAL_NUMBER>
  <CHECK_RANGE_START>0103032009</CHECK_RANGE_START>
  <CHECK_RANGE_END>0103032124</CHECK_RANGE_END>
  <TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
  <TRANSACTION_DATE_START>03-30-2012</TRANSACTION_DATE_START>
  <TRANSACTION_DATE_END>05-18-2012</TRANSACTION_DATE_END>
  <PAID_DATE_START>03-30-2012</PAID_DATE_START>
  <PAID_DATE_END>05-18-2012</PAID_DATE_END>
  <ISSUE_DATE_START>03-30-2012</ISSUE_DATE_START>
  <ISSUE_DATE_END>05-18-2012</ISSUE_DATE_END>
 </STORE_DRAFTS>
</<STORE_DRAFTS_UI_SP>

Created : 05/20/2014 nxk927 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_TABLE_IU_PKG.STORE_DRAFTS_S_SP(IN_TABLE_NAME,
                                       EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                      OUT_REF_CUR);
   
END STORE_DRAFTS_UI_SP;

PROCEDURE STORE_DRAFTS_FILTER_UI_SP (
/*******************************************************************************
	STORE_DRAFTS_FILTER_UI_SP

	This procedure is intended to select records from STORE_DRAFTS & UNATTACHED_MNL_DRFT_DTL table
  with all fields part of the filtering

<STORE_DRAFTS_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
 <STORE_DRAFTS>
  <STORE_DRAFT_INDICATOR>NONE/PAID/VOID/STOP/OPEN/MNL_DRFT</STORE_DRAFT_INDICATOR>
  <COST_CENTER_CODE>701030</COST_CENTER_CODE>
  <CHECK_SERIAL_NUMBER>0103032009</CHECK_SERIAL_NUMBER>
  <CHECK_RANGE_START>0103032009</CHECK_RANGE_START>
  <CHECK_RANGE_END>0103032124</CHECK_RANGE_END>
  <TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
  <TRANSACTION_DATE_START>03-30-2012</TRANSACTION_DATE_START>
  <TRANSACTION_DATE_END>05-18-2012</TRANSACTION_DATE_END>
  <PAID_DATE_START>03-30-2012</PAID_DATE_START>
  <PAID_DATE_END>05-18-2012</PAID_DATE_END>
  <ISSUE_DATE_START>03-30-2012</ISSUE_DATE_START>
  <ISSUE_DATE_END>05-18-2012</ISSUE_DATE_END>
  <TRANSACTION_CODE>13,19,31,82,94,98</TRANSACTION_CODE>
 </STORE_DRAFTS>
 <STORE_DRAFTS>
  <STORE_DRAFT_INDICATOR>NONE/PAID/VOID/STOP/OPEN/MNL_DRFT</STORE_DRAFT_INDICATOR>
  <COST_CENTER_CODE>701030</COST_CENTER_CODE>
  <CHECK_SERIAL_NUMBER>0103032009</CHECK_SERIAL_NUMBER>
  <CHECK_RANGE_START>0103032009</CHECK_RANGE_START>
  <CHECK_RANGE_END>0103032124</CHECK_RANGE_END>
  <TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
  <TRANSACTION_DATE_START>03-30-2012</TRANSACTION_DATE_START>
  <TRANSACTION_DATE_END>05-18-2012</TRANSACTION_DATE_END>
  <PAID_DATE_START>03-30-2012</PAID_DATE_START>
  <PAID_DATE_END>05-18-2012</PAID_DATE_END>
  <ISSUE_DATE_START>03-30-2012</ISSUE_DATE_START>
  <ISSUE_DATE_END>05-18-2012</ISSUE_DATE_END>
  <TRANSACTION_CODE>13,19,31,82,94,98</TRANSACTION_CODE>
 </STORE_DRAFTS>
 </<STORE_DRAFTS_UI_SP>

Created : 10/27/2014 jxc517 CCN Project....
Changed : 03/04/2015 jxc517 CCN Project....
          Modified code to handle multiple filters at the same time and return
          the concatenated result set along with the total records count
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
    V_XML   XMLTYPE := SYS.XMLTYPE(IN_ROW_DATA).EXTRACT('/' || IN_TABLE_NAME ||'_UI_SP');
    V_COUNT            NUMBER := 1; --this variable is used for 
    V_FILTER_TABLE_CNT NUMBER := 0; --this variable is used as the object table items count
    V_SD_FILTER_TABLE  SD_FILTER_TABLE_TYPE := SD_FILTER_TABLE_TYPE();
BEGIN
    --Loop through all the iterations as provided in the input XML
    WHILE V_XML.EXISTSNODE('//'||IN_TABLE_NAME||'[' || V_COUNT || ']') = 1 LOOP
        OUT_REF_CUR := NULL;
        --For each iteration, execute the query and get the result into ref cursor
        SD_UI_REPORTS_PKG.STORE_DRAFTS_FILTER_S_SP(IN_TABLE_NAME,
                                                   V_XML.EXTRACT('//'||IN_TABLE_NAME||'[' || V_COUNT || ']').GETCLOBVAL(),
                                                   OUT_REF_CUR);
        V_COUNT := V_COUNT + 1;
        --Populate the same into object table type from ref cursor
        SD_UI_REPORTS_PKG.LOAD_FILTER_TABLE(OUT_REF_CUR,        --IN
                                            V_FILTER_TABLE_CNT, --IN/OUT as the count is needed for next iteration
                                            V_SD_FILTER_TABLE); --IN/OUT as the object keeps on getting extended by ref cursor results
    END LOOP;
    --finally return the result of the object as a ref cursor to UI along with the overall records count
    OPEN OUT_REF_CUR FOR SELECT COUNT(*) OVER () RESULT_COUNT, A.* FROM TABLE(V_SD_FILTER_TABLE) A;
END STORE_DRAFTS_FILTER_UI_SP;

PROCEDURE STORE_DRAFTS_DETAIL_UI_SP (
/*******************************************************************************
	STORE_DRAFTS_DETAIL_UI_SP

	This procedure is intended to RETURN a ref cursor with data from STORE_DRAFTS_DETAIL table

<STORE_DRAFTS_DETAIL_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
 <STORE_DRAFTS_DETAIL>
  <STORE_DRAFTS_DETAIL_ID>436223</STORE_DRAFTS_DETAIL_ID>
  <COST_CENTER_CODE>701021</COST_CENTER_CODE>
  <CHECK_SERIAL_NUMBER>0102129509</CHECK_SERIAL_NUMBER>
  <TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
 </STORE_DRAFTS_DETAIL>
</<STORE_DRAFTS_DETAIL_UI_SP>

Created : 05/20/2014 nxk927 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_TABLE_IU_PKG.STORE_DRAFTS_DETAIL_S_SP(IN_TABLE_NAME,
                                             EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                             OUT_REF_CUR);
   
END STORE_DRAFTS_DETAIL_UI_SP;

PROCEDURE STORE_DRAFTS_DTL_FILTER_UI_SP (
/*******************************************************************************
	STORE_DRAFTS_DTL_FILTER_UI_SP

	This procedure is intended to RETURN a ref cursor with data from STORE_DRAFTS_DETAIL table

<?xml version="1.0" encoding="UTF-8" ?>
<STORE_DRAFTS_DETAIL_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
<STORE_DRAFTS_DETAIL>
<STORE_DRAFTS_DETAIL_ID>XXXXXXXXXXXXXXXXXXXXXX</STORE_DRAFTS_DETAIL_ID>
<COST_CENTER_CODE>XXXXXXXXXXXXXXXXXXXXXXXX</COST_CENTER_CODE>
<CHECK_SERIAL_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CHECK_SERIAL_NUMBER>
  <TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
  <TRANSACTION_DATE_START>03-30-2012</TRANSACTION_DATE_START>
<TERMINAL_NUMBER>XXXXXXXXXXXXXXXXXXXX</TERMINAL_NUMBER>
<TRANSACTION_NUMBER>XXXXXXXXXXXXXXXXXXXX</TRANSACTION_NUMBER>
<CUSTOMER_ACCOUNT_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CUSTOMER_ACCOUNT_NUMBER>
<CUSTOMER_JOB_NUMBER>XXXXXXXX</CUSTOMER_JOB_NUMBER>
<GL_PRIME_ACCOUNT_NUMBER>XXXXXXXXXXXXXXXX</GL_PRIME_ACCOUNT_NUMBER>
<GL_SUB_ACCOUNT_NUMBER>XXXXXXXXXXXX</GL_SUB_ACCOUNT_NUMBER>
<ITEM_QUANTITY>XXXXXXXXXXXXXXXXXXXXXX</ITEM_QUANTITY>
<ITEM_PRICE>XXXXXXXXXXXXXXXXXXXXXX</ITEM_PRICE>
<ITEM_EXT_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</ITEM_EXT_AMOUNT>
<BOOK_DATE_SEQUENCE>XXXXXXXXXXXXXXXXXXXX</BOOK_DATE_SEQUENCE>
<LBR_TRANSACTION_DATE>MM-DD-RRRR</LBR_TRANSACTION_DATE>
<LBR_TERMINAL_NUMBER>XXXXXXXXXXXXXXXXXXXX</LBR_TERMINAL_NUMBER>
<LBR_TRANSACTION_NUMBER>XXXXXXXXXXXXXXXXXXXX</LBR_TRANSACTION_NUMBER>
</STORE_DRAFTS_DETAIL>
</STORE_DRAFTS_DETAIL_UI_SP>

Created : 11/03/2014 nxk927 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_UI_REPORTS_PKG.STORE_DRAFTS_DTL_FILTER_S_SP(IN_TABLE_NAME,
                                                   EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                                   OUT_REF_CUR);
   
END STORE_DRAFTS_DTL_FILTER_UI_SP;

PROCEDURE CUSTOMER_UI_SP (
/*******************************************************************************
    CUSTOMER_UI_SP

    This procedure is intended to RETURN a ref cursor with data from CUSTOMER table

<CUSTOMER_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
 <CUSTOMER>
  <COST_CENTER_CODE>701030</COST_CENTER_CODE>
  <TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
  <TRANSACTION_DATE_START>03-30-2012</TRANSACTION_DATE_START> 
  <TRANSACTION_DATE_END>05-18-2012</TRANSACTION_DATE_END>
  <TERMINAL_NUMBER>10232</TERMINAL_NUMBER>
  <TRANSACTION_NUMBER>95239</TRANSACTION_NUMBER>
  <ISSUE_DATE_START>03-30-2012</ISSUE_DATE_START>
  <ISSUE_DATE_END>05-18-2012</ISSUE_DATE_END>
 </CUSTOMER>
</<CUSTOMER_UI_SP>

Created : 05/22/2014 nxk927 CCN Project....
Changed : 06/16/2014 AXK326/SXT410 Added new filters(Transaction data filter tag
          and Issue date filter tag).
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_TABLE_IU_PKG.CUSTOMER_S_SP(IN_TABLE_NAME,
                                   EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                  OUT_REF_CUR);

END CUSTOMER_UI_SP;

PROCEDURE UNATTACHED_MNL_DRFT_DTL_UI_SP (
/*******************************************************************************
	UNATTACHED_MNL_DRFT_DTL_UI_SP

	This procedure is intended to RETURN a ref cursor with data from UNATTACHED_MNL_DRFT_DTL table

<UNATTACHED_MNL_DRFT_DTL_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
 <UNATTACHED_MNL_DRFT_DTL>
  <COST_CENTER_CODE>701030</COST_CENTER_CODE>
  <CHECK_SERIAL_NUMBER>0103032009</CHECK_SERIAL_NUMBER>
  <TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
  <TERMINAL_NUMBER>10232</TERMINAL_NUMBER>
 </UNATTACHED_MNL_DRFT_DTL>
</<UNATTACHED_MNL_DRFT_DTL_UI_SP>

Created : 05/20/2014 nxk927 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_TABLE_IU_PKG.UNATTACHED_MNL_DRFT_DTL_S_SP(IN_TABLE_NAME,
                                                  EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                                 OUT_REF_CUR);

END UNATTACHED_MNL_DRFT_DTL_UI_SP;

PROCEDURE CUSTOMER_SALES_TAX_UI_SP (
/*******************************************************************************
	CUSTOMER_SALES_TAX_UI_SP

	This procedure is intended to RETURN a ref cursor with data from CUSTOMER_SALES_TAX table

<CUSTOMER_SALES_TAX_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
 <CUSTOMER_SALES_TAX>
  <CUSTOMER_SALES_TAX_ID>45646</CUSTOMER_SALES_TAX_ID>
  <COST_CENTER_CODE>701030</COST_CENTER_CODE>
  <TRANSACTION_DATE>03-30-2012</TRANSACTION_DATE>
  <TERMINAL_NUMBER>10232</TERMINAL_NUMBER>
  <TRANSACTION_NUMBER>95239</TRANSACTION_NUMBER>
 </CUSTOMER_SALES_TAX>
</<CUSTOMER_SALES_TAX_UI_SP>

Created : 05/20/2014 nxk927 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_TABLE_IU_PKG.CUSTOMER_SALES_TAX_S_SP(IN_TABLE_NAME,
                                             EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                            OUT_REF_CUR);
    
END CUSTOMER_SALES_TAX_UI_SP;

PROCEDURE HST_STORE_DRAFTS_UI_SP (
/*******************************************************************************
	HST_STORE_DRAFTS_UI_SP

	This procedure is intended to select records from HST_STORE_DRAFTS table

<?xml version="1.0" encoding="UTF-8" ?>
<HST_STORE_DRAFTS_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
<HST_STORE_DRAFTS>
<STORE_DRAFT_INDICATOR>NONE/PAID/VOID/STOP/OPEN</STORE_DRAFT_INDICATOR>
<COST_CENTER_CODE>XXXXXXXXXXXXXXXXXXXXXXXX</COST_CENTER_CODE>
<CHECK_SERIAL_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CHECK_SERIAL_NUMBER>
<TRANSACTION_DATE>MM-DD-RRRR</TRANSACTION_DATE>
<TERMINAL_NUMBER>XXXXXXXXXXXXXXXXXXXX</TERMINAL_NUMBER>
<TRANSACTION_NUMBER>XXXXXXXXXXXXXXXXXXXX</TRANSACTION_NUMBER>
<CUSTOMER_ACCOUNT_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CUSTOMER_ACCOUNT_NUMBER>
<CUSTOMER_JOB_NUMBER>XXXXXXXX</CUSTOMER_JOB_NUMBER>
<POS_TRANSACTION_CODE>XXXXXXXX</POS_TRANSACTION_CODE>
<POS_TRANSACTION_TIME>XXXXXXXXXXXXXXXX</POS_TRANSACTION_TIME>
<BANK_NUMBER>XXXXXXXXXXXX</BANK_NUMBER>
<BANK_ACCOUNT_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</BANK_ACCOUNT_NUMBER>
<BANK_REFERENCE>XXXXXXXXXXXXXXXXXXXXXXXX</BANK_REFERENCE>
<PAYEE_NAME>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</PAYEE_NAME>
<ADDRESS_LINE_1>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</ADDRESS_LINE_1>
<ADDRESS_LINE_2>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</ADDRESS_LINE_2>
<CITY>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CITY>
<STATE_CODE>XXXXXXXX</STATE_CODE>
<ZIP_CODE_PREFIX>XXXXXXXXXXXXXXXXXXXXXXXX</ZIP_CODE_PREFIX>
<ZIP_CODE_SUFFIX>XXXXXXXXXXXXXXXX</ZIP_CODE_SUFFIX>
<PHONE_AREA_CODE>XXXXXXXXXXXX</PHONE_AREA_CODE>
<PHONE_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXX</PHONE_NUMBER>
<EMPLOYEE_NUMBER>XXXXXXXX</EMPLOYEE_NUMBER>
<ISSUE_DATE>MM-DD-RRRR</ISSUE_DATE>
<PAID_DATE>MM-DD-RRRR</PAID_DATE>
<STOP_PAY_DATE>MM-DD-RRRR</STOP_PAY_DATE>
<STOP_PAY_REMOVE_DATE>MM-DD-RRRR</STOP_PAY_REMOVE_DATE>
<VOID_DATE>MM-DD-RRRR</VOID_DATE>
<AMOUNT_CHANGE_DATE>MM-DD-RRRR</AMOUNT_CHANGE_DATE>
<GROSS_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</GROSS_AMOUNT>
<RETAIN_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</RETAIN_AMOUNT>
<NET_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</NET_AMOUNT>
<ORIGINAL_NET_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</ORIGINAL_NET_AMOUNT>
<BANK_PAID_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</BANK_PAID_AMOUNT>
<TRANSACTION_SOURCE>XXXX</TRANSACTION_SOURCE>
<CHANGE_DATE>MM-DD-RRRR</CHANGE_DATE>
<CHANGE_SOURCE>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CHANGE_SOURCE>
<SLS_BOOK_DATE>XXXXXXXXXXXXXXXX</SLS_BOOK_DATE>
<CYCLE_RUN_NUMBER>XXXXXXXX</CYCLE_RUN_NUMBER>
<BOOK_DATE_SEQUENCE>XXXXXXXXXXXXXXXXXXXX</BOOK_DATE_SEQUENCE>
<REASON_CODE>XXXXXXXX</REASON_CODE>
<DRAFT_NUMBER>XXXXXXXXXXXXXXXX</DRAFT_NUMBER>
<VOID_INDICATOR>X</VOID_INDICATOR>
<PAY_INDICATOR>X</PAY_INDICATOR>
<STOP_INDICATOR>X</STOP_INDICATOR>
<OPEN_INDICATOR>X</OPEN_INDICATOR>
</HST_STORE_DRAFTS>
</HST_STORE_DRAFTS_UI_SP>

Created : 09/16/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_TABLE_IU_PKG.HST_STORE_DRAFTS_S_SP(IN_TABLE_NAME,
                                          EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                          OUT_REF_CUR);

END HST_STORE_DRAFTS_UI_SP;

PROCEDURE HST_STORE_DRAFTS_DETAIL_UI_SP (
/*******************************************************************************
	HST_STORE_DRAFTS_DETAIL_UI_SP

	This procedure is intended to select records from HST_STORE_DRAFTS_DETAIL table

<?xml version="1.0" encoding="UTF-8" ?>
<HST_STORE_DRAFTS_DETAIL_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
<HST_STORE_DRAFTS_DETAIL>
<STORE_DRAFTS_DETAIL_ID>XXXXXXXXXXXXXXXXXXXXXX</STORE_DRAFTS_DETAIL_ID>
<COST_CENTER_CODE>XXXXXXXXXXXXXXXXXXXXXXXX</COST_CENTER_CODE>
<CHECK_SERIAL_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CHECK_SERIAL_NUMBER>
<TRANSACTION_DATE>MM-DD-RRRR</TRANSACTION_DATE>
<TERMINAL_NUMBER>XXXXXXXXXXXXXXXXXXXX</TERMINAL_NUMBER>
<TRANSACTION_NUMBER>XXXXXXXXXXXXXXXXXXXX</TRANSACTION_NUMBER>
<CUSTOMER_ACCOUNT_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CUSTOMER_ACCOUNT_NUMBER>
<CUSTOMER_JOB_NUMBER>XXXXXXXX</CUSTOMER_JOB_NUMBER>
<GL_PRIME_ACCOUNT_NUMBER>XXXXXXXXXXXXXXXX</GL_PRIME_ACCOUNT_NUMBER>
<GL_SUB_ACCOUNT_NUMBER>XXXXXXXXXXXX</GL_SUB_ACCOUNT_NUMBER>
<ITEM_QUANTITY>XXXXXXXXXXXXXXXXXXXXXX</ITEM_QUANTITY>
<ITEM_PRICE>XXXXXXXXXXXXXXXXXXXXXX</ITEM_PRICE>
<ITEM_EXT_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</ITEM_EXT_AMOUNT>
<BOOK_DATE_SEQUENCE>XXXXXXXXXXXXXXXXXXXX</BOOK_DATE_SEQUENCE>
<LBR_TRANSACTION_DATE>MM-DD-RRRR</LBR_TRANSACTION_DATE>
<LBR_TERMINAL_NUMBER>XXXXXXXXXXXXXXXXXXXX</LBR_TERMINAL_NUMBER>
<LBR_TRANSACTION_NUMBER>XXXXXXXXXXXXXXXXXXXX</LBR_TRANSACTION_NUMBER>
</HST_STORE_DRAFTS_DETAIL>
</HST_STORE_DRAFTS_DETAIL_UI_SP>

Created : 09/16/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_TABLE_IU_PKG.HST_STORE_DRAFTS_DETAIL_S_SP(IN_TABLE_NAME,
                                                 EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                                 OUT_REF_CUR);

END HST_STORE_DRAFTS_DETAIL_UI_SP;

PROCEDURE SD_BANK_FILE_SENT_DTLS_UI_SP (
/*******************************************************************************
	SD_BANK_FILE_SENT_DTLS_UI_SP

	This procedure is intended to select records from SD_BANK_FILE_SENT_DETAILS table

<?xml version="1.0" encoding="UTF-8" ?>
<SD_BANK_FILE_SENT_DETAILS_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
<SD_BANK_FILE_SENT_DETAILS>
<COST_CENTER_CODE>XXXXXX</COST_CENTER_CODE>
<CHECK_SERIAL_NUMBER>XXXXXXXXXX</CHECK_SERIAL_NUMBER>
<PROCESS_DATE>MM-DD-RRRR</PROCESS_DATE>
<SENT_DATE>MM-DD-RRRR</SENT_DATE>
</SD_BANK_FILE_SENT_DETAILS>
</SD_BANK_FILE_SENT_DETAILS_UI_SP>

Created : 09/22/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB
,OUT_REF_CUR     OUT REF_CURSOR)
IS
BEGIN

    SD_BANK_FILE_SENT_DETAILS_PKG.SD_BANK_FILE_SENT_DETAILS_S_SP(IN_TABLE_NAME,
                                                                 EXTRACT_TABLE_CLOB(IN_TABLE_NAME,IN_ROW_DATA),
                                                                 OUT_REF_CUR);

END SD_BANK_FILE_SENT_DTLS_UI_SP;

PROCEDURE STORE_DRAFTS_UI_UPSERT (
/*******************************************************************************
	STORE_DRAFTS_UI_UPSERT

	This procedure is intended to INSERT/UPDATE data in STORE_DRAFTS table

Created : 07/02/2014 jxc517 CCN Project....
Changed : 10/21/2014 jxc517 CCN Project....
          Modified to support multiple records

<?xml version="1.0" encoding="UTF-8" ?>
<STORE_DRAFTS_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
<STORE_DRAFTS>
<COST_CENTER_CODE>XXXXXXXXXXXXXXXXXXXXXXXX</COST_CENTER_CODE>
<CHECK_SERIAL_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CHECK_SERIAL_NUMBER>
<TRANSACTION_DATE>MM-DD-RRRR</TRANSACTION_DATE>
<TERMINAL_NUMBER>XXXXXXXXXXXXXXXXXXXX</TERMINAL_NUMBER>
<TRANSACTION_NUMBER>XXXXXXXXXXXXXXXXXXXX</TRANSACTION_NUMBER>
<CUSTOMER_ACCOUNT_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CUSTOMER_ACCOUNT_NUMBER>
<CUSTOMER_JOB_NUMBER>XXXXXXXX</CUSTOMER_JOB_NUMBER>
<POS_TRANSACTION_CODE>XXXXXXXX</POS_TRANSACTION_CODE>
<POS_TRANSACTION_TIME>XXXXXXXXXXXXXXXX</POS_TRANSACTION_TIME>
<BANK_NUMBER>XXXXXXXXXXXX</BANK_NUMBER>
<BANK_ACCOUNT_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</BANK_ACCOUNT_NUMBER>
<BANK_REFERENCE>XXXXXXXXXXXXXXXXXXXXXXXX</BANK_REFERENCE>
<PAYEE_NAME>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</PAYEE_NAME>
<ADDRESS_LINE_1>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</ADDRESS_LINE_1>
<ADDRESS_LINE_2>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</ADDRESS_LINE_2>
<CITY>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CITY>
<STATE_CODE>XXXXXXXX</STATE_CODE>
<ZIP_CODE_PREFIX>XXXXXXXXXXXXXXXXXXXXXXXX</ZIP_CODE_PREFIX>
<ZIP_CODE_SUFFIX>XXXXXXXXXXXXXXXX</ZIP_CODE_SUFFIX>
<PHONE_AREA_CODE>XXXXXXXXXXXX</PHONE_AREA_CODE>
<PHONE_NUMBER>XXXXXXXXXXXXXXXXXXXXXXXXXXXX</PHONE_NUMBER>
<EMPLOYEE_NUMBER>XXXXXXXX</EMPLOYEE_NUMBER>
<ISSUE_DATE>MM-DD-RRRR</ISSUE_DATE>
<PAID_DATE>MM-DD-RRRR</PAID_DATE>
<STOP_PAY_DATE>MM-DD-RRRR</STOP_PAY_DATE>
<STOP_PAY_REMOVE_DATE>MM-DD-RRRR</STOP_PAY_REMOVE_DATE>
<VOID_DATE>MM-DD-RRRR</VOID_DATE>
<AMOUNT_CHANGE_DATE>MM-DD-RRRR</AMOUNT_CHANGE_DATE>
<GROSS_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</GROSS_AMOUNT>
<RETAIN_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</RETAIN_AMOUNT>
<NET_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</NET_AMOUNT>
<ORIGINAL_NET_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</ORIGINAL_NET_AMOUNT>
<BANK_PAID_AMOUNT>XXXXXXXXXXXXXXXXXXXXXX</BANK_PAID_AMOUNT>
<TRANSACTION_SOURCE>XXXX</TRANSACTION_SOURCE>
<CHANGE_DATE>MM-DD-RRRR</CHANGE_DATE>
<CHANGE_SOURCE>XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</CHANGE_SOURCE>
<SLS_BOOK_DATE>XXXXXXXXXXXXXXXX</SLS_BOOK_DATE>
<CYCLE_RUN_NUMBER>XXXXXXXX</CYCLE_RUN_NUMBER>
<BOOK_DATE_SEQUENCE>XXXXXXXXXXXXXXXXXXXX</BOOK_DATE_SEQUENCE>
<REASON_CODE>XXXXXXXX</REASON_CODE>
<DRAFT_NUMBER>XXXXXXXXXXXXXXXX</DRAFT_NUMBER>
<VOID_INDICATOR>X</VOID_INDICATOR>
<PAY_INDICATOR>X</PAY_INDICATOR>
<STOP_INDICATOR>X</STOP_INDICATOR>
<OPEN_INDICATOR>X</OPEN_INDICATOR>
</STORE_DRAFTS>
</STORE_DRAFTS_UI_SP>

*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB)
IS
    V_UPSERT_INDICATOR    VARCHAR2(1);
    V_CHECK_SERIAL_NUMBER STORE_DRAFTS.CHECK_SERIAL_NUMBER%TYPE;
    V_STORE_DRAFTS_REC    STORE_DRAFTS%ROWTYPE;
    V_XML                 XMLTYPE := SYS.XMLTYPE(IN_ROW_DATA).EXTRACT('/' || IN_TABLE_NAME ||'_UI_SP');
    V_COUNT               NUMBER := 1;
BEGIN
    WHILE V_XML.EXISTSNODE('//'||IN_TABLE_NAME||'[' || V_COUNT || ']') = 1 LOOP
        --Take care of inserting the details into SD_BANK_FILE_SENT_DETAILS table
        SD_TABLE_IU_PKG.STORE_DRAFTS_ROWTYPE_SP(IN_TABLE_NAME,
                                                V_XML.EXTRACT('//'||IN_TABLE_NAME||'[' || V_COUNT || ']').GETCLOBVAL(),
                                                V_STORE_DRAFTS_REC);

        IF V_XML.EXISTSNODE('//'||IN_TABLE_NAME||'[' || V_COUNT || ']/UPSERT_INDICATOR/text()') = 1 THEN
            V_UPSERT_INDICATOR   := UPPER(V_XML.EXTRACT('//'||IN_TABLE_NAME||'[' || V_COUNT || ']/UPSERT_INDICATOR/text()').GETSTRINGVAL());
        END IF;
        IF NVL(V_UPSERT_INDICATOR,'U') = 'I' THEN
            SD_BUSINESS_RULES_PKG.UNATTACHED_MNL_DRFT_DTL_SP(V_STORE_DRAFTS_REC); --business rules
            V_CHECK_SERIAL_NUMBER := SD_BUSINESS_RULES_PKG.GET_CHECK_SERIAL_NUMBER(V_STORE_DRAFTS_REC.COST_CENTER_CODE,
                                                                                   V_STORE_DRAFTS_REC.CHECK_SERIAL_NUMBER);
            SD_BUSINESS_RULES_PKG.DUPLICATE_STORE_DRAFTS_SP(V_CHECK_SERIAL_NUMBER); --business rules
        ELSE
            V_CHECK_SERIAL_NUMBER := V_STORE_DRAFTS_REC.CHECK_SERIAL_NUMBER;
            SD_BUSINESS_RULES_PKG.STORE_DRAFTS_SP(V_STORE_DRAFTS_REC); --business rules
        END IF;

        SD_BUSINESS_RULES_PKG.SD_BANK_FILE_SENT_DETAILS_SP(V_STORE_DRAFTS_REC.COST_CENTER_CODE,
                                                           V_CHECK_SERIAL_NUMBER); --business rules

        SD_TABLE_IU_PKG.STORE_DRAFTS_I_SP(IN_TABLE_NAME,
                                          V_XML.EXTRACT('//'||IN_TABLE_NAME||'[' || V_COUNT || ']').GETCLOBVAL());

        SD_BANK_FILE_SENT_DETAILS_PKG.SD_BANK_FILE_SENT_DETAILS_I_SP('SD_BANK_FILE_SENT_DETAILS',
                                                                     '<SD_BANK_FILE_SENT_DETAILS>'||
                                                                     '<COST_CENTER_CODE>'||V_STORE_DRAFTS_REC.COST_CENTER_CODE||'</COST_CENTER_CODE>'||
                                                                     '<CHECK_SERIAL_NUMBER>'||V_CHECK_SERIAL_NUMBER||'</CHECK_SERIAL_NUMBER>'||
                                                                     '<SEND_INDICATOR>Y</SEND_INDICATOR>'||
                                                                     '</SD_BANK_FILE_SENT_DETAILS>');
        V_COUNT := V_COUNT + 1;
    END LOOP;

   --Below call will check if there are any warnings and raise those from here
   ERRPKG.RAISE_WARNINGS();
   

END STORE_DRAFTS_UI_UPSERT;

PROCEDURE SD_BANK_FILE_SNT_DTL_UI_UPSERT (
/*******************************************************************************
	SD_BANK_FILE_SNT_DTL_UI_UPSERT

	This procedure is intended to INSERT/UPDATE data in SD_BANK_FILE_SENT_DETAILS table

<?xml version="1.0" encoding="UTF-8" ?>
<SD_BANK_FILE_SENT_DETAILS_UI_SP xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">
<SD_BANK_FILE_SENT_DETAILS>
<COST_CENTER_CODE>XXXXXX</COST_CENTER_CODE>
<CHECK_SERIAL_NUMBER>XXXXXXXXXX</CHECK_SERIAL_NUMBER>
<PROCESS_DATE>MM-DD-RRRR</PROCESS_DATE>
<SEND_INDICATOR>X</SEND_INDICATOR>
</SD_BANK_FILE_SENT_DETAILS>
<SD_BANK_FILE_SENT_DETAILS>
<COST_CENTER_CODE>XXXXXX</COST_CENTER_CODE>
<CHECK_SERIAL_NUMBER>XXXXXXXXXX</CHECK_SERIAL_NUMBER>
<PROCESS_DATE>MM-DD-RRRR</PROCESS_DATE>
<SEND_INDICATOR>X</SEND_INDICATOR>
</SD_BANK_FILE_SENT_DETAILS>
<SD_BANK_FILE_SENT_DETAILS>
<COST_CENTER_CODE>XXXXXX</COST_CENTER_CODE>
<CHECK_SERIAL_NUMBER>XXXXXXXXXX</CHECK_SERIAL_NUMBER>
<PROCESS_DATE>MM-DD-RRRR</PROCESS_DATE>
<SEND_INDICATOR>X</SEND_INDICATOR>
</SD_BANK_FILE_SENT_DETAILS>
</SD_BANK_FILE_SENT_DETAILS_UI_SP>

Created : 07/02/2014 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB)
IS
    V_XML   XMLTYPE := SYS.XMLTYPE(IN_ROW_DATA).EXTRACT('/' || IN_TABLE_NAME ||'_UI_SP');
    V_COUNT NUMBER := 1;
BEGIN

    WHILE V_XML.EXISTSNODE('//'||IN_TABLE_NAME||'[' || V_COUNT || ']') = 1 LOOP
        SD_BANK_FILE_SENT_DETAILS_PKG.SD_BANK_FILE_SENT_DETAILS_U_SP(IN_TABLE_NAME,
                                                                     V_XML.EXTRACT('//'||IN_TABLE_NAME||'[' || V_COUNT || ']').GETCLOBVAL());
        V_COUNT := V_COUNT + 1;
    END LOOP;

END SD_BANK_FILE_SNT_DTL_UI_UPSERT;

FUNCTION IS_AUTHORIZED_USER(
/**********************************************************
This function will authorize the user based on SECURITY_MATRIX table


parameters:

IN  IN_USER_ID
OUT OUT_REF_CURSOR

created : 08/27/2014 jxc517 CCN Project
modified: 
**********************************************************/
IN_USER_ID      IN     VARCHAR2,
OUT_REF_CURSOR     OUT CCN_COMMON_TOOLS.REF_CURSOR) RETURN VARCHAR2
IS
BEGIN
    IF CCN_COMMON_TOOLS.IS_AUTHORIZED_USER(IN_USER_ID, 'SD', OUT_REF_CURSOR) THEN
        RETURN 'Y';
    ELSE
        RETURN 'N';
    END IF;
END IS_AUTHORIZED_USER;

END SD_UI_INTERFACE_APP_PKG;

