/****************************************************************************************************************************
 Description   : This sql script is used to create all the new tables that structurally exactly mimic all the current external 
                 tables for store drafts to have the data loaded from POS_XML_IFACE table
 Created       : 04/14/2016 AXK326 CCN Project Team.....
 Modified      : 
****************************************************************************************************************************/
CREATE TABLE POSXML_ISSUE_CHG_DATA_TMP
(	TRANSACTION_SOURCE VARCHAR2(1 BYTE), 
	TRANSACTION_TYPE VARCHAR2(1 BYTE), 
	COST_CENTER_CODE VARCHAR2(4 BYTE), 
	CHECK_SERIAL_NUMBER VARCHAR2(10 BYTE), 
	DRAFT_NUMBER VARCHAR2(4 BYTE), 
	PROCESS_DATE VARCHAR2(7 BYTE), 
	FILLER VARCHAR2(16 BYTE), 
	TRANSACTION_SEGMENT_TYPE VARCHAR2(1 BYTE), 
	NET_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	NET_AMOUNT VARCHAR2(9 BYTE), 
	GROSS_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	GROSS_AMOUNT VARCHAR2(9 BYTE), 
	RETAINAGE_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	RETAINAGE_AMOUNT VARCHAR2(9 BYTE), 
	ISSUE_DATE VARCHAR2(7 BYTE), 
	TRANSACTION_DATE VARCHAR2(7 BYTE), 
	TERMINAL_NUMBER VARCHAR2(5 BYTE), 
	TRANSACTION_NUMBER VARCHAR2(5 BYTE), 
	CUSTOMER_ACCOUNT_NUMBER VARCHAR2(9 BYTE), 
	CUSTOMER_JOB_NUMBER VARCHAR2(2 BYTE), 
	POS_TRANSACTION_CODE VARCHAR2(2 BYTE), 
	PAYEE_NAME VARCHAR2(30 BYTE), 
	ADDRESS_LINE_1 VARCHAR2(30 BYTE), 
	ADDRESS_LINE_2 VARCHAR2(30 BYTE), 
	CITY VARCHAR2(15 BYTE), 
	STATE_CODE VARCHAR2(2 BYTE), 
	ZIP_CODE VARCHAR2(10 BYTE), 
	PHONE_NUMBER VARCHAR2(10 BYTE), 
	TRANSACTION_TIME VARCHAR2(4 BYTE), 
	EMPLOYEE_NUMBER VARCHAR2(2 BYTE), 
	BOOK_DATE VARCHAR2(4 BYTE), 
	CYCLE_RUN_NUMBER VARCHAR2(2 BYTE), 
	REASON_CODE VARCHAR2(2 BYTE)
);

CREATE TABLE POSXML_INSTLR_LN_ITEM_DATA_TMP
(	TRANSACTION_SOURCE VARCHAR2(1 BYTE), 
	TRANSACTION_TYPE VARCHAR2(1 BYTE), 
	COST_CENTER_CODE VARCHAR2(4 BYTE), 
	CHECK_SERIAL_NUMBER VARCHAR2(10 BYTE), 
	PROCESS_DATE VARCHAR2(7 BYTE), 
	FILLER VARCHAR2(16 BYTE), 
	TRANSACTION_SEGMENT_TYPE VARCHAR2(1 BYTE), 
	ITEM_EXT_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	ITEM_EXT_AMOUNT VARCHAR2(9 BYTE), 
	ORGNL_TERMINAL_NUMBER VARCHAR2(5 BYTE), 
	ORGNL_TRANSACTION_NUMBER VARCHAR2(5 BYTE), 
	ITEM_QUANTITY_SIGN VARCHAR2(1 BYTE), 
	ITEM_QUANTITY VARCHAR2(7 BYTE), 
	ITEM_PRICE_SIGN VARCHAR2(1 BYTE), 
	ITEM_PRICE VARCHAR2(7 BYTE), 
	GL_PRIME_ACCOUNT_NUMBER VARCHAR2(4 BYTE), 
	GL_SUB_ACCOUNT_NUMBER VARCHAR2(3 BYTE)
);

CREATE TABLE POSXML_DISBRSMT_LINE_ITEM_TMP
(	TRANSACTION_SOURCE VARCHAR2(1 BYTE), 
	TRANSACTION_TYPE VARCHAR2(1 BYTE), 
	COST_CENTER_CODE VARCHAR2(4 BYTE), 
	CHECK_SERIAL_NUMBER VARCHAR2(10 BYTE), 
	PROCESS_DATE VARCHAR2(7 BYTE), 
	FILLER VARCHAR2(16 BYTE), 
	TRANSACTION_SEGMENT_TYPE VARCHAR2(1 BYTE), 
	ITEM_EXT_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	ITEM_EXT_AMOUNT VARCHAR2(9 BYTE), 
	GL_PRIME_ACCOUNT_NUMBER VARCHAR2(4 BYTE), 
	GL_SUB_ACCOUNT_NUMBER VARCHAR2(3 BYTE)
);

CREATE TABLE POSXML_CUST_LINE_ITEM_DATA_TMP
(	TRANSACTION_SOURCE VARCHAR2(1 BYTE), 
	TRANSACTION_TYPE VARCHAR2(1 BYTE), 
	COST_CENTER_CODE VARCHAR2(4 BYTE), 
	CHECK_SERIAL_NUMBER VARCHAR2(10 BYTE), 
	PROCESS_DATE VARCHAR2(7 BYTE), 
	FILLER VARCHAR2(16 BYTE), 
	TRANSACTION_SEGMENT_TYPE VARCHAR2(1 BYTE), 
	ITEM_EXT_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	ITEM_EXT_AMOUNT VARCHAR2(9 BYTE), 
	ORGNL_CUSTOMER_ACCOUNT_NUMBER VARCHAR2(9 BYTE), 
	ORGNL_JOB_NUMBER VARCHAR2(2 BYTE)
);

CREATE TABLE POSXML_CSTMR_TMP
(	COST_CENTER_CODE VARCHAR2(4 BYTE), 
	TERMINAL_NUMBER VARCHAR2(5 BYTE), 
	TRANSACTION_NUMBER VARCHAR2(5 BYTE), 
	SORT_FORCE VARCHAR2(3 BYTE), 
	SEGMENT_CODE VARCHAR2(2 BYTE), 
	SUB_SEGMENT_CODE VARCHAR2(2 BYTE), 
	FILLER VARCHAR2(5 BYTE), 
	TRANSACTION_DATE VARCHAR2(7 BYTE), 
	CUSTOMER_ACCOUNT_NUMBER VARCHAR2(9 BYTE), 
	CUSTOMER_JOB_NUMBER VARCHAR2(2 BYTE), 
	POS_TRANSACTION_NUMBER_BATCH VARCHAR2(6 BYTE), 
	POS_TRANSACTION_TIME VARCHAR2(4 BYTE), 
	CYCLE_RUN_NUMBER VARCHAR2(2 BYTE), 
	EMPLOYEE_NUMBER VARCHAR2(2 BYTE), 
	POS_MODE_INDICATOR VARCHAR2(1 BYTE), 
	BUSINESS_TYPE_CODE VARCHAR2(2 BYTE), 
	SLS_TERRITORY_NUMBER VARCHAR2(4 BYTE), 
	SLS_TERRITORY_NUMBER_NO_CORR VARCHAR2(4 BYTE), 
	TERRITORY_SPLIT_INDICATOR VARCHAR2(1 BYTE), 
	POS_TRANSACTION_CODE VARCHAR2(2 BYTE), 
	POS_TRANSACTION_DATE VARCHAR2(7 BYTE), 
	POS_TERMINAL_NUMBER VARCHAR2(5 BYTE), 
	POS_TRANSACTION_NUMBER VARCHAR2(5 BYTE), 
	DATA_INDICATOR VARCHAR2(1 BYTE), 
	PURCHASE_ORDER_NUMBER VARCHAR2(20 BYTE)
);

CREATE TABLE POSXML_CSTMR_DTLS_TMP
(	COST_CENTER_CODE VARCHAR2(4 BYTE), 
	TERMINAL_NUMBER VARCHAR2(5 BYTE), 
	TRANSACTION_NUMBER VARCHAR2(5 BYTE), 
	SORT_FORCE VARCHAR2(3 BYTE), 
	SEGMENT_CODE VARCHAR2(2 BYTE), 
	SUB_SEGMENT_CODE VARCHAR2(2 BYTE), 
	FILLER VARCHAR2(5 BYTE), 
	SALES_NUMBER VARCHAR2(9 BYTE), 
	ITEM_QUANTITY_SIGN VARCHAR2(1 BYTE), 
	ITEM_QUANTITY VARCHAR2(7 BYTE), 
	ITEM_PRICE_SIGN VARCHAR2(1 BYTE), 
	ITEM_PRICE VARCHAR2(7 BYTE), 
	ITEM_EXTERNAL_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	ITEM_EXTERNAL_AMOUNT VARCHAR2(7 BYTE), 
	ITEM_DISC_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	ITEM_DISC_AMOUNT VARCHAR2(7 BYTE), 
	ITEM_SALES_TAX_INDICATOR VARCHAR2(1 BYTE), 
	ITEM_DISC_CODE VARCHAR2(1 BYTE), 
	ITEM_DISC_TYPE VARCHAR2(1 BYTE), 
	SALES_PROMO_CODE VARCHAR2(1 BYTE), 
	GL_PRIME_ACCOUNT VARCHAR2(4 BYTE), 
	GL_SUB_ACCOUNT VARCHAR2(3 BYTE), 
	SCHEDULE_TYPE VARCHAR2(2 BYTE), 
	SCHEDULE_VERSION VARCHAR2(6 BYTE), 
	PRICE_LVL_CODE VARCHAR2(1 BYTE), 
	PERCENT_OFF_LVL VARCHAR2(3 BYTE), 
	PROD_DESC_SOURCE VARCHAR2(1 BYTE), 
	ORGNL_POS_TERMINAL_NUMBER VARCHAR2(5 BYTE), 
	ORGNL_POS_TRANSACTION_NUMBER VARCHAR2(5 BYTE)
);

CREATE TABLE POSXML_CSTMR_SLS_TAX_TMP
(	COST_CENTER_CODE VARCHAR2(4 BYTE), 
	TERMINAL_NUMBER VARCHAR2(5 BYTE), 
	TRANSACTION_NUMBER VARCHAR2(5 BYTE), 
	SORT_FORCE VARCHAR2(3 BYTE), 
	SEGMENT_CODE VARCHAR2(2 BYTE), 
	SUB_SEGMENT_CODE VARCHAR2(2 BYTE), 
	FILLER VARCHAR2(5 BYTE), 
	SALES_TAX_CORR_INDICATOR VARCHAR2(1 BYTE), 
	SALES_TAX_COLL_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	SALES_TAX_COLL_AMOUNT VARCHAR2(7 BYTE), 
	SALES_TAX_INDICATOR VARCHAR2(1 BYTE), 
	SALES_TAX_RATE_SIGN VARCHAR2(1 BYTE), 
	SALES_TAX_RATE VARCHAR2(5 BYTE), 
	SALES_TAX_CODE VARCHAR2(5 BYTE)
);

CREATE TABLE POSXML_CSTMR_FRM_OF_PAY_TMP
(	COST_CENTER_CODE VARCHAR2(4 BYTE), 
	TERMINAL_NUMBER VARCHAR2(5 BYTE), 
	TRANSACTION_NUMBER VARCHAR2(5 BYTE), 
	SORT_FORCE VARCHAR2(3 BYTE), 
	SEGMENT_CODE VARCHAR2(2 BYTE), 
	SUB_SEGMENT_CODE VARCHAR2(2 BYTE), 
	FILLER VARCHAR2(5 BYTE), 
	PAY_DISC_CODE VARCHAR2(1 BYTE), 
	TRANSACTION_TOTAL_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	TRANSACTION_TOTAL_AMOUNT VARCHAR2(7 BYTE), 
	POS_LINE_CNT VARCHAR2(5 BYTE), 
	PAY_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	PAY_AMOUNT VARCHAR2(7 BYTE), 
	POS_DISC_SIGN VARCHAR2(1 BYTE), 
	POS_DISC VARCHAR2(7 BYTE), 
	SALES_DISC_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	SALES_DISC_AMOUNT VARCHAR2(7 BYTE)
);

CREATE TABLE POSXML_CSTMR_BNK_CRD_TMP
(	COST_CENTER_CODE VARCHAR2(4 BYTE), 
	TERMINAL_NUMBER VARCHAR2(5 BYTE), 
	TRANSACTION_NUMBER VARCHAR2(5 BYTE), 
	SORT_FORCE VARCHAR2(3 BYTE), 
	SEGMENT_CODE VARCHAR2(2 BYTE), 
	SUB_SEGMENT_CODE VARCHAR2(2 BYTE), 
	FILLER VARCHAR2(5 BYTE), 
	BANK_CARD_ACCOUNT_NUMBER VARCHAR2(16 BYTE), 
	BANK_AUTH VARCHAR2(9 BYTE), 
	BANK_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	BANK_AMOUNT VARCHAR2(9 BYTE), 
	BANK_TYPE VARCHAR2(1 BYTE)
);

CREATE TABLE POSXML_BNK_PAID_DATA_TMP 
(	TRANSACTION_SOURCE VARCHAR2(1 BYTE), 
	TRANSACTION_TYPE VARCHAR2(1 BYTE), 
	COST_CENTER_CODE VARCHAR2(4 BYTE), 
	CHECK_SERIAL_NUMBER VARCHAR2(10 BYTE), 
	PROCESS_DATE VARCHAR2(7 BYTE), 
	FILLER VARCHAR2(16 BYTE), 
	TRANSACTION_SEGMENT_TYPE VARCHAR2(1 BYTE), 
	PAID_DATE VARCHAR2(7 BYTE), 
	STOP_PAY_DATE VARCHAR2(7 BYTE), 
	STOP_PAY_REMOVE_DATE VARCHAR2(7 BYTE), 
	VOID_DATE VARCHAR2(7 BYTE), 
	BANK_PAID_AMOUNT_SIGN VARCHAR2(1 BYTE), 
	BANK_PAID_AMOUNT VARCHAR2(9 BYTE), 
	BANK_NUMBER VARCHAR2(3 BYTE), 
	BANK_ACCOUNT_NUMBER VARCHAR2(16 BYTE), 
	CPCS_NUMBER VARCHAR2(9 BYTE), 
	FILLER1 VARCHAR2(8 BYTE), 
	PAYEE_INFO VARCHAR2(16 BYTE), 
	ADDITIONAL_INFO VARCHAR2(16 BYTE), 
	FS_ACCOUNT_NUMBER1 VARCHAR2(9 BYTE), 
	FS_AMOUNT_SIGN1 VARCHAR2(1 BYTE), 
	FS_AMOUNT1 VARCHAR2(9 BYTE), 
	FS_ACCOUNT_NUMBER2 VARCHAR2(9 BYTE), 
	FS_AMOUNT_SIGN2 VARCHAR2(1 BYTE), 
	FS_AMOUNT2 VARCHAR2(9 BYTE), 
	FS_ACCOUNT_NUMBER3 VARCHAR2(9 BYTE), 
	FS_AMOUNT_SIGN3 VARCHAR2(1 BYTE), 
	FS_AMOUNT3 VARCHAR2(9 BYTE)
);
