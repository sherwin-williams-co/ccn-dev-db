PACKAGE BODY CCN_PICK_LIST_PKG
    AS
/**********************************************************
	CCN_PICK_LIST_PKG

	This Package is intended to return values for picklists and 
	picklist screen

created : 
**********************************************************/

	PROCEDURE CODE_TABLE_H_SP (
/**********************************************************
	CODE_TABLE_H_SP

	This procedure is intended to return a ref cursor with data from 
	from the CODE HEADER table

created : 
**********************************************************/	
	in_HEADER_NAME IN CODE_HEADER.CODE_HEADER_NAME%TYPE
	,in_HEADER_TYPE IN CODE_HEADER.CODE_HEADER_TYPE%TYPE
	, out_CODE_HEADER_CUR OUT REF_CUR_CODE)

        IS                  

	BEGIN

		  OPEN out_CODE_HEADER_CUR FOR
		  SELECT *
		  FROM 	CODE_HEADER
		  WHERE CODE_HEADER_NAME = NVL(in_HEADER_NAME, CODE_HEADER_NAME)
		  AND   CODE_HEADER_TYPE = NVL(in_HEADER_TYPE, CODE_HEADER_TYPE);

	  
	END CODE_TABLE_H_SP;

	PROCEDURE CODE_TABLE_D_SP (
/**********************************************************
	CODE_TABLE_D_SP

	This procedure is intended to return a ref cursor with data from 
	from the CODE_DETAIL table.  

created : 
**********************************************************/
	in_HEADER_NAME IN CODE_DETAIL.CODE_HEADER_NAME%TYPE
	,in_HEADER_TYPE IN CODE_DETAIL.CODE_HEADER_TYPE%TYPE
	--,in_DETAIL_VALUE IN CODE_DETAIL.CODE_DETAIL_VALUE%TYPE
	, out_CODE_DETAIL_CUR OUT REF_CUR_CODE)
        IS                  

	BEGIN

		  OPEN out_CODE_DETAIL_CUR FOR
			  
		  SELECT * 
		  FROM CODE_DETAIL
		  WHERE CODE_HEADER_NAME = NVL(in_HEADER_NAME, CODE_HEADER_NAME)
		  AND   CODE_HEADER_TYPE = NVL(in_HEADER_TYPE, CODE_HEADER_TYPE)
          order by CODE_DETAIL_ID;
		  --AND   CODE_DETAIL_VALUE = in_DETAIL_VALUE;
	  
	END CODE_TABLE_D_SP;

	PROCEDURE CODE_TABLE_D_DESC_SP (
/**********************************************************
	CODE_TABLE_D_DESC_SP

	This procedure is intended to return a ref cursor with data from 
	from the CODE_DETAIL table.  

created : 
**********************************************************/
	in_HEADER_NAME IN CODE_DETAIL.CODE_HEADER_NAME%TYPE
	,in_HEADER_TYPE IN CODE_DETAIL.CODE_HEADER_TYPE%TYPE
	,in_DETAIL_VALUE IN CODE_DETAIL.CODE_DETAIL_VALUE%TYPE
	, out_CODE_DETAIL_CUR OUT REF_CUR_CODE)
        IS                  

	BEGIN

		  OPEN out_CODE_DETAIL_CUR FOR
			  
		  SELECT * 
		  FROM CODE_DETAIL
		  WHERE CODE_HEADER_NAME = NVL(in_HEADER_NAME, CODE_HEADER_NAME)
		  AND   CODE_HEADER_TYPE = NVL(in_HEADER_TYPE, CODE_HEADER_TYPE)
		  and   CODE_DETAIL_VALUE = NVL(in_DETAIL_VALUE, CODE_DETAIL_VALUE)
          order by CODE_DETAIL_ID;
	  
	END CODE_TABLE_D_DESC_SP;

PROCEDURE CODE_DETAIL_INSERT(
/**********************************************************
	CODE_DETAIL_INSERT

	This procedure will insert into the CODE_DETAIL table 

<CODE_DETAIL>
  <row_data>
      <CODE_HEADER_NAME>MKT_BRAND</CODE_HEADER_NAME> 
      <CODE_HEADER_TYPE>COD</CODE_HEADER_TYPE> 
      <CODE_DETAIL_VALUE>C</CODE_DETAIL_VALUE> 
      <CODE_DETAIL_DESCRIPTION>COLUMBIA</CODE_DETAIL_DESCRIPTION>
      <CODE_DETAIL_EXPIRE_FLAG>NULL</CODE_DETAIL_EXPIRE_FLAG>
      <CODE_DETAIL_EXPIRE_USER>NULL</CODE_DETAIL_EXPIRE_USER>
	    <CODE_DETAIL_EXPIRE_EFF_DATE>NULL</CODE_DETAIL_EXPIRE_EFF_DATE>
	    <CODE_DETAIL_ID>1</CODE_DETAIL_ID>	   
  </row_data>
  <row_data>
      <CODE_HEADER_NAME>MKT_BRAND</CODE_HEADER_NAME> 
      <CODE_HEADER_TYPE>COD</CODE_HEADER_TYPE> 
      <CODE_DETAIL_VALUE>C</CODE_DETAIL_VALUE> 
      <CODE_DETAIL_DESCRIPTION>COLUMBIA</CODE_DETAIL_DESCRIPTION>
      <CODE_DETAIL_EXPIRE_FLAG>NULL</CODE_DETAIL_EXPIRE_FLAG>
      <CODE_DETAIL_EXPIRE_USER>NULL</CODE_DETAIL_EXPIRE_USER>
	    <CODE_DETAIL_EXPIRE_EFF_DATE>NULL</CODE_DETAIL_EXPIRE_EFF_DATE>
	    <CODE_DETAIL_ID>1</CODE_DETAIL_ID>	  
  </row_data>
  <row_data>
      <CODE_HEADER_NAME>MKT_BRAND</CODE_HEADER_NAME> 
      <CODE_HEADER_TYPE>COD</CODE_HEADER_TYPE> 
      <CODE_DETAIL_VALUE>C</CODE_DETAIL_VALUE> 
      <CODE_DETAIL_DESCRIPTION>COLUMBIA</CODE_DETAIL_DESCRIPTION>
      <CODE_DETAIL_EXPIRE_FLAG>NULL</CODE_DETAIL_EXPIRE_FLAG>
      <CODE_DETAIL_EXPIRE_USER>NULL</CODE_DETAIL_EXPIRE_USER>
	    <CODE_DETAIL_EXPIRE_EFF_DATE>NULL</CODE_DETAIL_EXPIRE_EFF_DATE>
	    <CODE_DETAIL_ID>1</CODE_DETAIL_ID>	    
  </row_data>
</CODE_DETAIL>
**********************************************************/
    in_XML                VARCHAR2)
IS

    SQ INTEGER;
    SE VARCHAR2(100);
    invalid_detail_code EXCEPTION;
    
    V_XML XMLTYPE := SYS.XMLTYPE(IN_XML);
    V_CODE               NUMBER;
    V_COUNT				       NUMBER;
    
    V_CONTEXT                      varchar2(100);
    V_CODE_HEADER_NAME             CODE_DETAIL.CODE_HEADER_NAME%type;
    V_CODE_HEADER_TYPE             CODE_DETAIL.CODE_HEADER_TYPE%type;
    V_CODE_DETAIL_VALUE            CODE_DETAIL.CODE_DETAIL_VALUE%TYPE;
	  V_CODE_DETAIL_DESCRIPTION      CODE_DETAIL.CODE_DETAIL_DESCRIPTION%TYPE;
	  V_CODE_DETAIL_EXPIRE_FLAG      CODE_DETAIL.CODE_DETAIL_EXPIRE_FLAG%type;
    V_CODE_DETAIL_EXPIRE_USER      CODE_DETAIL.CODE_DETAIL_EXPIRE_USER%type;
    V_CODE_DETAIL_EXPIRE_EFF_DATE  CODE_DETAIL.CODE_DETAIL_EXPIRE_EFF_DATE%TYPE;
	  V_CODE_DETAIL_ID               CODE_DETAIL.CODE_DETAIL_ID%type;
	   
  
 BEGIN
       While V_XML.EXISTSNODE('/CODE_DETAIL/row_data' ||  '[' || V_COUNT || ']') = 1 LOOP
                                     
             V_CONTEXT := 'Extracting CODE_HEADER_NAME';
             V_CODE_HEADER_NAME := v_XML.extract('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_HEADER_NAME/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_HEADER_TYPE';
             V_CODE_HEADER_TYPE := v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_HEADER_TYPE/text()').GETSTRINGVAL();
                        
             V_CONTEXT := 'Extracting CODE_DETAIL_VALUE';
             V_CODE_DETAIL_VALUE := v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_VALUE/text()').GETSTRINGVAL();

		         V_CONTEXT := 'Extracting CODE_DETAIL_DESCRIPTION';
             V_CODE_DETAIL_DESCRIPTION := v_XML.extract('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_DESCRIPTION/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_DETAIL_EXPIRE_FLAG';
             V_CODE_DETAIL_EXPIRE_FLAG := v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_EXPIRE_FLAG/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_DETAIL_EXPIRE_USER';
             V_CODE_DETAIL_EXPIRE_USER := v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_EXPIRE_USER/text()').GETSTRINGVAL();

			       V_CONTEXT := 'Extracting CODE_DETAIL_EXPIRE_EFF_DATE';
             V_CODE_DETAIL_EXPIRE_EFF_DATE := TO_DATE(v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_EXPIRE_EFF_DATE/text()').GETSTRINGVAL(),'MM-DD-YYYY');
                         
             V_CONTEXT := 'Extracting CODE_DETAIL_ID';
             V_CODE_DETAIL_ID := v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_ID/text()').GETSTRINGVAL();
				 
             V_CONTEXT := 'Inserting into code_detail';
             INSERT INTO code_detail ( CODE_HEADER_NAME,
                                       CODE_HEADER_TYPE,
                                       CODE_DETAIL_VALUE,
                                       CODE_DETAIL_DESCRIPTION,
                                       CODE_DETAIL_EXPIRE_FLAG,
                                       CODE_DETAIL_EXPIRE_USER,
                                       CODE_DETAIL_EXPIRE_EFF_DATE,
                                       CODE_DETAIL_ID				 
                                                )
                                          VALUES(V_CODE_HEADER_NAME,
                                                 V_CODE_HEADER_TYPE,
                                                 V_CODE_DETAIL_VALUE,
                                                 V_CODE_DETAIL_DESCRIPTION,
                                                 V_CODE_DETAIL_EXPIRE_FLAG,
                                                 V_CODE_DETAIL_EXPIRE_USER,
									                               V_CODE_DETAIL_EXPIRE_EFF_DATE,
									                               V_CODE_DETAIL_ID);
		  V_COUNT := V_COUNT +1;
		  END LOOP;
  
 EXCEPTION 
      WHEN invalid_detail_code THEN
           V_CODE := ERRNUMS.EN_INVALID_CODE_DETAIL_ERR;
           errpkg.raise_err(v_code, 'The code detail value for' || V_CODE_HEADER_NAME || ' is incorrect');
             
      WHEN OTHERS THEN
          SQ := SQLCODE;
          SE := SQLERRM;
          
          V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
          ERRPKG.RAISE_ERR(-20004,'CODE_DETAIL_INSERT',V_CONTEXT); 
          
END CODE_DETAIL_INSERT;


PROCEDURE CODE_DETAIL_UPDATE(
/**********************************************************
	CODE_DETAIL_UPDATE

	This procedure will UPDATE into the table CODE_DETAIL

<CODE_DETAIL>
  <row_data>
      <CODE_HEADER_NAME>MKT_BRAND</CODE_HEADER_NAME> 
      <CODE_HEADER_TYPE>COD</CODE_HEADER_TYPE> 
      <CODE_DETAIL_VALUE>C</CODE_DETAIL_VALUE> 
      <CODE_DETAIL_DESCRIPTION>COLUMBIA</CODE_DETAIL_DESCRIPTION>
      <CODE_DETAIL_EXPIRE_FLAG>NULL</CODE_DETAIL_EXPIRE_FLAG>
      <CODE_DETAIL_EXPIRE_USER>NULL</CODE_DETAIL_EXPIRE_USER>
	    <CODE_DETAIL_EXPIRE_EFF_DATE>NULL</CODE_DETAIL_EXPIRE_EFF_DATE>
	    <CODE_DETAIL_ID>1</CODE_DETAIL_ID>	  	   
  </row_data>
</CODE_DETAIL>
**********************************************************/
    in_XML                VARCHAR2)
IS
    SQ INTEGER;
    SE VARCHAR2(100);
    INVALID_DETAIL_CODE EXCEPTION;
    
    V_XML XMLTYPE := SYS.XMLTYPE(IN_XML);
    V_CODE                         NUMBER;
     V_COUNT				               NUMBER;
    
    V_CONTEXT                      varchar2(100);
    V_CODE_HEADER_NAME             CODE_DETAIL.CODE_HEADER_NAME%type;
    V_CODE_HEADER_TYPE             CODE_DETAIL.CODE_HEADER_TYPE%type;
    V_CODE_DETAIL_VALUE            CODE_DETAIL.CODE_DETAIL_VALUE%TYPE;
	  V_CODE_DETAIL_DESCRIPTION      CODE_DETAIL.CODE_DETAIL_DESCRIPTION%TYPE;
	  V_CODE_DETAIL_EXPIRE_FLAG      CODE_DETAIL.CODE_DETAIL_EXPIRE_FLAG%type;
    V_CODE_DETAIL_EXPIRE_USER      CODE_DETAIL.CODE_DETAIL_EXPIRE_USER%type;
    V_CODE_DETAIL_EXPIRE_EFF_DATE  CODE_DETAIL.CODE_DETAIL_EXPIRE_EFF_DATE%TYPE;
  	V_CODE_DETAIL_ID               CODE_DETAIL.CODE_DETAIL_ID%type;
	   
  
   BEGIN
       While V_XML.EXISTSNODE('/CODE_DETAIL/row_data' ||  '[' || V_COUNT || ']') = 1 LOOP
                                     
             V_CONTEXT := 'Extracting CODE_HEADER_NAME';
             V_CODE_HEADER_NAME := v_XML.extract('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_HEADER_NAME/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_HEADER_TYPE';
             V_CODE_HEADER_TYPE := v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_HEADER_TYPE/text()').GETSTRINGVAL();
                        
             V_CONTEXT := 'Extracting CODE_DETAIL_VALUE';
             V_CODE_DETAIL_VALUE := v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_VALUE/text()').GETSTRINGVAL();

		         V_CONTEXT := 'Extracting CODE_DETAIL_DESCRIPTION';
             V_CODE_DETAIL_DESCRIPTION := v_XML.extract('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_DESCRIPTION/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_DETAIL_EXPIRE_FLAG';
             V_CODE_DETAIL_EXPIRE_FLAG := v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_EXPIRE_FLAG/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_DETAIL_EXPIRE_USER';
             V_CODE_DETAIL_EXPIRE_USER := v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_EXPIRE_USER/text()').GETSTRINGVAL();

			       V_CONTEXT := 'Extracting CODE_DETAIL_EXPIRE_EFF_DATE';
             V_CODE_DETAIL_EXPIRE_EFF_DATE := TO_DATE(v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_EXPIRE_EFF_DATE/text()').GETSTRINGVAL(),'MM-DD-YYYY');
                         
             V_CONTEXT := 'Extracting CODE_DETAIL_ID';
             V_CODE_DETAIL_ID := v_XML.EXTRACT('/CODE_DETAIL/row_data' || '[' || V_COUNT || ']' || '/CODE_DETAIL_ID/text()').GETSTRINGVAL();

                                
             V_CONTEXT := 'Updating in code_detail';
             UPDATE CODE_DETAIL 
					SET CODE_DETAIL_DESCRIPTION			      = V_CODE_DETAIL_DESCRIPTION,
						  CODE_DETAIL_EXPIRE_FLAG			      = V_CODE_DETAIL_EXPIRE_FLAG,
						  CODE_DETAIL_EXPIRE_USER			      = V_CODE_DETAIL_EXPIRE_USER,
						  CODE_DETAIL_EXPIRE_EFF_DATE		    = V_CODE_DETAIL_EXPIRE_EFF_DATE,
						  CODE_DETAIL_ID				            = V_CODE_DETAIL_ID
				  WHERE CODE_HEADER_NAME   			        = V_CODE_HEADER_NAME
				    AND CODE_HEADER_TYPE    			      = V_CODE_HEADER_TYPE
            AND CODE_DETAIL_VALUE   			      = V_CODE_DETAIL_VALUE;
            
		 	  V_COUNT := V_COUNT +1;
		  END LOOP;
   EXCEPTION 
      WHEN invalid_detail_code THEN
           V_CODE := ERRNUMS.EN_INVALID_CODE_DETAIL_ERR;
           errpkg.raise_err(v_code, 'The code detail value for' || V_CODE_HEADER_NAME || ' is incorrect');
             
      WHEN OTHERS THEN
          SQ := SQLCODE;
          SE := SQLERRM;
          
          V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
          ERRPKG.RAISE_ERR(-20004,'CODE_DETAIL_UPDATE',V_CONTEXT); 
           
END CODE_DETAIL_UPDATE;

PROCEDURE CODE_DETAIL_DELETE(
/**********************************************************
	CODE_DETAIL_DELETE

	This procedure will UPDATE THE EXISTING CODES FROM the table CODE_DETAIL

<CODE_DETAIL>
  <row_data>
      <CODE_HEADER_NAME>MKT_BRAND</CODE_HEADER_NAME> 
      <CODE_HEADER_TYPE>COD</CODE_HEADER_TYPE> 
      <CODE_DETAIL_VALUE>C</CODE_DETAIL_VALUE> 
      <CODE_DETAIL_DESCRIPTION>COLUMBIA</CODE_DETAIL_DESCRIPTION>
      <CODE_DETAIL_EXPIRE_FLAG>NULL</CODE_DETAIL_EXPIRE_FLAG>
      <CODE_DETAIL_EXPIRE_USER>NULL</CODE_DETAIL_EXPIRE_USER>
	    <CODE_DETAIL_EXPIRE_EFF_DATE>NULL</CODE_DETAIL_EXPIRE_EFF_DATE>
	    <CODE_DETAIL_ID>1</CODE_DETAIL_ID>	   
  </row_data>
</CODE_DETAIL>
**********************************************************/
    in_XML                VARCHAR2)
IS
  
    V_XML XMLTYPE := SYS.XMLTYPE(IN_XML);
    V_CONTEXT                      VARCHAR2(100);
  
  BEGIN
    V_CONTEXT := 'UPDATING FROM CODE_DETAIL';
    CCN_PICK_LIST_PKG.CODE_DETAIL_UPDATE(IN_XML);
    
END CODE_DETAIL_DELETE;

PROCEDURE CODE_HEADER_INSERT(
/**********************************************************
	CODE_HEADER_INSERT

	This procedure will insert into the table CODE_HEADER

<CODE_HEADER>
  <row_data>
      <CODE_HEADER_NAME>RPS_ZONE_CODE</CODE_HEADER_NAME> 
      <CODE_HEADER_TYPE>COD</CODE_HEADER_TYPE> 
      <CODE_HEADER_DESCRIPTION>RPS SHIPPING ZONE CODES</CODE_HEADER_DESCRIPTION>
      <CODE_HEADER_EXPIRE_FLAG>NULL</CODE_HEADER_EXPIRE_FLAG>
      <CODE_HEADER_EXPIRE_USER>NULL</CODE_HEADER_EXPIRE_USER>
	    <CODE_HEADER_EXPIRE_EFF_DATE>NULL</CODE_HEADER_EXPIRE_EFF_DATE>
	    <CODE_HEADER_DTL_VAL_SIZE>1</CODE_HEADER_DTL_VAL_SIZE>
      <CODE_HEADER_DTL_VAL_DEFAULT>NULL</CODE_HEADER_DTL_VAL_DEFAULT>		  
  </row_data>
</CODE_HEADER>
**********************************************************/
    in_XML                          VARCHAR2)
IS
    
    V_XML xmltype := SYS.xmltype(IN_XML);
     
    V_CONTEXT                       varchar2(100);
    V_CODE_HEADER_NAME              CODE_HEADER.CODE_HEADER_NAME%type;
    V_CODE_HEADER_TYPE              CODE_HEADER.CODE_HEADER_TYPE%type;
    V_CODE_HEADER_DESCRIPTION       CODE_HEADER.CODE_HEADER_DESCRIPTION%TYPE;
	  V_CODE_HEADER_EXPIRE_FLAG       CODE_HEADER.CODE_HEADER_EXPIRE_FLAG%type;
    V_CODE_HEADER_EXPIRE_USER       CODE_HEADER.CODE_HEADER_EXPIRE_USER%type;
    V_CODE_HEADER_EXPIRE_EFF_DATE   CODE_HEADER.CODE_HEADER_EXPIRE_EFF_DATE%TYPE;
	  V_CODE_HEADER_DTL_VAL_SIZE	    CODE_HEADER.CODE_HEADER_DTL_VAL_SIZE%TYPE;
    V_CODE_HEADER_DTL_VAL_DEFAULT	  CODE_HEADER.CODE_HEADER_DTL_VAL_DEFAULT%type;
	   
  
  BEGIN
        IF (v_XML.EXISTSNODE('/CODE_HEADER/row_data') = 1) THEN
               
             V_CONTEXT := 'Extracting CODE_HEADER_NAME';
             V_CODE_HEADER_NAME := v_XML.extract('/CODE_HEADER/row_data/CODE_HEADER_NAME/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_HEADER_TYPE';
             V_CODE_HEADER_TYPE := v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_TYPE/text()').GETSTRINGVAL();
                        
       		   V_CONTEXT := 'Extracting CODE_HEADER_DESCRIPTION';
             V_CODE_HEADER_DESCRIPTION := v_XML.extract('/CODE_HEADER/row_data/CODE_HEADER_DESCRIPTION/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_HEADER_EXPIRE_FLAG';
             V_CODE_HEADER_EXPIRE_FLAG := v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_EXPIRE_FLAG/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_HEADER_EXPIRE_USER';
             V_CODE_HEADER_EXPIRE_USER := v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_EXPIRE_USER/text()').GETSTRINGVAL();

			       V_CONTEXT := 'Extracting CODE_HEADER_EXPIRE_EFF_DATE';
             V_CODE_HEADER_EXPIRE_EFF_DATE := TO_DATE(v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_EXPIRE_EFF_DATE/text()').GETSTRINGVAL(),'MM-DD-YYYY');
                         
             V_CONTEXT := 'Extracting CODE_HEADER_DTL_VAL_SIZE';
             V_CODE_HEADER_DTL_VAL_SIZE := v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_DTL_VAL_SIZE/text()').GETSTRINGVAL();
			 
			       V_CONTEXT := 'Extracting CODE_HEADER_DTL_VAL_SIZE';
             V_CODE_HEADER_DTL_VAL_DEFAULT := v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_DTL_VAL_DEFAULT/text()').GETSTRINGVAL();

                                
             V_CONTEXT := 'Inserting into CODE_HEADER';
             INSERT INTO CODE_HEADER ( CODE_HEADER_NAME,
                                       CODE_HEADER_TYPE,
                                       CODE_HEADER_DESCRIPTION,
                                       CODE_HEADER_EXPIRE_FLAG,
                                       CODE_HEADER_EXPIRE_USER,
									                     CODE_HEADER_EXPIRE_EFF_DATE,
									                     CODE_HEADER_DTL_VAL_SIZE,
									                     CODE_HEADER_DTL_VAL_DEFAULT
                                                )
                                          VALUES(V_CODE_HEADER_NAME,
                                                 V_CODE_HEADER_TYPE,
                                                 V_CODE_HEADER_DESCRIPTION,
                                                 V_CODE_HEADER_EXPIRE_FLAG,
									                               V_CODE_HEADER_EXPIRE_USER,
									                               V_CODE_HEADER_EXPIRE_EFF_DATE,
									                               V_CODE_HEADER_DTL_VAL_SIZE,
												                         V_CODE_HEADER_DTL_VAL_DEFAULT);
		  END IF;
          
          
END CODE_HEADER_INSERT;


PROCEDURE CODE_HEADER_UPDATE(
/**********************************************************
	CODE_HEADER_UPDATE
	
	This procedure will UPDATE into the table CODE_HEADER

<CODE_HEADER>
  <row_data>
     <CODE_HEADER_NAME>RPS_ZONE_CODE</CODE_HEADER_NAME> 
      <CODE_HEADER_TYPE>COD</CODE_HEADER_TYPE> 
      <CODE_HEADER_DESCRIPTION>RPS SHIPPING ZONE CODES</CODE_HEADER_DESCRIPTION>
      <CODE_HEADER_EXPIRE_FLAG>NULL</CODE_HEADER_EXPIRE_FLAG>
      <CODE_HEADER_EXPIRE_USER>NULL</CODE_HEADER_EXPIRE_USER>
	    <CODE_HEADER_EXPIRE_EFF_DATE>NULL</CODE_HEADER_EXPIRE_EFF_DATE>
	    <CODE_HEADER_DTL_VAL_SIZE>1</CODE_HEADER_DTL_VAL_SIZE>
      <CODE_HEADER_DTL_VAL_DEFAULT>NULL</CODE_HEADER_DTL_VAL_DEFAULT>	  
  </row_data>
</CODE_HEADER>
**********************************************************/
    in_XML                VARCHAR2)
IS
   
    V_XML xmltype := SYS.xmltype(IN_XML);
      
    V_CONTEXT                       varchar2(100);
    V_CODE_HEADER_NAME              CODE_HEADER.CODE_HEADER_NAME%type;
    V_CODE_HEADER_TYPE              CODE_HEADER.CODE_HEADER_TYPE%type;
    V_CODE_HEADER_DESCRIPTION       CODE_HEADER.CODE_HEADER_DESCRIPTION%TYPE;
	  V_CODE_HEADER_EXPIRE_FLAG       CODE_HEADER.CODE_HEADER_EXPIRE_FLAG%type;
    V_CODE_HEADER_EXPIRE_USER       CODE_HEADER.CODE_HEADER_EXPIRE_USER%type;
    V_CODE_HEADER_EXPIRE_EFF_DATE   CODE_HEADER.CODE_HEADER_EXPIRE_EFF_DATE%TYPE;
	  V_CODE_HEADER_DTL_VAL_SIZE	    CODE_HEADER.CODE_HEADER_DTL_VAL_SIZE%TYPE;
    V_CODE_HEADER_DTL_VAL_DEFAULT	  CODE_HEADER.CODE_HEADER_DTL_VAL_DEFAULT%type;
  
   BEGIN
        IF (v_XML.EXISTSNODE('/CODE_HEADER/row_data') = 1) THEN
               
             V_CONTEXT := 'Extracting CODE_HEADER_NAME';
             V_CODE_HEADER_NAME := v_XML.extract('/CODE_HEADER/row_data/CODE_HEADER_NAME/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_HEADER_TYPE';
             V_CODE_HEADER_TYPE := v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_TYPE/text()').GETSTRINGVAL();
                        
       		   V_CONTEXT := 'Extracting CODE_HEADER_DESCRIPTION';
             V_CODE_HEADER_DESCRIPTION := v_XML.extract('/CODE_HEADER/row_data/CODE_HEADER_DESCRIPTION/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_HEADER_EXPIRE_FLAG';
             V_CODE_HEADER_EXPIRE_FLAG := v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_EXPIRE_FLAG/text()').GETSTRINGVAL();
                         
             V_CONTEXT := 'Extracting CODE_HEADER_EXPIRE_USER';
             V_CODE_HEADER_EXPIRE_USER := v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_EXPIRE_USER/text()').GETSTRINGVAL();

			       V_CONTEXT := 'Extracting CODE_HEADER_EXPIRE_EFF_DATE';
             V_CODE_HEADER_EXPIRE_EFF_DATE := TO_DATE(v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_EXPIRE_EFF_DATE/text()').GETSTRINGVAL(),'MM-DD-YYYY');
                         
             V_CONTEXT := 'Extracting CODE_HEADER_DTL_VAL_SIZE';
             V_CODE_HEADER_DTL_VAL_SIZE := v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_DTL_VAL_SIZE/text()').GETSTRINGVAL();
			 
		      	 V_CONTEXT := 'Extracting CODE_HEADER_DTL_VAL_SIZE';
             V_CODE_HEADER_DTL_VAL_DEFAULT := v_XML.EXTRACT('/CODE_HEADER/row_data/CODE_HEADER_DTL_VAL_DEFAULT/text()').GETSTRINGVAL();
                                
             V_CONTEXT := 'Updating in CODE_HEADER';
            
			    UPDATE CODE_HEADER 
					 SET CODE_HEADER_EXPIRE_FLAG			= V_CODE_HEADER_EXPIRE_FLAG,
						   CODE_HEADER_EXPIRE_USER			= V_CODE_HEADER_EXPIRE_USER,
						   CODE_HEADER_EXPIRE_EFF_DATE	= V_CODE_HEADER_EXPIRE_EFF_DATE,
					     CODE_HEADER_DTL_VAL_SIZE		  = V_CODE_HEADER_DTL_VAL_SIZE,
						   CODE_HEADER_DTL_VAL_DEFAULT	= V_CODE_HEADER_DTL_VAL_DEFAULT
				  WHERE CODE_HEADER_NAME   			    = V_CODE_HEADER_NAME
				    AND CODE_HEADER_TYPE    			  = V_CODE_HEADER_TYPE
					  AND CODE_HEADER_DESCRIPTION	  	= V_CODE_HEADER_DESCRIPTION;
		  END IF;
           
END CODE_HEADER_UPDATE;

PROCEDURE CODE_HEADER_DELETE(
/**********************************************************
	CODE_HEADER_DELETE

	This procedure will update existing code header FROM the table CODE_HEADER

<CODE_HEADER>
  <row_data>
      <CODE_HEADER_NAME>RPS_ZONE_CODE</CODE_HEADER_NAME> 
      <CODE_HEADER_TYPE>COD</CODE_HEADER_TYPE> 
      <CODE_HEADER_DESCRIPTION>RPS SHIPPING ZONE CODES</CODE_HEADER_DESCRIPTION>
      <CODE_HEADER_EXPIRE_FLAG>NULL</CODE_HEADER_EXPIRE_FLAG>
      <CODE_HEADER_EXPIRE_USER>NULL</CODE_HEADER_EXPIRE_USER>
	    <CODE_HEADER_EXPIRE_EFF_DATE>NULL</CODE_HEADER_EXPIRE_EFF_DATE>
	    <CODE_HEADER_DTL_VAL_SIZE>1</CODE_HEADER_DTL_VAL_SIZE>
      <CODE_HEADER_DTL_VAL_DEFAULT>NULL</CODE_HEADER_DTL_VAL_DEFAULT>	  
  </row_data>
</CODE_HEADER>
**********************************************************/
    in_XML                VARCHAR2)
IS
  
    V_XML xmltype := SYS.xmltype(IN_XML);
    V_CONTEXT        VARCHAR2(100);
  
  BEGIN
    V_CONTEXT := 'UPDATING FROM CODE_HEADER';
    CCN_PICK_LIST_PKG.CODE_HEADER_UPDATE(IN_XML);  
    
END CODE_HEADER_DELETE;
END CCN_PICK_LIST_PKG;
/

