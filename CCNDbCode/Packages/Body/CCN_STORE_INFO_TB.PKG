create or replace PACKAGE BODY CCN_STORE_INFO_TB
AS

/*********************************************************** 
This package is will insert data in CCN_INFO_TB table

created :  04/17/2014 nxk 
**************************************************/

 PROCEDURE  CCN_INFO_TB_INSERT
/**********************************************************
The procedure is intended insert the data into the CCN_COST_CENTER_INFO.
Created  : 02/06/2018 bxa919 CCN project Team.... 
Modified :03/21/2018 bxa91 CCN Project  Team...
          Initialized the all variable to NULL initially
Modified : 03/26/2018 bxa919 CCN project Team...
           Added truncate condition in order to clear the records before 
           re-loading new records in the table 
		 : 03/26/2018 bxa919 CCN project Team...
           Added truncate condition in order to clear the records before 
           re-loading  new records in the table 
           Replaced OPEN_DATE column with PERP_INV_START_DATE date as
           per the Mapping document
**********************************************************/
IS
    CURSOR CUR_CC IS
        SELECT CC.*
          FROM COST_CENTER_VW CC
       ORDER BY 1;

   CURSOR CUR_C(P_COST_CENTER_CODE VARCHAR2) IS
       SELECT POS_NON_STORE_IND
         FROM COST_CENTER
        WHERE COST_CENTER_CODE=P_COST_CENTER_CODE;  

    CURSOR CUR_FACT_DIV (P_COST_CENTER_CODE VARCHAR2) IS
        SELECT DIVISION
          FROM HIERARCHY_DETAIL_VIEW
         WHERE HRCHY_HDR_NAME = 'FACTS_DIVISION'
           AND COST_CENTER_CODE=P_COST_CENTER_CODE;

    CURSOR CUR_STORE_BK(P_COST_CENTER_CODE VARCHAR2) IS
        SELECT BOOK_KEEPER_NBR  
          FROM STORES_BOOK_KEEPER_NBR_VW
         WHERE COST_CENTER_CODE = P_COST_CENTER_CODE;

    CURSOR CUR_LEGACY (P_COST_CENTER_CODE VARCHAR2) IS 
        SELECT LEGACY_DIVISION
          FROM HIERARCHY_DETAIL_VIEW
         WHERE HRCHY_HDR_NAME = 'LEGACY_GL_DIVISION'
           AND COST_CENTER_CODE=P_COST_CENTER_CODE;

    CURSOR CUR_HIRE (P_COST_CENTER_CODE VARCHAR2) IS 
        SELECT DISTRICT,
               AREA,    
               DIVISION,
               DIVISION_NAME,
               AREA_NAME,
               DISTRICT_NAME
          FROM GLOBAL_HIERARCHY_ATTRBT_VW
         WHERE COST_CENTER_CODE=P_COST_CENTER_CODE;

    CURSOR CUR_ADDRESS IS
        SELECT COST_CENTER_CODE,
               ADDRESS_LINE_1,
               ADDRESS_LINE_2,
               CITY,
               STATE_CODE,
               POSTAL_CODE,
               ZIP_CODE,
               ZIP_CODE_4,
               COUNTY,
               COUNTRY_CODE
         FROM  ADDRESS_VW
         WHERE ADDRESS_TYPE='M' AND  EXPIRATION_DATE IS NULL ;

    TYPE ADDRESS_VW_REC_TYPE IS RECORD (COST_CENTER_CODE   VARCHAR2(6),
                                        ADDRESS_LINE_1     VARCHAR2(2000),
                                        ADDRESS_LINE_2     VARCHAR2(2000),
                                        CITY               VARCHAR2(100),
                                        STATE_CODE         VARCHAR2(100),
                                        POSTAL_CODE        VARCHAR2(100),
                                        ZIP_CODE           VARCHAR2(100),
                                        ZIP_CODE_4         VARCHAR2(100),
                                        COUNTY             VARCHAR2(100),
                                        COUNTRY_CODE       VARCHAR2(100));

    TYPE RT_ADDRESS_VW IS TABLE OF ADDRESS_VW_REC_TYPE INDEX BY VARCHAR2(6);
    AAT_ADDRESS_VW RT_ADDRESS_VW;

    /*Variable declaration*/
    V_ADDRESS_LINE_1           ADDRESS_VW.ADDRESS_LINE_1%TYPE;     
    V_ADDRESS_LINE_2           ADDRESS_VW.ADDRESS_LINE_2%TYPE;    
    V_CITY                     ADDRESS_VW.CITY%TYPE;
    V_STATE_CODE               ADDRESS_VW.STATE_CODE%TYPE;
    V_POSTAL_CODE              ADDRESS_VW.POSTAL_CODE%TYPE;  
    V_ZIP_CODE                 VARCHAR2(10);
    V_COUNTY                   ADDRESS_VW.COUNTY%TYPE;
    V_COUNTRY_CODE             ADDRESS_VW.COUNTRY_CODE%TYPE; 
    V_DIVISION                 GLOBAL_HIERARCHY_ATTRBT_VW.DIVISION%TYPE;
    V_DISTRICT                 GLOBAL_HIERARCHY_ATTRBT_VW.DISTRICT%TYPE;
    V_AREA                     GLOBAL_HIERARCHY_ATTRBT_VW.AREA%TYPE;
    V_DIVISION_LEGACY          LEGACY_GL_DIVISION_DETAIL_VIEW.DIVISION%TYPE;
    V_BOOK_KEEPER_NBR          STORES_BOOK_KEEPER_NBR_VW.BOOK_KEEPER_NBR%TYPE;
    V_DIVISION_FACT            FACTS_DIVISION_DETAIL_VIEW.DIVISION%TYPE;
    V_DIVISION_NAME            GLOBAL_HIERARCHY_DETAIL_VIEW.DIVISION%TYPE;
    V_DISTRICT_NAME            GLOBAL_HIERARCHY_DETAIL_VIEW.DISTRICT%TYPE;
    V_AREA_NAME                GLOBAL_HIERARCHY_DETAIL_VIEW.AREA%TYPE;
    V_POS_NON_STORE_IND        COST_CENTER.POS_NON_STORE_IND%TYPE;
    V_ADDRESS_ZIP              VARCHAR2(10);
    V_COMMIT                   VARCHAR2(5000):=0; 
BEGIN
    /* In order to re-load  new records in table .The exsisting records need to be deleted as everytime the Store Info file is generated 
    the new records need to be inserted*/
    EXECUTE IMMEDIATE 'TRUNCATE TABLE CCN_COST_CENTER_INFO';

    FOR rec IN CUR_ADDRESS LOOP
        AAT_ADDRESS_VW(REC.COST_CENTER_CODE) := rec;
    END LOOP;

    FOR REC_CC IN CUR_CC LOOP
        --Variable initialize to NULL
        V_ADDRESS_LINE_1       := NULL;
        V_ADDRESS_LINE_2       := NULL;
        V_CITY                 := NULL;
        V_STATE_CODE           := NULL;
        V_POSTAL_CODE          := NULL;
        V_COUNTY               := NULL;
        V_COUNTRY_CODE         := NULL;
        V_ADDRESS_ZIP          := NULL;
        /*Fetch Address Information*/
        IF AAT_ADDRESS_VW.EXISTS(REC_CC.COST_CENTER_CODE) THEN
             V_ADDRESS_LINE_1 := TRIM(UPPER((AAT_ADDRESS_VW(REC_CC.COST_CENTER_CODE).ADDRESS_LINE_1)));
             V_ADDRESS_LINE_2 := TRIM(UPPER((AAT_ADDRESS_VW(REC_CC.COST_CENTER_CODE).ADDRESS_LINE_2)));
             V_CITY           := TRIM(UPPER(AAT_ADDRESS_VW(REC_CC.COST_CENTER_CODE).CITY));
             V_STATE_CODE     := TRIM(UPPER(AAT_ADDRESS_VW(REC_CC.COST_CENTER_CODE).STATE_CODE));
             V_POSTAL_CODE    := TRIM(UPPER(AAT_ADDRESS_VW(REC_CC.COST_CENTER_CODE).POSTAL_CODE));
             V_COUNTY         := TRIM(UPPER(AAT_ADDRESS_VW(REC_CC.COST_CENTER_CODE).COUNTY));
             V_COUNTRY_CODE   := TRIM(UPPER(AAT_ADDRESS_VW(REC_CC.COST_CENTER_CODE).COUNTRY_CODE));

             IF AAT_ADDRESS_VW(REC_CC.COST_CENTER_CODE).ZIP_CODE IS NOT NULL THEN 
                 V_ZIP_CODE := LTRIM(RTRIM(AAT_ADDRESS_VW(REC_CC.COST_CENTER_CODE).ZIP_CODE||' ' ||AAT_ADDRESS_VW(REC_CC.COST_CENTER_CODE).ZIP_CODE_4) );
             END IF;
        END IF;
        /*  zip/postal values are populated based on country code*/
        IF V_COUNTRY_CODE IN ('USA','PRI')THEN
            V_ADDRESS_ZIP :=V_ZIP_CODE;
        ELSE
            V_ADDRESS_ZIP :=V_POSTAL_CODE;
        END IF;
        --Variable initialize to NULL
        V_DIVISION_FACT       := NULL;
        /* Fetch Fact Division Information*/
        FOR REC_FACT IN CUR_FACT_DIV(REC_CC.COST_CENTER_CODE) LOOP
            V_DIVISION_FACT:=REC_FACT.DIVISION;
        END LOOP; 
       
        --Variable initialize to NULL
        V_BOOK_KEEPER_NBR       := NULL;        
        /*Fetch Store Information*/
        FOR REC_STORE_BK IN CUR_STORE_BK(REC_CC.COST_CENTER_CODE) LOOP
             V_BOOK_KEEPER_NBR        := REC_STORE_BK.BOOK_KEEPER_NBR;
        END LOOP;
                    
        --Variable initialize to NULL
        V_POS_NON_STORE_IND      := NULL;   
        /*Fetch POS download Information*/
        FOR REC_CC_POS IN CUR_C(REC_CC.COST_CENTER_CODE) LOOP
             V_POS_NON_STORE_IND        := REC_CC_POS.POS_NON_STORE_IND;
        END LOOP;

        --Variable initialize to NULL
        V_DIVISION_LEGACY        := NULL; 
        /*Fetch Legacy  Information*/
        FOR REC_LEGACY IN CUR_LEGACY(REC_CC.COST_CENTER_CODE) LOOP
             V_DIVISION_LEGACY       := REC_LEGACY.LEGACY_DIVISION;
        END LOOP; 

        --Variable initialize to NULL
        V_DIVISION              := NULL;
        V_DIVISION_NAME         := NULL;
        V_AREA                  := NULL;
        V_AREA_NAME             := NULL;
        V_DISTRICT              := NULL;
        V_DISTRICT_NAME         := NULL;

       /*Fetch Hierarchy Information*/
        FOR REC_HIER IN CUR_HIRE(REC_CC.COST_CENTER_CODE) LOOP
            V_DIVISION              := REC_HIER.DIVISION;
            V_DISTRICT              := REC_HIER.DISTRICT;
            V_AREA                  := REC_HIER.AREA;
            V_DIVISION_NAME         := REC_HIER.DIVISION_NAME;
            V_DISTRICT_NAME         := REC_HIER.DISTRICT_NAME;
            V_AREA_NAME             := REC_HIER.AREA_NAME;
        END LOOP;

        IF TRIM(REC_CC.COST_CENTER_CODE) IS NOT NULL THEN
            INSERT INTO CCN_COST_CENTER_INFO
            VALUES ('1',                                                                                       ---IGNORE
                    REC_CC.COST_CENTER_CODE,                                                                   ---COST_CENTER
                    V_DIVISION_FACT,                                                                           ---DIVISION
                    SUBSTR(REC_CC.COST_CENTER_CODE,3,6),                                                       ---OLD_COST_CENTER
                    REC_CC.COST_CENTER_NAME,                                                                   ---COST_CENTER_NAME
                    NULL,                                                                                      ---CREDIT_CENTER	
                    V_BOOK_KEEPER_NBR,                                                                         ---BOOKKEEPER_UAR
                    REC_CC.ACQUISITION_CODE,                                                                   ---AQUISITION_CODE
                    V_DIVISION || V_AREA || V_DISTRICT,                                                        ---DAD
                    COSTCNTR.COMMON_TOOLS.GET_PHONE_NUMBER ( REC_CC.COST_CENTER_CODE, 'PRI'),                  ---PHONE_NBR
                    REC_CC.RURAL_METRO_ZONE_CODE,                                                              ---RURAL_METRO_ZONE
                    REC_CC.CATEGORY,                                                                           ---COST_CENTER_CATEGORY
                    REC_CC.STATEMENT_TYPE,                                                                     ---GNRC_GROUP_IND
                    V_ADDRESS_LINE_1,                                                                          ---ADDRESS_LINE1
                    V_ADDRESS_LINE_2,                                                                          ---ADDRESS_LINE2
                    V_CITY,                                                                                    ---CITY
                    V_STATE_CODE,                                                                              ---STATE
                    V_ADDRESS_ZIP,                                                                             ---ZIP_CODE4
                    V_COUNTY,                                                                                  ---COUNTY
                    V_COUNTRY_CODE,                                                                            ---COUNTRY_CODE
                    V_DIVISION,                                                                                ---COST_CENTER_DIV5101
                    V_DIVISION,                                                                                ---COST_CENTER_DIVISION
                    V_AREA,                                                                                    ---COST_CENTER_AREA
                    V_DISTRICT,                                                                                ---COST_CENTER_DISTICT
                    V_DIVISION_LEGACY,                                                                         ---DIVISION_SGL
                    REC_CC.STATUS_CODE,                                                                        ---STATUS_CODE
                    REC_CC.TYPE_CODE,                                                                          ---TYPE_CODE
                    REC_CC.SALES_VOL_CLASS_CODE,                                                               ---SALES_VOLUME_CLS_CD
                    REC_CC.BOOK_PLN_PROFILE_CD,                                                                ---IWC_BK_PLN_PROF_CD
                    NULL,                                                                                      ---IWC_BIN_COUNT
                    NULL,                                                                                      ---IWC_PHY_BIN_COUNT
                    NULL,                                                                                      ---IWC_BIN_CNT_5402
                    NULL,                                                                                      ---IWC_BIN_CNT_5403
                    NULL,                                                                                      ---BIN_VOL_IND
                    REC_CC.SPRAY_EQP_RPR_IND,                                                                  ---SPRY_EQUIP_RPR_IND
                    NULL,                                                                                      ---SPRY_EQUIP_STK_IND
                    NULL,                                                                                      ---IM_FACILITY_IND
                    NULL,                                                                                      ---CC_FACILITY_IND
                    REC_CC.POP_KIT_CODE,                                                                       ---POP_KIT_COUNT
                    NULL,                                                                                      ---DSC_CODE_PAINT
                    NULL,                                                                                      ---DSC_CODE_AP
                    NULL,                                                                                      ---DCS_CODE_WC
                    UPPER(REC_CC.FIRST_NAME),                                                                  ---EMP_FIRST_NAME
                    UPPER(REC_CC.MIDDLE_INITIAL),                                                              ---EMP_MIDDL_NAME
                    UPPER(REC_CC.LAST_NAME),                                                                   ---EMP_LAST_NAME
                    NULL,                                                                                      ---ADI_CODE
                    NULL,                                                                                      ---SMSA_CODE
                    REC_CC.TERRITORY_TYPE_BUSN_CODE,                                                           ---SALES_REP_TYPE_BUSN
                    REC_CC.MISSION_TYPE_CODE,                                                                  ---MISSION_TYPE
                    COSTCNTR.COMMON_TOOLS.GET_PHONE_NUMBER ( REC_CC.COST_CENTER_CODE, 'FAX') ,                 ---FAX_NUMBER
                    REC_CC.TERR_HOME_STORE_NO,                                                                 ---SALES_REP_HOME_STORE
                    V_POS_NON_STORE_IND,                                                                       ---SHELF_LABEL_CODE
                    NULL,                                                                                      ---SHELF_LABEL_SET_CT
                    NULL,                                                                                      ---SHELF_LABEL_ACT_CD
                    REC_CC.POLLING_STATUS_CODE,                                                                ---POLLING_STATUS
                    NULL,                                                                                      ---COUNTY_CODE
                    NULL,                                                                                      ---ADDR_STATE_CD_NUM
                    REC_CC.DUNS_NUMBER,                                                                        ---CCNTR_DUNS_NBR
                    TO_CHAR(TRUNC(REC_CC.PERP_INV_START_DATE),'DDMMYYYY'),                                     ---CCNTR_OPEN_DATE
                    TO_CHAR(TRUNC(REC_CC.MOVE_DATE),'DDMMYYYY'),                                               ---CCNTR_MOVE_DATE
                    TO_CHAR(TRUNC(REC_CC.CLOSE_DATE),'DDMMYYYY'),                                              ---CCNTR_CLOSE_DATE
                    RPAD(NVL(V_DIVISION_NAME,' '),35,' ')||RPAD(NVL(V_AREA_NAME,' '),35,' ')||V_DISTRICT_NAME, ---FILLER
                    'STCCNFILE'||'1'||TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'),                                     ---FILE_NAME
                    NULL                                                                                       ---FILLER_BYTE
                   );
         END IF;
        V_COMMIT := V_COMMIT + 1;
        IF V_COMMIT > 500 THEN
             COMMIT;
             V_COMMIT := 0;
        END IF;
    END LOOP;
EXCEPTION 
    WHEN OTHERS THEN
        RAISE;
END CCN_INFO_TB_INSERT;

PROCEDURE  GENERATE_CCN_INFO_FILE
/**********************************************************
The procedure is intended to generate below files with Store Info details.
1.CCN08900_022818.TXT. 

Created  : 02/28/2018 bxa919 CCN project Team.... 
Modified : 03/16/2018 bxa919 CCN Project Team...
           Added condition in EXCEPTION to check the status of the file
           before closing it.If the file is open then it need to closed.

**********************************************************/
IS
    CURSOR CUR_COST_CENTER IS
        SELECT CC.*
          FROM CCN_COST_CENTER_INFO CC
         ORDER BY COST_CENTER;

    /*Variable declaration*/
    PATH                     VARCHAR2(50) := 'CCN_DATAFILES'; -- DIRECTORY CREATED IN ORACLE DATABASE
    FILENAME                 VARCHAR2(50) := 'STORE_INFO_IN_TB_CCN08900_D_' || TO_CHAR(SYSDATE,'RRMMDD') || '.dat'; --File Name STORE_INFO_TB__Dyymmdd
    OUTPUT_FILE              UTL_FILE.FILE_TYPE;
    V_CLOB                   CLOB;
    V_CLOB_FOR_EMAIL         CLOB;
    V_COUNT                  VARCHAR2(5000):=0;
BEGIN
    OUTPUT_FILE := UTL_FILE.FOPEN (PATH ,
                                   FILENAME,
                                   'W' --BINARY
                                   ,32767);

    FOR REC_CC IN CUR_COST_CENTER LOOP
        IF TRIM(REC_CC.COST_CENTER) IS NOT NULL THEN
            V_CLOB :=  REC_CC.IGNORE||                                              ---IGNORE
                       RPAD(NVL(REC_CC.COST_CENTER,' '),6,' ')||                    ---COST_CENTER
                       RPAD(NVL(REC_CC.DIVISION,' '),4,' ')||                       ---DIVISION
                       RPAD(NVL(REC_CC.OLD_COST_CENTER,' '),4,' ')||                ---OLD_COST_CENTER
                       RPAD(NVL(REC_CC.COST_CENTER_NAME,' '),35,' ')||              ---COST_CENTER_NAME
                       RPAD(NVL(REC_CC.CREDIT_CENTER,' '),5,' ')||                  ---CREDIT_CENTER
                       RPAD(NVL(REC_CC.BOOKKEEPER_UAR,' '),30,' ')||                ---BOOKKEEPER_UAR
                       RPAD(NVL(REC_CC.AQUISITION_CODE,' '),3,' ')||                ---AQUISITION_CODE
                       RPAD(NVL(REC_CC.DAD,' '),6,' ')||                            ---DAD
                       RPAD(NVL(REC_CC.PHONE_NBR,' '),14,' ')||                     ---PHONE_NBR
                       RPAD(NVL(REC_CC.RURAL_METRO_ZONE,' '),1,' ')||               ---RURAL_METRO_ZONE
                       RPAD(NVL(REC_CC.COST_CENTER_CATEGORY,' '),1,' ')||           ---COST_CENTER_CATEGORY
                       RPAD(NVL(REC_CC.GNRC_GROUP_IND,' '),2,' ')||                 ---GNRC_GROUP_IND
                       RPAD(NVL(REC_CC.ADDRESS_LINE1,' '),30,' ')||                 ---ADDRESS_LINE1
                       RPAD(NVL(REC_CC.ADDRESS_LINE2,' '),30,' ')||                 ---ADDRESS_LINE2
                       RPAD(NVL(REC_CC.CITY,' '),30,' ')||                          ---CITY
                       RPAD(NVL(REC_CC.STATE,' '),2,' ')||                          ---STATE
                       RPAD(NVL(REC_CC.ZIP_CODE4,' '),10,' ')||                     ---ZIP_CODE4
                       RPAD(NVL(REC_CC.COUNTY,' '),20,' ')||                        ---COUNTY
                       RPAD(NVL(REC_CC.COUNTRY_CODE,' '),5,' ')||                   ---COUNTRY_CODE
                       RPAD(NVL(REC_CC.COST_CENTER_DIV5101,' '),2,' ')||            ---COST_CENTER_DIV5101
                       RPAD(NVL(REC_CC.COST_CENTER_DIVISION,' '),2,' ')||           ---COST_CENTER_DIVISION
                       RPAD(NVL(REC_CC.COST_CENTER_AREA,' '),2,' ')||               ---COST_CENTER_AREA
                       RPAD(NVL(REC_CC.COST_CENTER_DISTICT,' '),2,' ')||            ---COST_CENTER_DISTICT
                       RPAD(NVL(REC_CC.DIVISION_SGL,' '),3,' ')||                   ---DIVISION_SGL
                       RPAD(NVL(REC_CC.STATUS_CODE,' '),1,' ')||                    ---STATUS_CODE
                       RPAD(NVL(REC_CC.TYPE_CODE,' '),2,' ')||                      ---TYPE_CODE
                       RPAD(NVL(REC_CC.SALES_VOLUME_CLS_CD,' '),2,' ')||            ---SALES_VOLUME_CLS_CD
                       RPAD(NVL(REC_CC.IWC_BK_PLN_PROF_CD,'00'),2,' ')||            ---IWC_BK_PLN_PROF_CD
                       RPAD(NVL(REC_CC.IWC_BIN_COUNT,'   0'),4,' ')||               ---IWC_BIN_COUNT
                       RPAD(NVL(REC_CC.IWC_PHY_BIN_COUNT,'0000'),4,' ')||           ---IWC_PHY_BIN_COUNT
                       RPAD(NVL(REC_CC.IWC_BIN_CNT_5402,'0000'),4,' ')||            ---IWC_BIN_CNT_5402
                       RPAD(NVL(REC_CC.IWC_BIN_CNT_5403,'0000'),4,' ')||            ---IWC_BIN_CNT_5403
                       RPAD(NVL(REC_CC.BIN_VOL_IND,' '),1,' ')||                    ---BIN_VOL_IND
                       RPAD(NVL(REC_CC.SPRY_EQUIP_RPR_IND,' '),1,' ')||             ---SPRY_EQUIP_RPR_IND
                       RPAD(NVL(REC_CC.SPRY_EQUIP_STK_IND,' '),1,' ')||             ---SPRY_EQUIP_STK_IND
                       RPAD(NVL(REC_CC.IM_FACILITY_IND,' '),1,' ')||                ---IM_FACILITY_IND
                       RPAD(NVL(REC_CC.CC_FACILITY_IND,' '),1,' ')||                ---CC_FACILITY_IND
                       RPAD(NVL(REC_CC.POP_KIT_COUNT,' '),1,' ')||                  ---POP_KIT_COUNT
                       RPAD(NVL(REC_CC.DSC_CODE_PAINT,' '),4,' ')||                 ---DSC_CODE_PAINT
                       RPAD(NVL(REC_CC.DSC_CODE_AP,' '),4,' ')||                    ---DSC_CODE_AP
                       RPAD(NVL(REC_CC.DCS_CODE_WC,' '),4,' ')||                    ---DCS_CODE_WC
                       RPAD(NVL(REC_CC.EMP_FIRST_NAME,' '),12,' ')||                ---EMP_FIRST_NAME
                       RPAD(NVL(REC_CC.EMP_MIDDL_NAME,' '),2,' ')||                 ---EMP_MIDDL_NAME
                       RPAD(NVL(REC_CC.EMP_LAST_NAME,' '),17,' ')||                 ---EMP_LAST_NAME
                       RPAD(NVL(REC_CC.ADI_CODE,' '),3,' ')||                       ---ADI_CODE
                       RPAD(NVL(REC_CC.SMSA_CODE,' '),4,' ')||                      ---SMSA_CODE
                       RPAD(NVL(REC_CC.SALES_REP_TYPE_BUSN,' '),2,' ')||            ---SALES_REP_TYPE_BUSN
                       RPAD(NVL(REC_CC.MISSION_TYPE,' '),2,' ')||                   ---MISSION_TYPE
                       RPAD(NVL(REC_CC.FAX_NUMBER,' '),14,' ')||                    ---FAX_NUMBER
                       RPAD(NVL(REC_CC.SALES_REP_HOME_STORE,' '),4,' ')||           ---SALES_REP_HOME_STORE
                       RPAD(NVL(REC_CC.SHELF_LABEL_CODE,' '),1,' ')||               ---SHELF_LABEL_CODE
                       RPAD(NVL(REC_CC.SHELF_LABEL_SET_CT,'000'),3,' ')||           ---SHELF_LABEL_SET_CT
                       RPAD(NVL(REC_CC.SHELF_LABEL_ACT_CD,' '),1,' ')||             ---SHELF_LABEL_ACT_CD
                       RPAD(NVL(REC_CC.POLLING_STATUS,' '),1,' ')||                 ---POLLING_STATUS
                       RPAD(NVL(REC_CC.COUNTY_CODE,' '),3,' ')||                    ---COUNTY_CODE
                       RPAD(NVL(REC_CC.ADDR_STATE_CD_NUM,' '),2,' ')||              ---ADDR_STATE_CD_NUM
                       RPAD(NVL(REC_CC.CCNTR_DUNS_NBR,' '),9,' ')||                 ---CCNTR_DUNS_NBR
                       RPAD(NVL(REC_CC.CCNTR_OPEN_DATE,' '),8,' ')||                ---CCNTR_OPEN_DATE
                       RPAD(NVL(REC_CC.CCNTR_MOVE_DATE,'00000000'),8,' ')||         ---CCNTR_MOVE_DATE
                       RPAD(NVL(REC_CC.CCNTR_CLOSE_DATE,'00000000'),8,' ')||        ---CCNTR_CLOSE_DATE
                       RPAD(NVL(REC_CC.FILLER,' '),180,' ')||                       ---FILLER
                       REC_CC.FILE_NAME||                                           ---FILE_NAME
                       RPAD(NVL(REC_CC.FILLER_BYTE,' '),1,' ')||                    ---FILLER_BYTE
                       CHR(13)                                                      ---New Line (File Separator)
                       ;
        END IF;
        IF V_CLOB <> EMPTY_CLOB() THEN
            UTL_FILE.PUT_LINE(OUTPUT_FILE, V_CLOB, TRUE);
        END IF;
    END LOOP;

    UTL_FILE.FCLOSE(OUTPUT_FILE);
   --Sending mail for the category 'CCN_STORE_INFO_IN_TB'
   IF V_CLOB <> EMPTY_CLOB() THEN 
      MAIL_PKG.SEND_MAIL('CCN_STORE_INFO_IN_TB');
   END IF;

EXCEPTION 
    WHEN OTHERS THEN
        IF UTL_FILE.IS_OPEN(OUTPUT_FILE) THEN
            UTL_FILE.FCLOSE(OUTPUT_FILE);
        END IF;
        RAISE;
END GENERATE_CCN_INFO_FILE ;
END CCN_STORE_INFO_TB ;