head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2012.09.14.14.24.54;	author TAL946;	state dead;
branches;
next	1.1;
deltatype	text;
kopt	kv;
permissions	444;
commitid	1bc050533e34664e;
filename	ADMINISTRATION_TAPI.pkg;

1.1
date	2012.04.18.17.09.16;	author sw\mdh01r;	state Exp;
branches;
next	;
deltatype	text;
kopt	kv;
permissions	666;
commitid	16c44f8ef53b6a4e;
filename	ADMINISTRATION_TAPI.pkg;


desc
@@


1.2
log
@
Committed on the Free edition of March Hare Software CVSNT Server.
Upgrade to CVS Suite for more features and support:
http://march-hare.com/cvsnt/
@
text
@create or replace
PACKAGE body ADMINISTRATION_tapi
IS


  -- insert
PROCEDURE ins(
    IN_CATEGORY             IN ADMINISTRATION.CATEGORY%type ,
    IN_COST_CENTER_CODE     IN ADMINISTRATION.COST_CENTER_CODE%type ,
    IN_INTERNAL_MAIL_NUMBER IN ADMINISTRATION.INTERNAL_MAIL_NUMBER%type DEFAULT NULL )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  INSERT
  INTO ADMINISTRATION
    (
      CATEGORY ,
      COST_CENTER_CODE ,
      INTERNAL_MAIL_NUMBER
    )
    VALUES
    (
      IN_CATEGORY ,
      IN_COST_CENTER_CODE ,
      IN_INTERNAL_MAIL_NUMBER
    );

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADMINISTRATION Insert');

END;

-- update
PROCEDURE upd
  (
    IN_CATEGORY             IN ADMINISTRATION.CATEGORY%type ,
    IN_COST_CENTER_CODE     IN ADMINISTRATION.COST_CENTER_CODE%type ,
    IN_INTERNAL_MAIL_NUMBER IN ADMINISTRATION.INTERNAL_MAIL_NUMBER%type DEFAULT NULL
  )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  UPDATE ADMINISTRATION
  SET INTERNAL_MAIL_NUMBER = IN_INTERNAL_MAIL_NUMBER
  WHERE COST_CENTER_CODE   = IN_COST_CENTER_CODE
  AND CATEGORY             = IN_CATEGORY;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADMINISTRATION Update');

END;

-- del
PROCEDURE del(
    IN_COST_CENTER_CODE IN ADMINISTRATION.COST_CENTER_CODE%type ,
    IN_CATEGORY         IN ADMINISTRATION.CATEGORY%type )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  DELETE
  FROM ADMINISTRATION
  WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
  AND CATEGORY           = IN_CATEGORY;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADMINISTRATION Delete');

END;

END ADMINISTRATION_tapi;@


1.1
log
@*** empty log message ***
@
text
@@

