create or replace PACKAGE BODY mail_pkg AS

PROCEDURE SEND_MAIL( 
/**********************************************************
SEND_MAIL

  This procedure will send emails based on the MAIL_CATEGORY of the mail
  Currently we have below categories:
                    INIT_LOAD_START
                    INIT_LOAD_END
                    HIER_LOAD_START
                    HIER_LOAD_END
                    STOP_JBOSS
                    START_JBOSS
                    INCOMPLETE_CC
                    ADD_TERMINAL
for more info please refer to the documentation on mail_pkg

IN_MAIL_CATEGORY  - Input MAIL CATEGORY for which email needs to be sent
IN_TERMINL_NUMBER - The Terminal Number being added
IN_COST_CENTER_CD - The Cost Center for which the terminal number was added to

created : 03/03/2013 sxh487 CCN Project....
**********************************************************/
IN_MAIL_CATEGORY VARCHAR2,
IN_TERMINL_NUMBER IN NUMBER default NULL,
IN_COST_CENTER_CD IN VARCHAR2 default NULL)

IS
   v_mail_host   VARCHAR2 (30) := 'smtp.sherwin.com'; --'sthq.sherwin.com';
   v_mail_conn   UTL_SMTP.connection;
   v_recipient   VARCHAR2(32000);
   v_index       number;
   crlf          VARCHAR2 (2) := CHR (13) || CHR (10);
   
   l_boundary1    VARCHAR2(50) := '-----AABCDEFBBCCC0123456789DE1';
   l_boundary     VARCHAR2(50) := '-----AABCDEFBBCCC0123456789DE';
   v_add_src      VARCHAR2(4000);
   VTOLIST        VARCHAR2(4000);
   v_addr         VARCHAR2(4000);  
   SLEN           NUMBER := 1;
   V_INCOMPLETE_CC_COUNT NUMBER := 0;
   V_message     VARCHAR2(4000);
   V_ENVIRONMENT VARCHAR2(100);

BEGIN

    select sys_context('USERENV','SERVICE_NAME') INTO V_ENVIRONMENT from dual;
    IF V_ENVIRONMENT = 'STCCND' THEN
        V_ENVIRONMENT := 'Development : ';
    ELSIF V_ENVIRONMENT = 'STCCNT' THEN
        V_ENVIRONMENT := 'Test : ';
    ELSIF V_ENVIRONMENT = 'STCCNQ' THEN
        V_ENVIRONMENT := 'QA : ';
    ELSIF V_ENVIRONMENT = 'STCCNP' THEN
        V_ENVIRONMENT := 'Production : ';
    ELSE
        V_ENVIRONMENT := 'Unknown : ';
    END IF;
    
    --Loop through all the emails for this passed category code
    --select the email IDs of all the recipients in the group based on the MAIL_CATEGORY
    --ex: MAIL_CATEGORY = 'INCOMPLETE_CC' has a GROUP_ID of 5
     FOR REC IN (SELECT A.*, B.MAIL_ID FROM MAILING_DETAILS A, MAILING_GROUP B 
                  WHERE A.MAIL_CATEGORY = IN_MAIL_CATEGORY
                    AND A.group_id = b.group_id) LOOP

      --Don't send an email if there are no incomeplete cost centers
      IF IN_MAIL_CATEGORY = 'INCOMPLETE_CC' THEN
         BEGIN
            SELECT COUNT(*) INTO V_INCOMPLETE_CC_COUNT
              FROM COST_CENTER
             WHERE GLOBAL_HIERARCHY_IND <> 'Y';
         EXCEPTION
            WHEN OTHERS THEN
               V_INCOMPLETE_CC_COUNT := 0;
         END;
         IF V_INCOMPLETE_CC_COUNT = 0 THEN
            EXIT;
         END IF;
      END IF;

        v_mail_conn := UTL_SMTP.open_connection (v_mail_host, 25);
        UTL_SMTP.helo (v_mail_conn, v_mail_host);
        UTL_SMTP.mail (v_mail_conn, rec.FROM_P);

            IF(instr(rec.mail_id,';') = 0) then
		 UTL_SMTP.RCPT(V_MAIL_CONN, REC.MAIL_ID);
                 VTOLIST := REC.MAIL_ID;
            ELSE
		V_ADD_SRC := REC.MAIL_ID || ';';
		WHILE(instr(v_add_src,';',slen) > 0) LOOP
                      v_addr := substr(v_add_src, slen, instr(substr(v_add_src, slen),';')-1);
		      slen := slen+instr(substr(v_add_src, slen),';');
                      vTolist := vTolist || ', ' || v_addr;
                      utl_smtp.rcpt(v_mail_conn, v_addr);
                END LOOP;

	    END IF;
    
      IF IN_MAIL_CATEGORY = 'ADD_TERMINAL' THEN
         V_MESSAGE := REPLACE(REPLACE(REC.MESSAGE, 'XXXXX', IN_TERMINL_NUMBER), 'CCCCCC' ,IN_COST_CENTER_CD);
      ELSE
         V_MESSAGE := REC.MESSAGE;
      END IF;
            
      UTL_SMTP.open_data(v_mail_conn);
      --Set the required message paremeters
      UTL_SMTP.write_data(v_mail_conn, 'Date: ' || TO_CHAR(SYSDATE, 'DD-MON-YYYY HH24:MI:SS') || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'To: ' || vTolist || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'From: ' || rec.FROM_P || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'Subject: ' || V_ENVIRONMENT || rec.SUBJECT || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'MIME-Version: 1.0' || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'Content-Type: multipart/mixed; boundary="' || l_boundary || '"' || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);

      --Boundary should be set for this email body
      UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary1 || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'Content-Type: text/plain' || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'Hi All' || crlf || crlf
                                       || V_MESSAGE  || CRLF || CRLF
                                       || 'Please let us know if there are any issues.' || CRLF || CRLF
                                       || REC.SIGNATURE || CRLF);
    
      IF IN_MAIL_CATEGORY = 'INCOMPLETE_CC' THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Type: text/plain' || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || 'incomplete_cc.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Header fot the excel that is being sent
         UTL_SMTP.write_data(v_mail_conn, 'Cost Center Number, Cost Center Name,' ||  UTL_TCP.crlf);
         --Content for the excel that is being sent 
         FOR rec IN (SELECT COST_CENTER_CODE, COST_CENTER_NAME FROM COST_CENTER WHERE GLOBAL_HIERARCHY_IND <> 'Y') LOOP
            UTL_SMTP.write_data(v_mail_conn, rec.COST_CENTER_CODE || ',' || rec.COST_CENTER_NAME || ',' || UTL_TCP.crlf);
         END LOOP;
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      END IF;

      
      UTL_SMTP.close_data(v_mail_conn);  
      UTL_SMTP.quit (v_mail_conn);
   END LOOP;

EXCEPTION
   WHEN UTL_SMTP.transient_error OR UTL_SMTP.permanent_error
   THEN
      raise_application_error (-20000, 'Unable to send mail: ' || SQLERRM);
END SEND_MAIL;


END mail_pkg;
