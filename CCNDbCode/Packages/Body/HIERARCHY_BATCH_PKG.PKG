create or replace PACKAGE BODY          HIERARCHY_BATCH_PKG
AS
/*******************************************************************************
  This Package is a wrapper for all batch processes of ccn application

Created : 10/02/2015 SX410 CCN Project....
Changed :
**********************************************************/
FUNCTION IS_CURR_REC_READY_FOR_HIST(
/******************************************************************************
  This function will check is the current record can be moved to history or not

Created : 05/11/2017 jxc517 CCN Project Team....
Changed : 06/12/2017 jxc517 CCN Project Team....
          Added condition to check for deleting records expiration date + 1 instead of 
          SYSDATE + 1 as if anything fails in future to current we can not delete them
          from here
******************************************************************************/
IN_HIERARCHY_DETAIL_REC   IN     HIERARCHY_DETAIL%ROWTYPE) RETURN VARCHAR2
IS
    V_RETURN_VAL    VARCHAR2(1) := 'N';
    V_COUNT         NUMBER      := 0;
BEGIN
    --Check if there is a future record coming into current the next day
    SELECT COUNT(*)
      INTO V_COUNT
      FROM HIERARCHY_DETAIL_FUTURE
     WHERE HRCHY_HDR_NAME         = IN_HIERARCHY_DETAIL_REC.HRCHY_HDR_NAME
       AND HRCHY_DTL_LEVEL        = IN_HIERARCHY_DETAIL_REC.HRCHY_DTL_LEVEL
       AND HRCHY_DTL_CURR_ROW_VAL = IN_HIERARCHY_DETAIL_REC.HRCHY_DTL_CURR_ROW_VAL
       --we are OK to keep the below condition as this batch runs daily including weekends
       --if anything in that schedule changes [which ideally should not happen], we need to revisit this again
       AND HRCHY_DTL_EFF_DATE     = IN_HIERARCHY_DETAIL_REC.HRCHY_DTL_EXP_DATE + 1;

    --future do not exist for the next day, so we can move this record to history
    IF V_COUNT = 0 THEN
        V_RETURN_VAL := 'Y';
    END IF;
    RETURN V_RETURN_VAL;
EXCEPTION
    WHEN OTHERS THEN
        RETURN V_RETURN_VAL;
END IS_CURR_REC_READY_FOR_HIST;

PROCEDURE HIERARCHY_BATCH_PROCESS
/******************************************************************************
  This procedure is a wrapper to call HIERARCHY_HIST_INSERT to insert history 
  records accordingly Also deletes the expired record

Created : 10/02/2015 SX410 CCN Project....
Changed : 01/13/2017 gxg192 CCN Project....
          Changes to Raise the exception so that the process which is calling this procedure
          can take necessary action.
        : 01/26/2017 gxg192 CCN Project....
          Changes to fetch error number from errnums package and call ERRPKG.RAISE_ERR to raise the exception
        : 01/31/2017 gxg192 CCN Project....
          Changes to remove V_ERROR_MESSAGE variable and added user defined exception
Changed : 05/11/2017 jxc517 CCN Project Team....
          Added condition to ignore expired records with the future coming the next day
*******************************************************************************/
IS
  V_BATCH_NUMBER            BATCH_JOB.BATCH_JOB_NUMBER%TYPE;
  V_TRANS_STATUS            BATCH_JOB.TRANS_STATUS%TYPE := 'SUCCESSFUL';
  V_CONTEXT                 VARCHAR2(3000);
  V_ERROR_FLAG              VARCHAR2(1) := 'N';
  exec_process_error        EXCEPTION;

BEGIN
    CCN_BATCH_PKG.INSERT_BATCH_JOB('HRCHY_BATCH_JOB', V_BATCH_NUMBER);
    CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
    FOR REC IN (SELECT *
                  FROM HIERARCHY_DETAIL
                 WHERE HRCHY_DTL_EXP_DATE <= TRUNC(SYSDATE)) LOOP
        BEGIN
            IF IS_CURR_REC_READY_FOR_HIST(REC) = 'Y' THEN
                CCN_HIERARCHY.HIERARCHY_HIST_INSERT(REC);
            END IF;
        EXCEPTION
            WHEN OTHERS THEN
                COMMON_TOOLS.LOG_ERROR(REC.HRCHY_DTL_CURR_ROW_VAL, 'HIERARCHY INSERT/DELETE ERROR', SQLERRM, SQLCODE);
                V_ERROR_FLAG := 'Y';
        END;
    END LOOP;
    CCN_BATCH_PKG.UPDATE_BATCH_JOB('HRCHY_BATCH_JOB', V_BATCH_NUMBER, V_TRANS_STATUS);
    CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;

    IF V_ERROR_FLAG = 'Y'
    THEN
        RAISE exec_process_error;
    END IF;
EXCEPTION
    WHEN exec_process_error THEN
        ERRPKG.RAISE_ERR(errnums.en_hier_batch_process_err, 'HIERARCHY_BATCH_PKG.HIERARCHY_BATCH_PROCESS', 'Process Failed.');
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR('000000', 'HRCHY_DELETE_EXPIRED_REC', SQLERRM, SQLCODE);
        ERRPKG.RAISE_ERR(errnums.en_hier_batch_process_err, 'HIERARCHY_BATCH_PKG.HIERARCHY_BATCH_PROCESS', SQLERRM);
END HIERARCHY_BATCH_PROCESS;

PROCEDURE HIERARCHY_DETAIL_SNAPSHOT
/******************************************************************************************************
  This procedure will load the data in HIRARCHY_DETAIL_DAILY_SNAP  table from HIERARCHY_DETAIL table.
Created : sxg151 12/20/2017
Changed :
********************************************************************************************************/
IS

BEGIN
    INSERT INTO  HIERARCHY_DETAIL_DAILY_SNAP(
                                            HRCHY_HDR_NAME,
                                            HRCHY_DTL_LEVEL,
                                            HRCHY_DTL_PREV_LVL_VAL,
                                            HRCHY_DTL_CURR_LVL_VAL,
                                            HRCHY_DTL_NEXT_LVL_VAL,
                                            HRCHY_DTL_EFF_DATE,
                                            HRCHY_DTL_EXP_DATE,
                                            HRCHY_DTL_DESC,
                                            HRCHY_DTL_CURR_ROW_VAL,
                                            UPPER_LVL_VER_VALUE,
                                            LOAD_DATE
                                           )
                                    SELECT  HRCHY_HDR_NAME,
                                            HRCHY_DTL_LEVEL,
                                            HRCHY_DTL_PREV_LVL_VAL,
                                            HRCHY_DTL_CURR_LVL_VAL,
                                            HRCHY_DTL_NEXT_LVL_VAL,
                                            HRCHY_DTL_EFF_DATE,
                                            HRCHY_DTL_EXP_DATE,
                                            HRCHY_DTL_DESC,
                                            HRCHY_DTL_CURR_ROW_VAL,
                                            UPPER_LVL_VER_VALUE,
                                            SYSDATE
                           FROM HIERARCHY_DETAIL;
                           
COMMIT;         

    INSERT INTO HIERARCHY_DETAIL_DAILY_SNAP_H
          SELECT *
             FROM HIERARCHY_DETAIL_DAILY_SNAP
            WHERE TRUNC(LOAD_DATE) = TRUNC(SYSDATE)-180;

COMMIT;                 

END HIERARCHY_DETAIL_SNAPSHOT;

END HIERARCHY_BATCH_PKG;