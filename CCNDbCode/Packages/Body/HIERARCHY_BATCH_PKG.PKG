create or replace PACKAGE BODY          HIERARCHY_BATCH_PKG
AS
/*******************************************************************************
  This Package is a wrapper for all batch processes of ccn application

Created : 10/02/2015 SX410 CCN Project....
Changed :
**********************************************************/
PROCEDURE HIERARCHY_BATCH_PROCESS
/******************************************************************************
  This procedure is a wrapper to call HIERARCHY_HIST_INSERT to insert history 
  records accordingly Also deletes the expired record

Created : 10/02/2015 SX410 CCN Project....
Changed : 01/13/2017 gxg192 CCN Project....
          Changes to Raise the exception so that the process which is calling this procedure
          can take necessary action.
        : 01/26/2017 gxg192 CCN Project....
          Changes to fetch error number from errnums package and call ERRPKG.RAISE_ERR to raise the exception
        : 01/31/2017 gxg192 CCN Project....
          Changes to remove V_ERROR_MESSAGE variable and added user defined exception
*******************************************************************************/
IS
  V_BATCH_NUMBER            BATCH_JOB.BATCH_JOB_NUMBER%TYPE;
  V_TRANS_STATUS            BATCH_JOB.TRANS_STATUS%TYPE := 'SUCCESSFUL';
  V_CONTEXT                 VARCHAR2(3000);
  V_ERROR_FLAG              VARCHAR2(1) := 'N';
  exec_process_error        EXCEPTION;

BEGIN

    CCN_BATCH_PKG.INSERT_BATCH_JOB('HRCHY_BATCH_JOB', V_BATCH_NUMBER);
    CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
    FOR REC IN (SELECT *
                  FROM HIERARCHY_DETAIL
                 WHERE HRCHY_DTL_EXP_DATE <= TRUNC(SYSDATE)) LOOP
        BEGIN
            CCN_HIERARCHY.HIERARCHY_HIST_INSERT(REC);
        EXCEPTION
            WHEN OTHERS THEN
                COMMON_TOOLS.LOG_ERROR(REC.HRCHY_DTL_CURR_ROW_VAL, 'HIERARCHY INSERT/DELETE ERROR', SQLERRM, SQLCODE);
                V_ERROR_FLAG := 'Y';
        END;
    END LOOP;
    CCN_BATCH_PKG.UPDATE_BATCH_JOB('HRCHY_BATCH_JOB', V_BATCH_NUMBER, V_TRANS_STATUS);
    CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;

    IF V_ERROR_FLAG = 'Y'
    THEN
        RAISE exec_process_error;
    END IF;
EXCEPTION
    WHEN exec_process_error THEN
        ERRPKG.RAISE_ERR(errnums.en_hier_batch_process_err, 'HIERARCHY_BATCH_PKG.HIERARCHY_BATCH_PROCESS', 'Process Failed.');
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR('000000', 'HRCHY_DELETE_EXPIRED_REC', SQLERRM, SQLCODE);
        ERRPKG.RAISE_ERR(errnums.en_hier_batch_process_err, 'HIERARCHY_BATCH_PKG.HIERARCHY_BATCH_PROCESS', SQLERRM);
END HIERARCHY_BATCH_PROCESS;

END HIERARCHY_BATCH_PKG;