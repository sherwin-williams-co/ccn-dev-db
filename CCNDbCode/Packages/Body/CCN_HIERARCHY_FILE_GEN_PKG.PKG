create or replace PACKAGE BODY CCN_HIERARCHY_FILE_GEN_PKG AS

FUNCTION IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR(
/**********************************************************
This procedure is used to check if the data is available for each hierarchy type
of a cost center that is entered in UI.
Filters:
Created : 12/21/2018 pxa852 CCN project Team....
**********************************************************/
IN_TABLE_NAME    IN VARCHAR2,
IN_COST_CENTER   IN VARCHAR2)
RETURN NUMBER
IS
    V_RETURN_VALUE NUMBER := 0;
BEGIN
    EXECUTE IMMEDIATE
      'BEGIN
           SELECT COUNT(*)
             INTO :1 
             FROM ' || IN_TABLE_NAME ||
          ' WHERE UPPER(COST_CENTER_CODE) = UPPER(''' || IN_COST_CENTER || ''');
     END;'
  USING OUT V_RETURN_VALUE;

  RETURN V_RETURN_VALUE;
END IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR;

FUNCTION IS_HRCHY_DATA_AVALBLE_FOR_ENTRD_CSTCNTR(
/**********************************************************
This procedure is intended to check whether hierarchy details are attached
to the cost center that is entered in UI to generate hierarchy report.
Created : 12/21/2018 pxa852 CCN project Team....
**********************************************************/
IN_COST_CENTER   IN VARCHAR2)
RETURN VARCHAR2
IS
    V_RETURN_VALUE VARCHAR2(1) := 'N';
BEGIN
    SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
      INTO V_RETURN_VALUE
      FROM HIERARCHY_DETAIL
     WHERE HRCHY_DTL_CURR_ROW_VAL = IN_COST_CENTER;

  RETURN V_RETURN_VALUE;
EXCEPTION
    WHEN OTHERS THEN
        RETURN V_RETURN_VALUE;
END IS_HRCHY_DATA_AVALBLE_FOR_ENTRD_CSTCNTR;

FUNCTION IS_COSTCNTR_EXISTS_IN_CCN(
/**********************************************************
This procedure is intended to check whether cost center exists in CCN or not.
This process will get a 6 digit cost center from UI and check whether it exists in CCN or not.
Created : 01/08/2019 pxa852 CCN project Team....
**********************************************************/
IN_COST_CENTER   IN VARCHAR2)
RETURN VARCHAR2
IS
    V_RETURN_VALUE VARCHAR2(1) := 'N';
BEGIN
    SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
      INTO V_RETURN_VALUE
      FROM COST_CENTER
     WHERE COST_CENTER_CODE = IN_COST_CENTER;

  RETURN V_RETURN_VALUE;
EXCEPTION
    WHEN OTHERS THEN
        RETURN V_RETURN_VALUE;
END IS_COSTCNTR_EXISTS_IN_CCN;

PROCEDURE GENERATE_COSTCNTR_HRCHY_FILE(
/**********************************************************
This procedure is intended to generate an excel file with all hierarchy details and email it to user.
The hierarchies should be separated by work sheets rather than individual excels for each hierarchy.
UI is passing 6 digit cost center code to this process.
Filters:
Created : 06/28/2018 pxa852 CCN project Team....
Change : 05/03/2019 sxs484 CCN project Team....
		 Included Cost Center Code in File name format.
**********************************************************/
    in_COST_CENTER_CODE   IN   VARCHAR2)
AS
    PATH                        VARCHAR2(50) := 'CCN_DATAFILES'; -- DIRECTORY CREATED IN ORACLE DATABASE  
    FILENAME                    VARCHAR2(50) := 'CCN_HIERARCHY_FILE_MAIL' ||'_'||in_COST_CENTER_CODE||'_'|| TO_CHAR(TRUNC(SYSDATE),'DD_MON_RRRR') ||'.xlsx';
    V_REC_COUNT                 NUMBER := 0;
BEGIN
      IF IN_COST_CENTER_CODE IS NULL THEN
         errpkg.raise_err(errnums.en_cost_center_not_passed_err,
                          'Cost Center needs to be entered to generate a report');
      ELSIF IS_COSTCNTR_EXISTS_IN_CCN(IN_COST_CENTER_CODE) = 'N' THEN
            errpkg.raise_err(errnums.en_costcntr_not_exist_err,
                             'Sorry, This Cost Center does not exists');
      ELSIF IS_HRCHY_DATA_AVALBLE_FOR_ENTRD_CSTCNTR(IN_COST_CENTER_CODE) = 'N' THEN
            errpkg.raise_err(errnums.en_hrchy_dtls_not_exist_err,
                             'Hierarchy details does not exist for this cost center to generate a report');
      ELSE
         --Below condition is used to fetch the count of the records in order invoke the spreadsheet proc
          IF IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR('ADMINORG_HIERARCHY_ATTRBT_VW', in_COST_CENTER_CODE) > 0 THEN
            --Creating first sheet of the excel - ADMINORG_HIERARCHY_ATTRBT_VW
             CCN_SPREADSHEET_PKG.QUERY2SHEET('SELECT * FROM ADMINORG_HIERARCHY_ATTRBT_VW WHERE UPPER(COST_CENTER_CODE) = UPPER('''||in_COST_CENTER_CODE||''')',
                                              TRUE,NULL,NULL,NULL,'ADMINORG_HRCHY_DTLS');
          END IF;

          IF IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR('ADMIN_TO_SALES_AREA_HRCHY_VW', in_COST_CENTER_CODE) > 0 THEN
             --Creating second sheet of the excel - ADMIN_TO_SALES_AREA_HRCHY_VW
             CCN_SPREADSHEET_PKG.QUERY2SHEET('SELECT * FROM ADMIN_TO_SALES_AREA_HRCHY_VW WHERE UPPER(COST_CENTER_CODE) = UPPER('''||in_COST_CENTER_CODE||''')',
                                              TRUE,NULL,NULL,NULL,'ADMIN_TO_SALES_AREA_HRCHY_DTLS');
          END IF;

          IF IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR('ADMIN_TO_SALES_DIST_HRCHY_VW', in_COST_CENTER_CODE) > 0 THEN
             --Creating next sheet of the excel - ADMIN_TO_SALES_DIST_HRCHY_VW
             CCN_SPREADSHEET_PKG.QUERY2SHEET('SELECT * FROM ADMIN_TO_SALES_DIST_HRCHY_VW WHERE UPPER(COST_CENTER_CODE) = UPPER('''||in_COST_CENTER_CODE||''')',
                                              TRUE,NULL,NULL,NULL,'ADMIN_TO_SALES_DIST_HRCHY_DTLS');
          END IF;

          IF IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR('ADMIN_TO_SALES_DIV_HRCHY_VW', in_COST_CENTER_CODE) > 0 THEN
             --Creating next sheet of the excel - ADMIN_TO_SALES_DIV_HRCHY_VW
             CCN_SPREADSHEET_PKG.QUERY2SHEET('SELECT * FROM ADMIN_TO_SALES_DIV_HRCHY_VW WHERE UPPER(COST_CENTER_CODE) =UPPER('''||in_COST_CENTER_CODE||''')' ,
                                              TRUE,NULL,NULL,NULL,'ADMIN_TO_SALES_DIV_HRCHY_DTLS');
          END IF;

          IF IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR('ALTERNATE_DAD_DETAIL_VIEW', in_COST_CENTER_CODE) > 0 THEN
             --Creating next sheet of the excel - ALTERNATE_DAD_DETAIL_VIEW
             CCN_SPREADSHEET_PKG.QUERY2SHEET('SELECT * FROM ALTERNATE_DAD_DETAIL_VIEW WHERE UPPER(COST_CENTER_CODE) =UPPER('''||in_COST_CENTER_CODE||''')',
                                              TRUE,NULL,NULL,NULL,'ALTERNATE_DAD_HRCHY_DTLS');
          END IF;

          IF IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR('CREDIT_HIERARCHY_DETAIL_VIEW', in_COST_CENTER_CODE) > 0 THEN
             --Creating next sheet of the excel - CREDIT_HIERARCHY_DETAIL_VIEW
             CCN_SPREADSHEET_PKG.QUERY2SHEET('SELECT * FROM CREDIT_HIERARCHY_DETAIL_VIEW WHERE UPPER(COST_CENTER_CODE) =UPPER('''||in_COST_CENTER_CODE||''')',
                                              TRUE,NULL,NULL,NULL,'CREDIT_HRCHY_DTLS');
          END IF;

          IF IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR('FACTS_DIVISION_DETAIL_VIEW', in_COST_CENTER_CODE) > 0 THEN
             --Creating next sheet of the excel - FACTS_DIVISION_DETAIL_VIEW
             CCN_SPREADSHEET_PKG.QUERY2SHEET('SELECT * FROM FACTS_DIVISION_DETAIL_VIEW WHERE UPPER(COST_CENTER_CODE) =UPPER('''||in_COST_CENTER_CODE||''')',
                                              TRUE,NULL,NULL,NULL,'FACTS_DIVISION_HRCHY_DTLS');
          END IF;

          IF IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR('GLOBAL_HIERARCHY_ATTRBT_VW', in_COST_CENTER_CODE) > 0 THEN
             --Creating next sheet of the excel - GLOBAL_HIERARCHY_ATTRBT_VW
             CCN_SPREADSHEET_PKG.QUERY2SHEET('SELECT STATEMENT_TYPE,
                                                       HRCHY_HDR_NAME,
                                                       COST_CENTER_CODE,
                                                       HRCHY_DTL_EFF_DATE,
                                                       HRCHY_DTL_EXP_DATE,
                                                       DOMAIN,
                                                       "GROUP",
                                                       DIVISION,
                                                       AREA,
                                                       DISTRICT,
                                                       CITY_SALES_MANAGER,
                                                       "ZONE",
                                                       SPECIAL_ROLES,
                                                       DOMAIN_NAME,
                                                       GROUP_NAME,
                                                       DIVISION_NAME,
                                                       AREA_NAME,
                                                       DISTRICT_NAME,
                                                       CITY_SALES_MANAGER_NAME,
                                                       ZONE_NAME,
                                                       SPECIAL_ROLES_NAME,
                                                       COST_CENTER_NAME,
                                                       DOMAIN_MGR_NAME,
                                                       GROUP_MGR_NAME,
                                                       DIV_MGR_NAME,
                                                       DIV_MGR_GEMS_ID,
                                                       AREA_MGR_NAME,
                                                       AREA_MGR_GEMS_ID,
                                                       DISTRICT_MGR_NAME,
                                                       DISTRICT_MGR_GEMS_ID,
                                                       CITY_MGR_NAME,
                                                       CITY_MGR_GEMS_ID,
                                                       CITY_SALES_MGR_FLAG,
                                                       CITY_SALES_MGR_FLAG_DESC,
                                                       ZONE_MGR_NAME,
                                                       SPECIAL_ROLES_MGR_NAME,
                                                       CC_MGR_NAME
                                                    FROM GLOBAL_HIERARCHY_ATTRBT_VW WHERE UPPER(COST_CENTER_CODE) =UPPER('''||in_COST_CENTER_CODE||''')',
                                              TRUE,NULL,NULL,NULL,'GLOBAL_HRCHY_DTLS');
          END IF;

          IF IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR('LEGACY_GL_DIVISION_DETAIL_VIEW', in_COST_CENTER_CODE) > 0 THEN
             --Creating next sheet of the excel - LEGACY_GL_DIVISION_DETAILs
             CCN_SPREADSHEET_PKG.QUERY2SHEET('SELECT * FROM LEGACY_GL_DIVISION_DETAIL_VIEW WHERE UPPER(COST_CENTER_CODE) =UPPER('''||in_COST_CENTER_CODE||''')',
                                              TRUE,NULL,NULL,NULL,'LEGACY_GL_DIVISION_HRCHY_DTLS');
          END IF;

          IF IS_DATA_AVALBLE_IN_HRCHY_TBLE_FOR_ENTRD_CSTCNTR('PRICE_DISTRICT_DETAIL_VIEW', in_COST_CENTER_CODE) > 0 THEN
             --Creating next sheet of the excel - PRICE_DISTRICT_DETAIL_VIEW
             CCN_SPREADSHEET_PKG.QUERY2SHEET('SELECT * FROM PRICE_DISTRICT_DETAIL_VIEW WHERE UPPER(COST_CENTER_CODE)=UPPER('''||in_COST_CENTER_CODE||''')',
                                              TRUE,NULL,NULL,NULL,'PRICE_DISTRICT_HRCHY_DTLS');
          END IF;
          --Creating the final excel based on the path and file name provided
          --NOTE: The clob is built in the package "CCN_SPREADSHEET_PKG" which will be used by the below call
          CCN_SPREADSHEET_PKG.SAVE(PATH,FILENAME);
          --Below procedure will send the excel file as attachment through email based on the mail category
          MAIL_PKG.SEND_MAIL('CCN_HIERARCHY_FILE_MAIL',NULL, in_COST_CENTER_CODE, NULL);
      END IF;
END GENERATE_COSTCNTR_HRCHY_FILE;

END CCN_HIERARCHY_FILE_GEN_PKG;