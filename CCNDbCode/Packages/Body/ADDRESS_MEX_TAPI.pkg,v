head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2012.09.14.14.24.53;	author TAL946;	state dead;
branches;
next	1.1;
deltatype	text;
kopt	kv;
permissions	444;
commitid	1bc050533e34664e;
filename	ADDRESS_MEX_TAPI.pkg;

1.1
date	2012.04.18.14.59.53;	author SW\TAL946;	state Exp;
branches;
next	;
deltatype	text;
kopt	kv;
permissions	666;
commitid	a844f8ed6e70744;
filename	ADDRESS_MEX_TAPI.pkg;


desc
@@


1.2
log
@
Committed on the Free edition of March Hare Software CVSNT Server.
Upgrade to CVS Suite for more features and support:
http://march-hare.com/cvsnt/
@
text
@create or replace
PACKAGE body ADDRESS_MEX_tapi
IS


  -- insert
PROCEDURE ins(
    IN_EXPIRATION_DATE  IN ADDRESS_MEX.EXPIRATION_DATE%type DEFAULT NULL ,
    IN_EFFECTIVE_DATE   IN ADDRESS_MEX.EFFECTIVE_DATE%type ,
    IN_VALID_ADDRESS    IN ADDRESS_MEX.VALID_ADDRESS%type DEFAULT NULL ,
    IN_COST_CENTER_CODE IN ADDRESS_MEX.COST_CENTER_CODE%type ,
    IN_ADDRESS_TYPE     IN ADDRESS_MEX.ADDRESS_TYPE%type ,
    IN_POSTAL_CODE      IN ADDRESS_MEX.POSTAL_CODE%type DEFAULT NULL ,
    IN_CITY             IN ADDRESS_MEX.CITY%type DEFAULT NULL ,
    IN_PROVINCE_CODE    IN ADDRESS_MEX.PROVINCE_CODE%type DEFAULT NULL ,
    IN_ADDRESS_LINE_3   IN ADDRESS_MEX.ADDRESS_LINE_3%type DEFAULT NULL ,
    IN_ADDRESS_LINE_2   IN ADDRESS_MEX.ADDRESS_LINE_2%type DEFAULT NULL ,
    IN_ADDRESS_LINE_1   IN ADDRESS_MEX.ADDRESS_LINE_1%type DEFAULT NULL )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  INSERT
  INTO ADDRESS_MEX
    (
      EXPIRATION_DATE ,
      EFFECTIVE_DATE ,
      VALID_ADDRESS ,
      COST_CENTER_CODE ,
      ADDRESS_TYPE ,
      POSTAL_CODE ,
      CITY ,
      PROVINCE_CODE ,
      ADDRESS_LINE_3 ,
      ADDRESS_LINE_2 ,
      ADDRESS_LINE_1
    )
    VALUES
    (
      IN_EXPIRATION_DATE ,
      IN_EFFECTIVE_DATE ,
      IN_VALID_ADDRESS ,
      IN_COST_CENTER_CODE ,
      IN_ADDRESS_TYPE ,
      IN_POSTAL_CODE ,
      IN_CITY ,
      IN_PROVINCE_CODE ,
      IN_ADDRESS_LINE_3 ,
      IN_ADDRESS_LINE_2 ,
      IN_ADDRESS_LINE_1
    );

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADDRESS_MEX Insert');

END;


-- update
PROCEDURE upd
  (
    IN_EXPIRATION_DATE  IN ADDRESS_MEX.EXPIRATION_DATE%type DEFAULT NULL ,
    IN_EFFECTIVE_DATE   IN ADDRESS_MEX.EFFECTIVE_DATE%type ,
    IN_VALID_ADDRESS    IN ADDRESS_MEX.VALID_ADDRESS%type DEFAULT NULL ,
    IN_COST_CENTER_CODE IN ADDRESS_MEX.COST_CENTER_CODE%type ,
    IN_ADDRESS_TYPE     IN ADDRESS_MEX.ADDRESS_TYPE%type ,
    IN_POSTAL_CODE      IN ADDRESS_MEX.POSTAL_CODE%type DEFAULT NULL ,
    IN_CITY             IN ADDRESS_MEX.CITY%type DEFAULT NULL ,
    IN_PROVINCE_CODE    IN ADDRESS_MEX.PROVINCE_CODE%type DEFAULT NULL ,
    IN_ADDRESS_LINE_3   IN ADDRESS_MEX.ADDRESS_LINE_3%type DEFAULT NULL ,
    IN_ADDRESS_LINE_2   IN ADDRESS_MEX.ADDRESS_LINE_2%type DEFAULT NULL ,
    IN_ADDRESS_LINE_1   IN ADDRESS_MEX.ADDRESS_LINE_1%type DEFAULT NULL
  )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  UPDATE ADDRESS_MEX
  SET EXPIRATION_DATE  = IN_EXPIRATION_DATE ,
    VALID_ADDRESS      = IN_VALID_ADDRESS ,
    POSTAL_CODE        = IN_POSTAL_CODE ,
    CITY               = IN_CITY ,
    PROVINCE_CODE      = IN_PROVINCE_CODE ,
    ADDRESS_LINE_3     = IN_ADDRESS_LINE_3 ,
    ADDRESS_LINE_2     = IN_ADDRESS_LINE_2 ,
    ADDRESS_LINE_1     = IN_ADDRESS_LINE_1
  WHERE ADDRESS_TYPE   = IN_ADDRESS_TYPE
  AND EFFECTIVE_DATE   = IN_EFFECTIVE_DATE
  AND COST_CENTER_CODE = IN_COST_CENTER_CODE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADDRESS_MEX Update');

END;


-- del
PROCEDURE del(
    IN_ADDRESS_TYPE     IN ADDRESS_MEX.ADDRESS_TYPE%type ,
    IN_EFFECTIVE_DATE   IN ADDRESS_MEX.EFFECTIVE_DATE%type ,
    IN_COST_CENTER_CODE IN ADDRESS_MEX.COST_CENTER_CODE%type )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  DELETE
  FROM ADDRESS_MEX
  WHERE ADDRESS_TYPE   = IN_ADDRESS_TYPE
  AND EFFECTIVE_DATE   = IN_EFFECTIVE_DATE
  AND COST_CENTER_CODE = IN_COST_CENTER_CODE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADDRESS_MEX Delete');

END;

END ADDRESS_MEX_tapi;@


1.1
log
@*** empty log message ***
@
text
@@

