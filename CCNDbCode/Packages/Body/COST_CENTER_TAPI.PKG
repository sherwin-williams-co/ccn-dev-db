PACKAGE BODY COST_CENTER_TAPI
/********************************************************************
    COST_CENTER_TAPI
    
created : 08/25/2012 tal CCN project
updated : 09/13/2012 TAL added Banking_Type, Deposit_Bag_Reorder, Deposit_Ticket_Reorder
********************************************************************/

IS
  -- insert
PROCEDURE ins(
    IN_UPS_ZONE_CODE          IN COST_CENTER.UPS_ZONE_CODE%TYPE DEFAULT NULL ,
    IN_COST_CENTER_NAME       IN COST_CENTER.COST_CENTER_NAME%type ,
    IN_MISSION_TYPE_CODE      IN COST_CENTER.MISSION_TYPE_CODE%TYPE DEFAULT NULL ,
    IN_POS_PROG_VER_NBR       IN COST_CENTER.POS_PROG_VER_NBR%type DEFAULT NULL ,
    IN_MOVE_DATE              IN COST_CENTER.MOVE_DATE%TYPE DEFAULT NULL ,
    IN_COUNTRY_CODE           IN COST_CENTER.COUNTRY_CODE%type DEFAULT NULL ,
    IN_COST_CENTER_CODE       IN COST_CENTER.COST_CENTER_CODE%TYPE ,
    IN_LEASE_OWN_CODE         IN COST_CENTER.LEASE_OWN_CODE%type DEFAULT NULL ,
    IN_SCD_LOGO_GROUP_IND     IN COST_CENTER.SCD_LOGO_GROUP_IND%TYPE DEFAULT NULL ,
    IN_BEGIN_DATE             IN COST_CENTER.BEGIN_DATE%type DEFAULT NULL ,
    IN_RPS_ZONE_CODE          IN COST_CENTER.RPS_ZONE_CODE%TYPE DEFAULT NULL ,
    IN_DUNS_NUMBER            IN COST_CENTER.DUNS_NUMBER%type DEFAULT NULL ,
    IN_STATEMENT_TYPE         IN COST_CENTER.STATEMENT_TYPE%TYPE DEFAULT NULL ,
    IN_CLOSE_DATE             IN COST_CENTER.CLOSE_DATE%type DEFAULT NULL ,
    IN_ENTITY_TYPE            IN COST_CENTER.ENTITY_TYPE%TYPE DEFAULT NULL ,
    IN_CATEGORY               IN COST_CENTER.CATEGORY%type DEFAULT NULL ,
    IN_FINANCIAL_CLOSE_DATE   IN COST_CENTER.FINANCIAL_CLOSE_DATE%TYPE DEFAULT NULL ,
    IN_TRANSPORT_TYPE         IN COST_CENTER.TRANSPORT_TYPE%type DEFAULT NULL ,
    IN_OPEN_DATE              IN COST_CENTER.OPEN_DATE%TYPE DEFAULT NULL ,
    IN_PRI_LOGO_GROUP_IND     IN COST_CENTER.PRI_LOGO_GROUP_IND%type DEFAULT NULL ,
    IN_CURRENCY_CODE          IN COST_CENTER.CURRENCY_CODE%TYPE DEFAULT NULL ,
    IN_POS_PROG_VER_EFF_DATE  IN COST_CENTER.POS_PROG_VER_EFF_DATE%type DEFAULT NULL ,
    IN_BANKING_TYPE           IN COST_CENTER.BANKING_TYPE%TYPE DEFAULT NULL ,
    IN_DEPOSIT_BAG_REORDER    IN COST_CENTER.DEPOSIT_BAG_REORDER%TYPE DEFAULT NULL ,
    IN_DEPOSIT_TICKET_REORDER IN COST_CENTER.DEPOSIT_TICKET_REORDER%type DEFAULT NULL,
    IN_POP_KIT_CODE			  IN COST_CENTER.POP_KIT_CODE%type DEFAULT NULL
     )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  INSERT
  INTO COST_CENTER
    (
      UPS_ZONE_CODE ,
      COST_CENTER_NAME ,
      MISSION_TYPE_CODE ,
      POS_PROG_VER_NBR ,
      MOVE_DATE ,
      COUNTRY_CODE ,
      COST_CENTER_CODE ,
      LEASE_OWN_CODE ,
      SCD_LOGO_GROUP_IND ,
      BEGIN_DATE ,
      RPS_ZONE_CODE ,
      DUNS_NUMBER ,
      STATEMENT_TYPE ,
      CLOSE_DATE ,
      ENTITY_TYPE ,
      CATEGORY ,
      FINANCIAL_CLOSE_DATE ,
      TRANSPORT_TYPE ,
      OPEN_DATE ,
      PRI_LOGO_GROUP_IND ,
      CURRENCY_CODE ,
      POS_PROG_VER_EFF_DATE ,
      BANKING_TYPE ,
      DEPOSIT_BAG_REORDER ,
      DEPOSIT_TICKET_REORDER,
      POP_KIT_CODE
    )
    VALUES
    (
      IN_UPS_ZONE_CODE ,
      IN_COST_CENTER_NAME ,
      IN_MISSION_TYPE_CODE ,
      IN_POS_PROG_VER_NBR ,
      IN_MOVE_DATE ,
      IN_COUNTRY_CODE ,
      IN_COST_CENTER_CODE ,
      IN_LEASE_OWN_CODE ,
      IN_SCD_LOGO_GROUP_IND ,
      IN_BEGIN_DATE ,
      IN_RPS_ZONE_CODE ,
      IN_DUNS_NUMBER ,
      IN_STATEMENT_TYPE ,
      IN_CLOSE_DATE ,
      IN_ENTITY_TYPE ,
      IN_CATEGORY ,
      IN_FINANCIAL_CLOSE_DATE ,
      IN_TRANSPORT_TYPE ,
      IN_OPEN_DATE ,
      IN_PRI_LOGO_GROUP_IND ,
      IN_CURRENCY_CODE ,
      IN_POS_PROG_VER_EFF_DATE ,
      IN_BANKING_TYPE ,
      IN_DEPOSIT_BAG_REORDER ,
      IN_DEPOSIT_TICKET_REORDER,
      IN_POP_KIT_CODE
    );

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'COST_CENTER Insert');

END;

-- update
PROCEDURE upd
  (
    IN_UPS_ZONE_CODE          IN COST_CENTER.UPS_ZONE_CODE%TYPE DEFAULT NULL ,
    IN_COST_CENTER_NAME       IN COST_CENTER.COST_CENTER_NAME%type ,
    IN_MISSION_TYPE_CODE      IN COST_CENTER.MISSION_TYPE_CODE%TYPE DEFAULT NULL ,
    IN_POS_PROG_VER_NBR       IN COST_CENTER.POS_PROG_VER_NBR%type DEFAULT NULL ,
    IN_MOVE_DATE              IN COST_CENTER.MOVE_DATE%TYPE DEFAULT NULL ,
    IN_COUNTRY_CODE           IN COST_CENTER.COUNTRY_CODE%type DEFAULT NULL ,
    IN_COST_CENTER_CODE       IN COST_CENTER.COST_CENTER_CODE%TYPE ,
    IN_LEASE_OWN_CODE         IN COST_CENTER.LEASE_OWN_CODE%type DEFAULT NULL ,
    IN_SCD_LOGO_GROUP_IND     IN COST_CENTER.SCD_LOGO_GROUP_IND%TYPE DEFAULT NULL ,
    IN_BEGIN_DATE             IN COST_CENTER.BEGIN_DATE%type DEFAULT NULL ,
    IN_RPS_ZONE_CODE          IN COST_CENTER.RPS_ZONE_CODE%TYPE DEFAULT NULL ,
    IN_DUNS_NUMBER            IN COST_CENTER.DUNS_NUMBER%type DEFAULT NULL ,
    IN_STATEMENT_TYPE         IN COST_CENTER.STATEMENT_TYPE%TYPE DEFAULT NULL ,
    IN_CLOSE_DATE             IN COST_CENTER.CLOSE_DATE%type DEFAULT NULL ,
    IN_ENTITY_TYPE            IN COST_CENTER.ENTITY_TYPE%TYPE DEFAULT NULL ,
    IN_CATEGORY               IN COST_CENTER.CATEGORY%type DEFAULT NULL ,
    IN_FINANCIAL_CLOSE_DATE   IN COST_CENTER.FINANCIAL_CLOSE_DATE%TYPE DEFAULT NULL ,
    IN_TRANSPORT_TYPE         IN COST_CENTER.TRANSPORT_TYPE%type DEFAULT NULL ,
    IN_OPEN_DATE              IN COST_CENTER.OPEN_DATE%TYPE DEFAULT NULL ,
    IN_PRI_LOGO_GROUP_IND     IN COST_CENTER.PRI_LOGO_GROUP_IND%TYPE DEFAULT NULL ,
    IN_CURRENCY_CODE          IN COST_CENTER.CURRENCY_CODE%TYPE DEFAULT NULL ,
    IN_POS_PROG_VER_EFF_DATE  IN COST_CENTER.POS_PROG_VER_EFF_DATE%type DEFAULT NULL ,
    IN_BANKING_TYPE           IN COST_CENTER.BANKING_TYPE%TYPE DEFAULT NULL ,
    IN_DEPOSIT_BAG_REORDER    IN COST_CENTER.DEPOSIT_BAG_REORDER%TYPE DEFAULT NULL ,
    IN_DEPOSIT_TICKET_REORDER IN COST_CENTER.DEPOSIT_TICKET_REORDER%type DEFAULT NULL,
    IN_POP_KIT_CODE			  IN COST_CENTER.POP_KIT_CODE%type DEFAULT NULL    
  )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  UPDATE COST_CENTER
  SET UPS_ZONE_CODE        = IN_UPS_ZONE_CODE ,
    COST_CENTER_NAME       = IN_COST_CENTER_NAME ,
    MISSION_TYPE_CODE      = IN_MISSION_TYPE_CODE ,
    POS_PROG_VER_NBR       = IN_POS_PROG_VER_NBR ,
    MOVE_DATE              = IN_MOVE_DATE ,
    COUNTRY_CODE           = IN_COUNTRY_CODE ,
    LEASE_OWN_CODE         = IN_LEASE_OWN_CODE ,
    SCD_LOGO_GROUP_IND     = IN_SCD_LOGO_GROUP_IND ,
    BEGIN_DATE             = IN_BEGIN_DATE ,
    RPS_ZONE_CODE          = IN_RPS_ZONE_CODE ,
    DUNS_NUMBER            = IN_DUNS_NUMBER ,
    STATEMENT_TYPE         = IN_STATEMENT_TYPE ,
    CLOSE_DATE             = IN_CLOSE_DATE ,
    ENTITY_TYPE            = IN_ENTITY_TYPE ,
    CATEGORY               = IN_CATEGORY ,
    FINANCIAL_CLOSE_DATE   = IN_FINANCIAL_CLOSE_DATE ,
    TRANSPORT_TYPE         = IN_TRANSPORT_TYPE ,
    OPEN_DATE              = IN_OPEN_DATE ,
    PRI_LOGO_GROUP_IND     = IN_PRI_LOGO_GROUP_IND ,
    CURRENCY_CODE          = IN_CURRENCY_CODE ,
    POS_PROG_VER_EFF_DATE  = IN_POS_PROG_VER_EFF_DATE ,
    BANKING_TYPE           = IN_BANKING_TYPE ,
    DEPOSIT_BAG_REORDER    = IN_DEPOSIT_BAG_REORDER ,
    DEPOSIT_TICKET_REORDER = IN_DEPOSIT_TICKET_REORDER,
    POP_KIT_CODE           = IN_POP_KIT_CODE
  WHERE COST_CENTER_CODE   = IN_COST_CENTER_CODE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'COST_CENTER Update');

END;

-- del
PROCEDURE del(
    IN_COST_CENTER_CODE IN COST_CENTER.COST_CENTER_CODE%type )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  DELETE FROM COST_CENTER WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'COST_CENTER Delete');

END;

END COST_CENTER_tapi;
/

