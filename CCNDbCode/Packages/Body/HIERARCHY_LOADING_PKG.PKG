create or replace PACKAGE BODY HIERARCHY_LOADING_PKG
/*********************************************************** 
This package is intended to load files from mainframe into the 
HIERARCHY tables

created : 08/12/2013 SH CCN project
************************************************************/
AS

PROCEDURE HEADER_DESCRIPTION_INS_SP
/*******************************************************************************
HEADER_DESCRIPTION_INS_SP - The Procedure Loads HIERARCHY_HEADER and HIERARCHY_DESCRIPTION
before loading the files from Mainframe

created : 08/19/2013 SH CCN Project....
*******************************************************************************/

IS

BEGIN
--insert ADMIN_TO_SALES_AREA
INSERT INTO HIERARCHY_HEADER(HRCHY_HDR_NAME, HRCHY_HDR_LEVELS, HRCHY_HDR_DESC)
                             VALUES('ADMIN_TO_SALES_AREA', '5', 'ADMIN SALES AREA Hierarchy Structure');

insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_AREA','1','Domain','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_AREA','2','Group','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_AREA','3','Division','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
INSERT INTO HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) VALUES ('ADMIN_TO_SALES_AREA','4','Area','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', NULL);
INSERT INTO HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) VALUES ('ADMIN_TO_SALES_AREA','5','Cost Center','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', NULL);

--insert ADMIN_TO_SALES_DISTRICT
INSERT INTO HIERARCHY_HEADER(HRCHY_HDR_NAME, HRCHY_HDR_LEVELS, HRCHY_HDR_DESC)
                             VALUES('ADMIN_TO_SALES_DISTRICT', '9', 'ADMIN SALES DIST Hierarchy Structure');

Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DISTRICT','1','Domain','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DISTRICT','2','Group','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DISTRICT','3','Division','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DISTRICT','4','Area','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DISTRICT','5','District','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DISTRICT','6','City/Sales Manager','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DISTRICT','7','Zone','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DISTRICT','8','Special Roles','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
INSERT INTO HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) VALUES ('ADMIN_TO_SALES_DISTRICT','9','Cost Center','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',NULL);

--insert ADMIN_TO_SALES_DIVISION
insert into HIERARCHY_HEADER(HRCHY_HDR_NAME, HRCHY_HDR_LEVELS, HRCHY_HDR_DESC)
                             VALUES('ADMIN_TO_SALES_DIVISION', '4', 'ADMIN SALES DIV Hierarchy Structure');

insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DIVISION','1','Domain','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DIVISION','2','Group','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ADMIN_TO_SALES_DIVISION','3','Division','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
INSERT INTO HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) VALUES ('ADMIN_TO_SALES_DIVISION','4','Cost Center','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', NULL);

--insert ALTERNATE_DAD
insert into HIERARCHY_HEADER(HRCHY_HDR_NAME, HRCHY_HDR_LEVELS, HRCHY_HDR_DESC)
                             VALUES('ALTERNATE_DAD', '9', 'Alternate DAD Hierarchy Structure');

Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ALTERNATE_DAD','1','Domain','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ALTERNATE_DAD','2','Group','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ALTERNATE_DAD','3','Division','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ALTERNATE_DAD','4','Area','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ALTERNATE_DAD','5','District','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ALTERNATE_DAD','6','City/Sales Manager','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ALTERNATE_DAD','7','Zone','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>','7');
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ALTERNATE_DAD','8','Special Roles','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('ALTERNATE_DAD','9','Cost Center','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
                            
--insert CITY_MANAGER_DAD
/*INSERT INTO HIERARCHY_HEADER(HRCHY_HDR_NAME, HRCHY_HDR_LEVELS, HRCHY_HDR_DESC)
                             VALUES('CITY_MANAGER_DAD', '5', 'City Manager Hierarchy Structure');

Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('CITY_MANAGER_DAD','1','Domain','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('CITY_MANAGER_DAD','2','Group','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('CITY_MANAGER_DAD','3','Division','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('CITY_MANAGER_DAD','4','City/Sales Manager','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('CITY_MANAGER_DAD','5','Cost Center','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
*/

--insert FACTS_DIVISION
INSERT INTO HIERARCHY_HEADER(HRCHY_HDR_NAME, HRCHY_HDR_LEVELS, HRCHY_HDR_DESC)
                             VALUES('FACTS_DIVISION', '4', 'Facts_Division_Hierarchy Structure');


insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('FACTS_DIVISION','1','Domain','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('FACTS_DIVISION','2','Group','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('FACTS_DIVISION','3','Division','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('FACTS_DIVISION','4','Cost Center','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);

--insert LEGACY_GL_DIVISION
    insert into hierarchy_header(hrchy_hdr_name, hrchy_hdr_levels, hrchy_hdr_desc)
                             values('LEGACY_GL_DIVISION', '5', 'Legacy_gl_Division_Hierarchy Structure');

INSERT INTO HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) VALUES ('LEGACY_GL_DIVISION','1','Domain', '<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('LEGACY_GL_DIVISION','2','Group','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('LEGACY_GL_DIVISION','3','Division','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('LEGACY_GL_DIVISION','4','Legacy Division','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>', null);
INSERT INTO HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) VALUES ('LEGACY_GL_DIVISION','5','Cost Center','<attributes>
                                     <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',NULL);

--insert GLOBAL_HIERARCHY
Insert into hierarchy_header(hrchy_hdr_name, hrchy_hdr_levels, hrchy_hdr_desc)
                             values('GLOBAL_HIERARCHY', '9', 'GLOBAL_HIERARCHY Structure');

Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('GLOBAL_HIERARCHY','1','Domain','<attributes>
			             <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('GLOBAL_HIERARCHY','2','Group','<attributes>
			             <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('GLOBAL_HIERARCHY','3','Division','<attributes>
			             <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('GLOBAL_HIERARCHY','4','Area','<attributes>
			             <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('GLOBAL_HIERARCHY','5','District','<attributes>
			             <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('GLOBAL_HIERARCHY','6','City/Sales Manager','<attributes>
			             <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>state_code</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('GLOBAL_HIERARCHY','7','Zone','<attributes>
			             <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('GLOBAL_HIERARCHY','8','Special Roles','<attributes>
			             <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			             </attributes>',null);
Insert into hierarchy_description (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR) values ('GLOBAL_HIERARCHY','9','Cost Center','<attributes>
			             <upper_lvl_ver_desc> 
			                  <Name>Statement Type</Name>
			                  <Description>pkListValue</Description>
			             </upper_lvl_ver_desc>
			             <upper_lvl_ver_desc> 
			                  <Name>ManagerName</Name>
			                  <Description>CC Mgr Name</Description>
			             </upper_lvl_ver_desc>
			        </attributes>',null);


EXCEPTION
  WHEN OTHERS THEN
       DBMS_OUTPUT.PUT_LINE('HEADER_DESCRIPTION_INS_SP Failed at '||SQLERRM || ' : ' ||SQLCODE ); 
END HEADER_DESCRIPTION_INS_SP;

PROCEDURE LOAD_TEMP_TABLES
/*******************************************************************************
	LOAD_TEMP_TABLES   --    Loads all temporary teables before process start

created : 08/12/2013 SH CCN Project....
*******************************************************************************/
 IS
 
 V_CODE NUMBER;
 v_errm VARCHAR2(500);

 BEGIN

      EXECUTE IMMEDIATE 'TRUNCATE TABLE GLOBAL_HIERARCHY_EXT_DETAIL_T';
      EXECUTE IMMEDIATE 'TRUNCATE TABLE ADMIN_SALES_DIV_EXT_DETAIL_T';
      EXECUTE IMMEDIATE 'TRUNCATE TABLE ADMIN_SALES_AREA_EXT_DETAIL_T';
      EXECUTE IMMEDIATE 'TRUNCATE TABLE ADMIN_SALES_DIST_EXT_DETAIL_T';
      EXECUTE IMMEDIATE 'TRUNCATE TABLE LEGACY_GL_DIVISION_EXT_DTL_T';
      EXECUTE IMMEDIATE 'TRUNCATE TABLE ALTERNATE_DAD_EXT_DETAIL_T';
      EXECUTE IMMEDIATE 'TRUNCATE TABLE CITY_MANAGER_DAD_EXT_DETAIL_T';
      EXECUTE IMMEDIATE 'TRUNCATE TABLE FACTS_DIVISION_EXT_DETAIL_T';
      
      INSERT INTO GLOBAL_HIERARCHY_EXT_DETAIL_T
         SELECT /*+ no_parallel (GLOBAL_HIERARCHY_EXT_DETAIL)*/ * FROM GLOBAL_HIERARCHY_EXT_DETAIL;
      INSERT INTO ADMIN_SALES_DIV_EXT_DETAIL_T
         SELECT /*+ no_parallel (ADMIN_SALES_DIV_EXT_DETAIL)*/ * FROM ADMIN_SALES_DIV_EXT_DETAIL;
      INSERT INTO ADMIN_SALES_AREA_EXT_DETAIL_T
         SELECT /*+ no_parallel (ADMIN_SALES_AREA_EXT_DETAIL)*/ * FROM ADMIN_SALES_AREA_EXT_DETAIL;
      INSERT INTO ADMIN_SALES_DIST_EXT_DETAIL_T
         SELECT /*+ no_parallel (ADMIN_SALES_DIST_EXT_DETAIL)*/ * FROM ADMIN_SALES_DIST_EXT_DETAIL;
      INSERT INTO LEGACY_GL_DIVISION_EXT_DTL_T
         SELECT /*+ no_parallel (LEGACY_GL_DIVISION_EXT_DETAIL)*/ * FROM LEGACY_GL_DIVISION_EXT_DETAIL;
      INSERT INTO ALTERNATE_DAD_EXT_DETAIL_T
         SELECT /*+ no_parallel (ALTERNATE_DAD_EXT_DETAIL)*/ * FROM ALTERNATE_DAD_EXT_DETAIL;
      INSERT INTO CITY_MANAGER_DAD_EXT_DETAIL_T
         SELECT /*+ no_parallel (CITY_MANAGER_DAD_EXT_DETAIL)*/ * FROM CITY_MANAGER_DAD_EXT_DETAIL;
      INSERT INTO FACTS_DIVISION_EXT_DETAIL_T
         SELECT /*+ no_parallel (FACTS_DIVISION_EXT_DETAIL)*/ * FROM FACTS_DIVISION_EXT_DETAIL;
--
  EXCEPTION
--
        WHEN OTHERS THEN 
                 v_code  := SQLCODE;
                 v_errm  := substr(SQLERRM,1,200);
                 errpkg.raise_err(v_code, 'HIERARCHY_LOADING_PKG.ALTER_HIER_TRIGGERS' || V_ERRM );
 END LOAD_TEMP_TABLES;
 
PROCEDURE ALTER_HIER_TRIGGERS   
/*******************************************************************************
	ALTER_HIER_TRIGGERS   --    Alter Hierarchy table(s) triggers

  This procedure will enable and/or disable Hierarchy table(s) triggers based on an
  input "status" parameter.  
	  
created : 08/12/2013 SH CCN Project....
*******************************************************************************/
 ( IN_STATUS  IN VARCHAR2 )
 IS
 
 tr_stmnt VARCHAR2(500);
 V_CODE NUMBER;
 v_errm varchar2(500);

 BEGIN
    IF IN_STATUS NOT IN ('ENABLE', 'enable', 'DISABLE', 'disable') THEN 
       DBMS_OUTPUT.PUT_LINE('ALTER_HIER_TRIGGERS ' ||
                            'Status: <' || IN_STATUS  || '>' ||
                            ' IS Invalid, only ' || 'ENABLE or DISABLE' ||
                            ' are accepted as valid parameters');
      RAISE VALUE_ERROR;
    END IF;
--
      tr_stmnt := 'ALTER TRIGGER TR_HIER_DETAIL_UPD';
      EXECUTE IMMEDIATE tr_stmnt || ' ' || IN_STATUS;
      
      EXECUTE IMMEDIATE 'ALTER TRIGGER TR_HIER_HEAD_UPD ' || IN_STATUS;
      EXECUTE IMMEDIATE 'ALTER TRIGGER TR_HIER_DESC_UPD ' || IN_STATUS;
      EXECUTE IMMEDIATE 'ALTER TRIGGER TR_COST_CENTER_UPD ' || IN_STATUS;
--
DBMS_OUTPUT.PUT_LINE('Hier Triggers '||IN_STATUS);
  EXCEPTION
--
        WHEN OTHERS THEN 
                 v_code  := SQLCODE;
                 v_errm  := substr(SQLERRM,1,200);
                 errpkg.raise_err(v_code, 'HIERARCHY_LOADING_PKG.ALTER_HIER_TRIGGERS' ||
                 V_ERRM );
 END ALTER_HIER_TRIGGERS;
       
PROCEDURE GLOBAL_HIERARCHY_LOAD
/**********************************************************
GLOBAL_HIERARCHY_LOAD

created : 08/12/2013 SH CCN Project....
**********************************************************/

IS
    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%TYPE;
    V_UPPER_LVL_VER_VALUE_N  GLOBAL_HIERARCHY_EXT_DETAIL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL.hrchy_dtl_exp_date%TYPE;

  CURSOR ALL_REC_CUR IS
     select * from GLOBAL_HIERARCHY_EXT_DETAIL where HRCHY_HDR_NAME = 'GLOBAL_HIERARCHY';  

time_before   PLS_INTEGER := DBMS_UTILITY.get_time;

BEGIN 
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     END CASE;

                     SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,SUBSTR(TRIM(NVL(EACH_REC.UPPER_LVL_VER_VALUE,'**')),1,2) AS "Value"
                                                         ))))
                                                  INTO V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL;      
                            INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         NVL(EACH_REC.HRCHY_DTL_EFF_DATE,SYSDATE),
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                        UPDATE HIERARCHY_DETAIL
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                                
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-2));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
 
                        begin
                            select /*+ INDEX(GLOBAL_HIERARCHY_EXT_DETAIL_T INDEX1_TEMP1 )*/
                            HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, TRIM(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_HRCHY_DTL_EFF_DATE, V_HRCHY_DTL_EXP_DATE, V_UPPER_LVL_VER_VALUE_N
                              FROM GLOBAL_HIERARCHY_EXT_DETAIL_T
                             WHERE HRCHY_HDR_NAME = 'GLOBAL_HIERARCHY'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                        EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                        END;
                         SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,SUBSTR(TRIM(nvl(V_UPPER_LVL_VER_VALUE_N, '**')),1,2) AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 
                         INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  END IF;
               END IF;

                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := NULL;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_HRCHY_DTL_DESC         := NULL; 
                    V_hrchy_dtl_eff_date     := NULL; 
                    V_hrchy_dtl_exp_date     := NULL;
            END LOOP;

   COMMIT;
DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
   DBMS_OUTPUT.PUT_LINE('GLOBAL_HIERARCHY_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('GLOBAL_HIERARCHY_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL|| ' : '||SQLERRM || ' : ' ||SQLCODE );  
       --RAISE;
END GLOBAL_HIERARCHY_LOAD;

PROCEDURE ADMIN_TO_SALES_DIV_HIER_LOAD
/**********************************************************
ADMIN_TO_SALES_DIV_HIER_LOAD

created : 08/12/2013 SH CCN Project....
**********************************************************/ 
IS

    -- load the data in HIERARCHY_DETAIL table
    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%TYPE;
    V_UPPER_LVL_VER_VALUE_N  ADMIN_SALES_DIV_EXT_DETAIL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_STMNT_TYPE             VARCHAR2(100);
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL.hrchy_dtl_exp_date%TYPE;
time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
  CURSOR ALL_REC_CUR IS
     select * from ADMIN_SALES_DIV_EXT_DETAIL where HRCHY_HDR_NAME = 'ADMIN_TO_SALES_DIVISION';     

BEGIN 
    
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '4' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     END CASE;


                     V_STMNT_TYPE := TRIM(EACH_REC.UPPER_LVL_VER_VALUE);
                    IF length(V_STMNT_TYPE) >2 THEN 
                          SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,NVL(substr(V_STMNT_TYPE, 1,2),'**') AS "Value"                                                     
                                                         ))),
                                            xmlelement("upper_lvl_ver_desc", 
                                                    XMLFOREST(
                                                          'ManagerName'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,SUBSTR(V_STMNT_TYPE, 3) as "Value"                                                     
                                                         )))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL;  
                    else
                           SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,SUBSTR(TRIM(NVL(V_STMNT_TYPE,'**')),1,2) AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 
                    end if;      
                                                  
                            INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );

                        UPDATE HIERARCHY_DETAIL
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                                
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '4' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-2));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
                 
                        SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,'**' AS "Value"
                                                         ))))
                                                  INTO V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL; 
                         
                         begin
                            select /*+ INDEX(ADMIN_SALES_DIV_EXT_DETAIL_T INDEX1_TEMP2 )*/
                                   HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, TRIM(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_HRCHY_DTL_EFF_DATE, V_HRCHY_DTL_EXP_DATE, V_UPPER_LVL_VER_VALUE_N
                              FROM ADMIN_SALES_DIV_EXT_DETAIL_T
                             WHERE HRCHY_HDR_NAME = 'ADMIN_TO_SALES_DIVISION'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                        EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                        END;
                        
                   if length(V_UPPER_LVL_VER_VALUE_N) >2 then  

                          SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,NVL(substr(V_UPPER_LVL_VER_VALUE_N, 1,2),'**') AS "Value"                                                     
                                                         ))),
                                            xmlelement("upper_lvl_ver_desc", 
                                                    XMLFOREST(
                                                          'ManagerName'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,SUBSTR(V_UPPER_LVL_VER_VALUE_N, 3) as "Value"                                                     
                                                         )))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL;     
                    else
                        SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,NVL(substr(TRIM(V_UPPER_LVL_VER_VALUE_N), 1,2),'**') AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL; 
                    end if;

                         INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  END IF;
               END IF;
                       
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := NULL;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_hrchy_dtl_eff_date     := NULL;
                    V_hrchy_dtl_exp_date     := NULL;
                    V_HRCHY_DTL_DESC         := NULL;
                    
            end LOOP;
            COMMIT;
DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
    DBMS_OUTPUT.PUT_LINE('ADMIN_TO_SALES_DIV_HIER_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('ADMIN_TO_SALES_DIV_HIER_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL);  
END ADMIN_TO_SALES_DIV_HIER_LOAD;

PROCEDURE ADMIN_TO_SALES_AREA_HIER_LOAD
/*******************************************************************************
	ADMIN_TO_SALES_AREA_HIER_LOAD

created : 08/12/2013 SH CCN Project.... 
*******************************************************************************/
IS

    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%type;
    V_UPPER_LVL_VER_VALUE_N  ADMIN_SALES_AREA_EXT_DETAIL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_STMNT_TYPE             VARCHAR2(100);
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL.hrchy_dtl_exp_date%TYPE;

  CURSOR ALL_REC_CUR IS
     select * from ADMIN_SALES_AREA_EXT_DETAIL where HRCHY_HDR_NAME = 'ADMIN_TO_SALES_AREA';  
time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
begin 

      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '5' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     end case;

                    V_STMNT_TYPE := TRIM(EACH_REC.UPPER_LVL_VER_VALUE);
                    IF length(V_STMNT_TYPE) >2 THEN 
                          SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,NVL(substr(V_STMNT_TYPE, 1,2),'**') AS "Value"                                                     
                                                         ))),
                                            xmlelement("upper_lvl_ver_desc", 
                                                    XMLFOREST(
                                                          'ManagerName'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,SUBSTR(V_STMNT_TYPE, 3) as "Value"                                                     
                                                         )))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL;  
                    else
                           SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,NVL(substr(TRIM(V_STMNT_TYPE), 1,2),'**') AS "Value" 
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 
                    end if; 

                            INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );

                        UPDATE HIERARCHY_DETAIL
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                                
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '5' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-2));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
                 
                   
                         begin
                            select /*+ INDEX(ADMIN_SALES_AREA_EXT_DETAIL_T INDEX1_TEMP3 )*/
                                   HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, trim(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_HRCHY_DTL_EFF_DATE, V_HRCHY_DTL_EXP_DATE , V_UPPER_LVL_VER_VALUE_N
                              FROM ADMIN_SALES_AREA_EXT_DETAIL_T
                             WHERE HRCHY_HDR_NAME = 'ADMIN_TO_SALES_AREA'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                         EXCEPTION
                            when OTHERS then
                                 NULL;
                         end;

                    if length(V_UPPER_LVL_VER_VALUE_N) >2 then  

                          SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,NVL(substr(V_UPPER_LVL_VER_VALUE_N, 1,2),'**') AS "Value"                                                     
                                                         ))),
                                            xmlelement("upper_lvl_ver_desc", 
                                                    XMLFOREST(
                                                          'ManagerName'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,SUBSTR(V_UPPER_LVL_VER_VALUE_N, 3) as "Value"                                                     
                                                         )))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL;     
                    else
                        SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,NVL(substr(TRIM(V_UPPER_LVL_VER_VALUE_N), 1,2),'**') AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL; 
                    end if;
                         INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  END IF;
               END IF;
                       
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := null;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_hrchy_dtl_eff_date     := NULL;
		    V_hrchy_dtl_exp_date     := NULL;
                    V_HRCHY_DTL_DESC	     := NULL;
            end LOOP;
   COMMIT;
DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
   DBMS_OUTPUT.PUT_LINE('ADMIN_TO_SALES_AREA_HIER_LOAD completed. ');
END ADMIN_TO_SALES_AREA_HIER_LOAD;

PROCEDURE ADMIN_TO_SALES_DIST_HIER_LOAD
/**********************************************************
ADMIN_TO_SALES_DIST_HIER_LOAD

created : 08/12/2013 SH CCN Project.... 
*******************************************************************************/
IS

    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%type;
    V_UPPER_LVL_VER_VALUE_N  ADMIN_SALES_DIST_EXT_DETAIL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_STMNT_TYPE             VARCHAR2(100);
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL.hrchy_dtl_exp_date%TYPE;

  CURSOR ALL_REC_CUR IS
     select * from ADMIN_SALES_DIST_EXT_DETAIL where HRCHY_HDR_NAME = 'ADMIN_TO_SALES_DISTRICT';-- order by HRCHY_DTL_LEVEL desc;     
time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
BEGIN 
    
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     END CASE;
     
                     V_STMNT_TYPE := TRIM(EACH_REC.UPPER_LVL_VER_VALUE);
                     IF length(V_STMNT_TYPE) >2 THEN 
                          SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,NVL(substr(V_STMNT_TYPE, 1,2),'**') AS "Value"                                                     
                                                         ))),
                                            xmlelement("upper_lvl_ver_desc", 
                                                    XMLFOREST(
                                                          'ManagerName'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,SUBSTR(V_STMNT_TYPE, 3) as "Value"                                                     
                                                         )))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL;  
                    else
                           SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,NVL(substr(TRIM(V_STMNT_TYPE), 1,2),'**') AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 
                    end if;                              
                            INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );

                        UPDATE HIERARCHY_DETAIL
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                                
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-2));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
 
                         begin
                            select /*+ INDEX(ADMIN_SALES_DIST_EXT_DETAIL_T INDEX1_TEMP4 )*/
                                   HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, TRIM(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_HRCHY_DTL_EFF_DATE, V_HRCHY_DTL_EXP_DATE, V_UPPER_LVL_VER_VALUE_N  
                              FROM ADMIN_SALES_DIST_EXT_DETAIL_T
                             WHERE HRCHY_HDR_NAME = 'ADMIN_TO_SALES_DISTRICT'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                        EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                        END;
                        
                        if length(V_UPPER_LVL_VER_VALUE_N) >2 then  

                          SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,NVL(substr(V_UPPER_LVL_VER_VALUE_N, 1,2),'**') AS "Value"                                                     
                                                         ))),
                                            xmlelement("upper_lvl_ver_desc", 
                                                    XMLFOREST(
                                                          'ManagerName'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,SUBSTR(V_UPPER_LVL_VER_VALUE_N, 3) as "Value"                                                     
                                                         )))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL;     
                    else
                        SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,NVL(substr(TRIM(V_UPPER_LVL_VER_VALUE_N), 1,2),'**') AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL; 
                    end if;

                         INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  END IF;
               END IF;
                       
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_DESC         := NULL;
                    V_HRCHY_DTL_EXP_DATE     := NULL;
                    V_HRCHY_DTL_EFF_DATE     := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := NULL;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
            end LOOP;
  COMMIT;
  DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
  DBMS_OUTPUT.PUT_LINE('ADMIN_TO_SALES_DIST_HIER_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('ADMIN_TO_SALES_DIST_HIER_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL); 
END ADMIN_TO_SALES_DIST_HIER_LOAD;
                                                    
PROCEDURE LEGACY_GL_DIV_HIER_LOAD 
/******************************************************************************
LEGACY_GL_DIV_HIER_LOAD

created : 08/12/2013 SH CCN Project.... 

*******************************************************************************/
IS

    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%type;
    V_UPPER_LVL_VER_VALUE_N  LEGACY_GL_DIVISION_EXT_DTL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL.hrchy_dtl_exp_date%TYPE;

  CURSOR ALL_REC_CUR IS
     select * from LEGACY_GL_DIVISION_EXT_DETAIL where HRCHY_HDR_NAME = 'LEGACY_GL_DIVISION';     
time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
BEGIN 
    
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '4' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-3));
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -3, 3);
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '5' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     END CASE;


                     SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,SUBSTR(TRIM(NVL(EACH_REC.UPPER_LVL_VER_VALUE,'**')),1,2) AS "Value"
                                                         ))))
                                                  INTO V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL;      
                                                  
                            INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );

                        UPDATE HIERARCHY_DETAIL
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                         
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 1, 2);
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '4' THEN
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-5));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_PREV_LVL_VAL, -2, 2);
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-3));
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '5' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-3));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -3, 3);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
                 
              
                         begin
                            select /*+ INDEX(LEGACY_GL_DIVISION_EXT_DTL_T INDEX1_TEMP5 )*/
                                  HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, TRIM(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_HRCHY_DTL_EFF_DATE, V_HRCHY_DTL_EXP_DATE, V_UPPER_LVL_VER_VALUE_N 
                              FROM LEGACY_GL_DIVISION_EXT_DTL_T
                             WHERE HRCHY_HDR_NAME = 'LEGACY_GL_DIVISION'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                        EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                        END;
                        
                        SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,SUBSTR(TRIM(NVL(V_UPPER_LVL_VER_VALUE_N,'**')),1,2) AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL;

                        begin
                        
                         INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                        EXCEPTION
                          WHEN OTHERS THEN
                            DBMS_OUTPUT.PUT_LINE('Failed for ' || EACH_REC.HRCHY_DTL_CURR_LVL_VAL);
                        END;
                  END IF;
               END IF;
                       
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := NULL;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_hrchy_dtl_eff_date     := NULL;
                    V_hrchy_dtl_exp_date     := NULL;
                    V_HRCHY_DTL_DESC         := NULL;
            end LOOP;
  COMMIT;
  DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
  DBMS_OUTPUT.PUT_LINE('LEGACY_GL_DIV_HIER_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('LEGACY_GL_DIV_HIER_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL);
END LEGACY_GL_DIV_HIER_LOAD;

PROCEDURE ALTERNATE_DAD_HIER_LOAD
/******************************************************************************
ALTERNATE_DAD_HIER_LOAD

created : 08/12/2013 SH CCN Project.... 

*******************************************************************************/
IS

    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%type;
    V_UPPER_LVL_VER_VALUE_N  ALTERNATE_DAD_EXT_DETAIL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_HRCHY_DTL_LEVEL        HIERARCHY_DETAIL.HRCHY_DTL_LEVEL%TYPE;
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL.hrchy_dtl_exp_date%TYPE;

  CURSOR ALL_REC_CUR IS
     select * from ALTERNATE_DAD_EXT_DETAIL where HRCHY_HDR_NAME = 'ALTERNATE_DAD';    
time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
BEGIN 
    
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     END CASE;


                     SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,SUBSTR(TRIM(NVL(EACH_REC.UPPER_LVL_VER_VALUE,'**')),1,2) AS "Value"
                                                         ))))
                                                  INTO V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL;      
                                                  
                            INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );

                        UPDATE HIERARCHY_DETAIL
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                                
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-2));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
        
                         
                         BEGIN
                            SELECT /*+ INDEX(ALTERNATE_DAD_EXT_DETAIL_T INDEX1_TEMP6 )*/
                                   HRCHY_DTL_DESC, hrchy_dtl_eff_date, hrchy_dtl_exp_date, TRIM(UPPER_LVL_VER_VALUE)
                              INTO V_HRCHY_DTL_DESC, V_hrchy_dtl_eff_date, V_hrchy_dtl_exp_date,  V_UPPER_LVL_VER_VALUE_N
                              FROM ALTERNATE_DAD_EXT_DETAIL_T
                             WHERE HRCHY_HDR_NAME = 'ALTERNATE_DAD'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                        EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                        END;
                        
                        SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,SUBSTR(TRIM(NVL(V_UPPER_LVL_VER_VALUE_N,'**')),1,2) AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 
                                                  
                         INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  END IF;
               END IF;
                       
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := NULL;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_HRCHY_DTL_DESC         := NULL; 
                    V_hrchy_dtl_eff_date     := NULL; 
                    V_hrchy_dtl_exp_date     := NULL;
            END LOOP;
      COMMIT;
      DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
      DBMS_OUTPUT.PUT_LINE('ALTERNATE_DAD_HIER_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('ALTERNATE_DAD_HIER_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL);
END ALTERNATE_DAD_HIER_LOAD;

PROCEDURE CITY_MANAGER_DAD_HIER_LOAD
/******************************************************************************
CITY_MANAGER_DAD_HIER_LOAD

created : 08/12/2013 SH CCN Project.... 

*******************************************************************************/
IS

    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%type;
    V_UPPER_LVL_VER_VALUE_N  CITY_MANAGER_DAD_EXT_DETAIL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL.hrchy_dtl_exp_date%TYPE;

  cursor ALL_REC_CUR is
     select * from CITY_MANAGER_DAD_EXT_DETAIL;-- where HRCHY_HDR_NAME = 'CITY_MANAGER_DAD';     
time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
BEGIN 
    
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '5' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     END CASE;


                     SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,SUBSTR(TRIM(NVL(EACH_REC.UPPER_LVL_VER_VALUE,'**')),1,2) AS "Value"
                                                         ))))
                                                  INTO V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL;      
                                                  
                            INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( 'CITY_MANAGER_DAD', --EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );

                        UPDATE HIERARCHY_DETAIL
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                         
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 1, 2);
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '5' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-2));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
 
                          begin
                            select /*+ INDEX(CITY_MANAGER_DAD_EXT_DETAIL_T INDEX1_TEMP7 )*/
                                   HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, TRIM(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_hrchy_dtl_eff_date, V_hrchy_dtl_exp_date, V_UPPER_LVL_VER_VALUE_N  
                              from CITY_MANAGER_DAD_EXT_DETAIL_T
                             where --HRCHY_HDR_NAME = 'CITY_MANAGER_DAD'
                               HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                          EXCEPTION
                            when OTHERS then
                                 DBMS_OUTPUT.PUT_LINE('No desc for '|| EACH_REC.HRCHY_DTL_LEVEL || ' '||V_HRCHY_DTL_CURR_LVL_VAL);
                                 
                          END;
                        
                         SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,SUBSTR(TRIM(NVL(V_UPPER_LVL_VER_VALUE_N,'**')),1,2) AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 

                         INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( 'CITY_MANAGER_DAD', --EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  end if;
               END IF;
                       
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := NULL;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_hrchy_dtl_eff_date     := NULL;
                    V_hrchy_dtl_exp_date     := NULL;
                    V_HRCHY_DTL_DESC         := NULL;
            end LOOP;
 COMMIT;
 DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
 DBMS_OUTPUT.PUT_LINE('CITY_MANAGER_DAD_HIER_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('CITY_MANAGER_DAD_HIER_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL);
END CITY_MANAGER_DAD_HIER_LOAD;

PROCEDURE FACTS_DIVISION_HIER_LOAD
/******************************************************************************
FACTS_DIVISION_HIER_LOAD

created : 08/12/2013 SH CCN Project.... 

*******************************************************************************/
IS

    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%TYPE;
    V_UPPER_LVL_VER_VALUE_N  FACTS_DIVISION_EXT_DETAIL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_HRCHY_DTL_LEVEL        HIERARCHY_DETAIL.HRCHY_DTL_LEVEL%TYPE;
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL.hrchy_dtl_exp_date%TYPE;
    
  cursor ALL_REC_CUR is
     select * from FACTS_DIVISION_EXT_DETAIL where HRCHY_HDR_NAME = 'FACTS_DIVISION';    

time_before   PLS_INTEGER;

begin 
   time_before := DBMS_UTILITY.get_time;
      --creating the two levels as they are not in the file
      INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( 'FACTS_DIVISION',
                                                         '1',
                                                         '~~~',
                                                         '01',
                                                         '0101',
                                                         '16-Mar-2007',
                                                         null,
                                                         'NORTH AMERICA',
                                                         '01',
                                                         '<attributes><upper_lvl_ver_desc><Name>Statement Type</Name><Description>Picklist Value</Description><Value>**</Value></upper_lvl_ver_desc></attributes>'
                                                       );
                                                     
                          INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( 'FACTS_DIVISION',
                                                         '2',
                                                         '01',
                                                         '0101',
                                                         null,
                                                         '16-Mar-2007',
                                                         null,
                                                         'SHERWIN-WILLIAMS COMPANY',
                                                         '01',
                                                         '<attributes><upper_lvl_ver_desc><Name>Statement Type</Name><Description>Picklist Value</Description><Value>**</Value></upper_lvl_ver_desc></attributes>'
                                                       );
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     V_HRCHY_DTL_LEVEL := EACH_REC.HRCHY_DTL_LEVEL +2;

                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                            V_HRCHY_DTL_PREV_LVL_VAL := '0101';
                            V_HRCHY_DTL_CURR_LVL_VAL := '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                            V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -4, 4);
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                            V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                            V_HRCHY_DTL_CURR_LVL_VAL := '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                            V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-6));
                            V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                         END CASE;

                     SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         --,TRIM(EACH_REC.UPPER_LVL_VER_VALUE) AS "Value"
                                                         ,SUBSTR(TRIM(NVL(EACH_REC.UPPER_LVL_VER_VALUE,'**')),1,2) AS "Value"
                                                         ))))
                                                  INTO V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL;      
                                                  
                            INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         V_HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                        UPDATE HIERARCHY_DETAIL
                                 SET HRCHY_DTL_NEXT_LVL_VAL = '0101'||EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(V_HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF V_HRCHY_DTL_LEVEL <>  '1' THEN
                        CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                            V_HRCHY_DTL_PREV_LVL_VAL := '01';
                            V_HRCHY_DTL_CURR_LVL_VAL := '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                            V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 1,4);
                            V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                            V_HRCHY_DTL_NEXT_LVL_VAL := '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                            --V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                            V_HRCHY_DTL_CURR_LVL_VAL := '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                            V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-6));
                            V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 1, 4);
                            V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -4, 4);
                            V_HRCHY_DTL_NEXT_LVL_VAL :=  '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;

                         BEGIN
                            select /*+ INDEX(FACTS_DIVISION_EXT_DETAIL_T INDEX1_TEMP8 )*/
                                   HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, TRIM(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_HRCHY_DTL_EFF_DATE, V_HRCHY_DTL_EXP_DATE, V_UPPER_LVL_VER_VALUE_N  
                              FROM FACTS_DIVISION_EXT_DETAIL_T --FACTS_DIVISION_EXT_DETAIL
                             where HRCHY_HDR_NAME = 'FACTS_DIVISION'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and '0101'|| HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                         EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                         END;       
                         
                         --the level '2' are not in the file, hence created
                         if V_HRCHY_DTL_LEVEL = 3 and V_HRCHY_DTL_DESC is null then
                            V_HRCHY_DTL_DESC := 'SHERWIN-WILLIAMS COMPANY';
                         end if;
                         SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,SUBSTR(TRIM(NVL(V_UPPER_LVL_VER_VALUE_N,'**')),1,2) AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 
                         INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         V_HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  END IF;
               END IF;
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := null;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_hrchy_dtl_eff_date     := NULL;
                    V_hrchy_dtl_exp_date     := NULL;
                    V_HRCHY_DTL_DESC         := NULL;
            end LOOP;
  COMMIT;
DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
  DBMS_OUTPUT.PUT_LINE('FACTS_DIVISION_HIER_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('FACTS_DIVISION_HIER_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL);
END FACTS_DIVISION_HIER_LOAD; 

PROCEDURE HIER_LOAD_MAIN_SP
/******************************************************************
This Procedure is a wrapper for the Hierarchy Load all the files from
mainframe in /app/ccn/datafiles into the HIERARCHY_DETAIL table
This Procedure
    * Disables all the Triggers for HIERARCHY_DETAIL Table
    * Deletes the HIERARCHY_DETAIL table
    * Loads the HIERARCHY_DETAIL table
    * Re-Enables the Triggers

Created: SH 05/06/2013
******************************************************************/
AS
    V_CONTEXT VARCHAR2(200);
  time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
  BEGIN
CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
      V_CONTEXT := 'Alter triggers - DISABLE ';
      ALTER_HIER_TRIGGERS ( 'DISABLE' );
      
      V_CONTEXT := 'Loading Temp Tables from External Tables ';
      LOAD_TEMP_TABLES();

      V_CONTEXT := 'Truncating HIERARCHY Tables ';
      execute immediate 'TRUNCATE TABLE HIERARCHY_DETAIL';
      execute immediate 'TRUNCATE TABLE HIERARCHY_DESCRIPTION';
      DELETE FROM HIERARCHY_HEADER;

      V_CONTEXT := 'Loading HEADER and DESCRIPTION Tables';
      HIERARCHY_LOADING_PKG.HEADER_DESCRIPTION_INS_SP;

      V_CONTEXT := 'Loading GLOBAL_HIERARCHY ';
      HIERARCHY_LOADING_PKG.GLOBAL_HIERARCHY_LOAD;

      V_CONTEXT := 'Loading ADMIN_TO_SALES_DIV ';
      HIERARCHY_LOADING_PKG.ADMIN_TO_SALES_DIV_HIER_LOAD;

      V_CONTEXT := 'Loading ADMIN_TO_SALES_AREA ';
      HIERARCHY_LOADING_PKG.ADMIN_TO_SALES_AREA_HIER_LOAD;

      V_CONTEXT := 'Loading ADMIN_TO_SALES_DIST ';
      HIERARCHY_LOADING_PKG.ADMIN_TO_SALES_DIST_HIER_LOAD;

      V_CONTEXT := 'Loading LEGACY_GL_DIVISION ';
      HIERARCHY_LOADING_PKG.LEGACY_GL_DIV_HIER_LOAD;
      
      V_CONTEXT := 'Loading ALTERNATE_DAD ';
      HIERARCHY_LOADING_PKG.ALTERNATE_DAD_HIER_LOAD;

      --V_CONTEXT := 'Loading CITY_MANAGER_DAD ';
      --HIERARCHY_LOADING_PKG.CITY_MANAGER_DAD_HIER_LOAD;

      V_CONTEXT := 'Loading FACTS_DIVISION ';
      HIERARCHY_LOADING_PKG.FACTS_DIVISION_HIER_LOAD;
      
      --After inserting, if the cost center is part of global, update GLOBAL_HIERARCHY_IND to 'Y' from 'N'
      UPDATE COST_CENTER CC
         SET GLOBAL_HIERARCHY_IND = 'Y'
       WHERE EXISTS (SELECT 1
                       FROM HIERARCHY_DETAIL HD,
                            HIERARCHY_HEADER HH
                      WHERE HD.HRCHY_HDR_NAME         IN ('GLOBAL_HIERARCHY','FACTS_DIVISION','LEGACY_GL_DIVISION')
                        AND HH.HRCHY_HDR_NAME         = HD.HRCHY_HDR_NAME 
                        AND HH.HRCHY_HDR_LEVELS       = HD.HRCHY_DTL_LEVEL
                        AND HD.HRCHY_DTL_CURR_ROW_VAL = CC.COST_CENTER_CODE);
      
      V_CONTEXT := 'Alter triggers - ENABLE ';
      ALTER_HIER_TRIGGERS ( 'ENABLE' );

--comment
DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
      COMMIT;
      CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION; 
EXCEPTION
   WHEN OTHERS THEN
      dbms_output.put_line('HIERARCHY_LOADING_PKG failed at ' ||  V_CONTEXT);

END HIER_LOAD_MAIN_SP;

PROCEDURE SALES_MGR_HIERARCHY_HIER_LOAD
/**********************************************************
SALES_MGR_HIERARCHY_HIER_LOAD

created : 06/26/2014 jxc517 CCN Project.... 
*******************************************************************************/
IS

    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%type;
    V_UPPER_LVL_VER_VALUE_N  SALES_MGR_HIERARCHY_EXT_DTL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_STMNT_TYPE             VARCHAR2(100);
    V_MANAGER_NAME           VARCHAR2(500);
    V_GEMS_ID                VARCHAR2(100);
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL.hrchy_dtl_exp_date%TYPE;

 V_CONTEXT VARCHAR2(200);

  CURSOR ALL_REC_CUR IS
     select HRCHY_HDR_NAME,
           HRCHY_DTL_LEVEL,
           HRCHY_DTL_PREV_LVL_VAL,
           HRCHY_DTL_CURR_LVL_VAL,
           HRCHY_DTL_NEXT_LVL_VAL,
           HRCHY_DTL_EFF_DATE,
           null HRCHY_DTL_EXP_DATE,
           HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
     from SALES_MGR_HIERARCHY_EXT_DTL
     where HRCHY_HDR_NAME IN ('SALES-MANAGER-HIERARCHY','SALES_MANAGER_HIERARCHY');
time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
BEGIN 
CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
      V_CONTEXT := 'Alter triggers - DISABLE ';
      ALTER_HIER_TRIGGERS ( 'DISABLE' );

delete from hierarchy_detail where HRCHY_HDR_NAME LIKE  'SALES%';
delete from audit_log where transaction_id like '%SALES_MANAGER_HIERARCHY%';
INSERT INTO HIERARCHY_HEADER
SELECT 'SALES_MANAGER_HIERARCHY',
       HRCHY_HDR_LEVELS,
       HRCHY_HDR_DESC,
       STMNT_TYPE_VALIDATION_IND,
       ALL_APPLICABLE_ATTRIBUTES
  FROM HIERARCHY_HEADER
 WHERE HRCHY_HDR_NAME = 'GLOBAL_HIERARCHY';
INSERT INTO HIERARCHY_DESCRIPTION
SELECT 'SALES_MANAGER_HIERARCHY',
       HRCHY_HDR_LVL_NBR,
       HRCHY_HDR_LVL_DESC,
       UPPER_LVL_VER_VALUE,
       HRCHY_GLOBAL_LVL_NBR,
       LVL_VALUE_SIZE
  FROM HIERARCHY_DESCRIPTION
 WHERE HRCHY_HDR_NAME = 'GLOBAL_HIERARCHY';
commit;

      
      EXECUTE IMMEDIATE 'TRUNCATE TABLE SALES_MGR_HIERARCHY_EXT_DTL_T';
      
      INSERT INTO SALES_MGR_HIERARCHY_EXT_DTL_T
         SELECT /*+ no_parallel (SALES_MGR_HIERARCHY_EXT_DTL)*/ 
           HRCHY_HDR_NAME,
           HRCHY_DTL_LEVEL,
           HRCHY_DTL_PREV_LVL_VAL,
           HRCHY_DTL_CURR_LVL_VAL,
           HRCHY_DTL_NEXT_LVL_VAL,
           HRCHY_DTL_EFF_DATE,
           null,
           HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
           FROM SALES_MGR_HIERARCHY_EXT_DTL;
    
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '6' THEN
                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL := RPAD(EACH_REC.HRCHY_DTL_CURR_LVL_VAL,12,' ');
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     END CASE;
     
                     V_STMNT_TYPE := TRIM(EACH_REC.UPPER_LVL_VER_VALUE);
                     IF length(V_STMNT_TYPE) >2 THEN 
                          V_GEMS_ID      := TRIM(REGEXP_REPLACE(substr(V_STMNT_TYPE,3,
                                                                       instr(V_STMNT_TYPE,' ',1,1)-3),
                                                                ' +',' '));
                          V_MANAGER_NAME := TRIM(REGEXP_REPLACE(substr(V_STMNT_TYPE,
                                                                       instr(V_STMNT_TYPE,' ',1,1)+1),
                                                                ' +',' '));
                          
                          SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,NVL(substr(V_STMNT_TYPE, 1,2),'**') AS "Value"                                                     
                                                         ))),
                                            xmlelement("upper_lvl_ver_desc", 
                                                    xmlelement("Name",'GEMS_ID'),
                                                    xmlelement("Description",'Picklist Value'),
                                                    xmlelement("Value",V_GEMS_ID)
                                                    ),
                                            xmlelement("upper_lvl_ver_desc", 
                                                    XMLFOREST(
                                                          'ManagerName'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         --,SUBSTR(V_STMNT_TYPE, 3) as "Value"                                                     
                                                         ,V_MANAGER_NAME as "Value"
                                                         )))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL;  
                    else
                           SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,NVL(substr(TRIM(V_STMNT_TYPE), 1,2),'**') AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 
                    end if;                              
                            INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( REPLACE(EACH_REC.HRCHY_HDR_NAME,'-','_'),
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );

                        UPDATE HIERARCHY_DETAIL
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = REPLACE(EACH_REC.HRCHY_HDR_NAME,'-','_')
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                                
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-2));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '6' THEN
                             EACH_REC.HRCHY_DTL_CURR_LVL_VAL := RPAD(EACH_REC.HRCHY_DTL_CURR_LVL_VAL,12,' ');
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
 
                         begin
                            select /*+ INDEX(SALES_MGR_HIERARCHY_EXT_DTL_T INDX_SALES_MGR_HIERARCHY_T )*/
                                   HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, TRIM(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_HRCHY_DTL_EFF_DATE, V_HRCHY_DTL_EXP_DATE, V_UPPER_LVL_VER_VALUE_N  
                              FROM SALES_MGR_HIERARCHY_EXT_DTL_T
                             WHERE HRCHY_HDR_NAME IN ('SALES-MANAGER-HIERARCHY','SALES_MANAGER_HIERARCHY')
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                        EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                                DBMS_OUTPUT.PUT_LINE('SALES_MGR_HIERARCHY_HIER_LOAD Failed at ::::: '|| V_HRCHY_DTL_CURR_LVL_VAL || '-' || SQLERRM); 
                        END;
                        
                        if length(V_UPPER_LVL_VER_VALUE_N) >2 then  
                          V_GEMS_ID      := TRIM(REGEXP_REPLACE(substr(V_STMNT_TYPE,3,
                                                                       instr(V_STMNT_TYPE,' ',1,1)-3),
                                                                ' +',' '));
                          V_MANAGER_NAME := TRIM(REGEXP_REPLACE(substr(V_UPPER_LVL_VER_VALUE_N,
                                                                     instr(V_UPPER_LVL_VER_VALUE_N,' ',1,1)+1),
                                                                    ' +',' '));
                          SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         ,NVL(substr(V_UPPER_LVL_VER_VALUE_N, 1,2),'**') AS "Value"                                                     
                                                         ))),
                                            xmlelement("upper_lvl_ver_desc", 
                                                    xmlelement("Name",'GEMS_ID'),
                                                    xmlelement("Description",'Picklist Value'),
                                                    xmlelement("Value",V_GEMS_ID)
                                                    ),
                                            xmlelement("upper_lvl_ver_desc", 
                                                    XMLFOREST(
                                                          'ManagerName'  AS "Name"
                                                         ,'Picklist Value' as "Description"
                                                         --,SUBSTR(V_UPPER_LVL_VER_VALUE_N, 3) as "Value"
                                                         ,V_MANAGER_NAME as "Value"
                                                         )))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL;     
                    else
                        SELECT XMLELEMENT ( "attributes",
                                   XMLAGG (XMLELEMENT ("upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS "Name"
                                                         ,'Picklist Value' AS "Description"
                                                         ,NVL(substr(TRIM(V_UPPER_LVL_VER_VALUE_N), 1,2),'**') AS "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL; 
                    end if;

                         INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( REPLACE(EACH_REC.HRCHY_HDR_NAME,'-','_'),
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  END IF;
               END IF;
                       
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_DESC         := NULL;
                    V_HRCHY_DTL_EXP_DATE     := NULL;
                    V_HRCHY_DTL_EFF_DATE     := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := NULL;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
            end LOOP;
  COMMIT;
  
  --update elevel 6 description with level 5 description
for rec in (
select (SELECT HRCHY_DTL_DESC
          from hierarchy_detail
          where HRCHY_HDR_NAME = 'SALES_MANAGER_HIERARCHY'
          and HRCHY_DTL_LEVEL = hd.HRCHY_DTL_LEVEL-1
          and HRCHY_DTL_CURR_LVL_VAL = hd.HRCHY_DTL_PREV_LVL_VAL
          and rownum < 2) col_desc, hd.*
  from hierarchy_detail hd where HRCHY_HDR_NAME = 'SALES_MANAGER_HIERARCHY'
and HRCHY_DTL_LEVEL = '6') loop
    update hierarchy_detail
       set HRCHY_DTL_DESC = rec.col_desc
     where HRCHY_HDR_NAME = 'SALES_MANAGER_HIERARCHY'
       and HRCHY_DTL_LEVEL = '6'
       and HRCHY_DTL_PREV_LVL_VAL = rec.HRCHY_DTL_PREV_LVL_VAL
       and HRCHY_DTL_CURR_LVL_VAL = rec.HRCHY_DTL_CURR_LVL_VAL
       and HRCHY_DTL_NEXT_LVL_VAL = rec.HRCHY_DTL_NEXT_LVL_VAL;
end loop;

    --Remove the double spaces first with some character
    UPDATE HIERARCHY_DETAIL
       SET HRCHY_DTL_PREV_LVL_VAL = REPLACE(HRCHY_DTL_PREV_LVL_VAL,'  ','##'),
           HRCHY_DTL_CURR_LVL_VAL = REPLACE(HRCHY_DTL_CURR_LVL_VAL,'  ','##'),
           HRCHY_DTL_NEXT_LVL_VAL = REPLACE(HRCHY_DTL_NEXT_LVL_VAL,'  ','##'),
           HRCHY_DTL_CURR_ROW_VAL = REPLACE(HRCHY_DTL_CURR_ROW_VAL,'  ','##')
     WHERE HRCHY_HDR_NAME = 'SALES_MANAGER_HIERARCHY';
    --Remove the single spaces now with double alpha notation of that character
    UPDATE HIERARCHY_DETAIL
       SET HRCHY_DTL_PREV_LVL_VAL = REPLACE(HRCHY_DTL_PREV_LVL_VAL,' ',DECODE(INSTR(HRCHY_DTL_PREV_LVL_VAL,' '),0,'#',SUBSTR(HRCHY_DTL_PREV_LVL_VAL,INSTR(HRCHY_DTL_PREV_LVL_VAL,' ')-1,1))),
           HRCHY_DTL_CURR_LVL_VAL = REPLACE(HRCHY_DTL_CURR_LVL_VAL,' ',DECODE(INSTR(HRCHY_DTL_CURR_LVL_VAL,' '),0,'#',SUBSTR(HRCHY_DTL_CURR_LVL_VAL,INSTR(HRCHY_DTL_CURR_LVL_VAL,' ')-1,1))),
           HRCHY_DTL_NEXT_LVL_VAL = REPLACE(HRCHY_DTL_NEXT_LVL_VAL,' ',DECODE(INSTR(HRCHY_DTL_NEXT_LVL_VAL,' '),0,'#',SUBSTR(HRCHY_DTL_NEXT_LVL_VAL,INSTR(HRCHY_DTL_NEXT_LVL_VAL,' ')-1,1))),
           HRCHY_DTL_CURR_ROW_VAL = REPLACE(HRCHY_DTL_CURR_ROW_VAL,' ',DECODE(INSTR(HRCHY_DTL_CURR_ROW_VAL,' '),0,'#',SUBSTR(HRCHY_DTL_CURR_ROW_VAL,INSTR(HRCHY_DTL_CURR_ROW_VAL,' ')-1,1)))
     WHERE HRCHY_HDR_NAME = 'SALES_MANAGER_HIERARCHY';

  DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
  DBMS_OUTPUT.PUT_LINE('SALES_MGR_HIERARCHY_HIER_LOAD completed. ');

      V_CONTEXT := 'Alter triggers - ENABLE ';
      ALTER_HIER_TRIGGERS ( 'ENABLE' );

      CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION; 

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('SALES_MGR_HIERARCHY_HIER_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL || '-' || SQLERRM); 
END SALES_MGR_HIERARCHY_HIER_LOAD;

END HIERARCHY_LOADING_PKG;

