create or replace PACKAGE BODY    CCN_BULK_LOAD_PROCESS
    AS
/***********************************************************
This package Body will have procedures and functions related
to the Dowload Templates for Bulk Load
Created  : 11/30/2018, sxg151, CCN Project...ASP-1156
Changed :
************************************************************/
PROCEDURE GET_BULK_LOAD_PRCSS_DTLS(
/*******************************************************************************
This procedure will return the external table name to hbuild the clob
and the file name for UI to save it

Created : 11/30/2018 sxg151 -- ccn coding project....
Changed :
*******************************************************************************/
    IN_BULK_LOAD_PROCESS_ID    IN       BULK_LOAD_PROCESSES.BULK_LOAD_PROCESS_ID%TYPE,
    OUT_TABLE_NAME                OUT   BULK_LOAD_PROCESSES.BULK_LOAD_EXT_TBL_NAME%TYPE,
    OUT_FILE_NAME                 OUT   USER_EXTERNAL_LOCATIONS.LOCATION%TYPE)
IS
BEGIN
      SELECT a.BULK_LOAD_EXT_TBL_NAME,
             b.LOCATION
        INTO OUT_TABLE_NAME,
             OUT_FILE_NAME
        FROM BULK_LOAD_PROCESSES a,
             USER_EXTERNAL_LOCATIONS b
       WHERE a.BULK_LOAD_EXT_TBL_NAME = b.TABLE_NAME
         AND BULK_LOAD_PROCESS_ID =IN_BULK_LOAD_PROCESS_ID;
EXCEPTION
    WHEN OTHERS THEN
       NULL;
END GET_BULK_LOAD_PRCSS_DTLS;

PROCEDURE BULK_LOAD_PRCSS_FILE_DTLS_UI_SP(
/*******************************************************************************
This procedure is to returns the clob built based on table and file name

Example input/output for process ID "x"

Input  : 3

Output : COST_CENTER_CODE,COST_CENTER_NAME,CATEGORY,ENTITY_TYPE,STATEMENT_TYPE,COUNTRY_CODE,TRANSPORT_TYPE,BEGIN_DATE,OPEN_DATE,MOVE_DATE,CLOSE_DATE,FINANCIAL_CLOSE_DATE,POS_PROG_VER_EFF_DATE,UPS_ZONE_CODE,RPS_ZONE_CODE,CURRENCY_CODE,POS_PROG_VER_NBR,LEASE_OWN_CODE,MISSION_TYPE_CODE,DUNS_NUMBER,PRI_LOGO_GROUP_IND,SCD_LOGO_GROUP_IND,BANKING_TYPE,DEPOSIT_BAG_REORDER,DEPOSIT_TICKET_REORDER,POP_KIT_CODE,GLOBAL_HIERARCHY_IND,STD_COST_IDENTIFIER,PRIM_COST_IDENTIFIER,STATUS_CODE,STATUS_EFFECTIVE_DATE,STATUS_EXPIRATION_DATE,TYPE_CODE,TYPE_EFFECTIVE_DATE,TYPE_EXPIRATION_DATE,MEX_ADDRESS_TYPE,MEX_EFFECTIVE_DATE,MEX_EXPIRATION_DATE,MEX_ADDRESS_LINE_1,MEX_ADDRESS_LINE_2,MEX_ADDRESS_LINE_3,MEX_CITY,MEX_PROVINCE_CODE,MEX_POSTAL_CODE,MEX_VALID_ADDRESS,MEX_COUNTRY_CODE,PRI_PHONE_NUMBER_TYPE,PRI_PHONE_AREA_CODE,PRI_PHONE_NUMBER,PRI_PHONE_EXTENSION,SCD_PHONE_NUMBER_TYPE,SCD_PHONE_AREA_CODE,SCD_PHONE_NUMBER,SCD_PHONE_EXTENSION,FAX_PHONE_NUMBER_TYPE,FAX_PHONE_AREA_CODE,FAX_PHONE_NUMBER,FAX_PHONE_EXTENSION,ADMIN_TO_SALES_AREA,ADMIN_TO_SALES_DISTRICT,ADMIN_TO_SALES_DIVISION,ALTERNATE_DAD,FACTS_DIVISION,LEGACY_GL_DIVISION,GLOBAL_HIERARCHY,PRICE_DISTRICT,PRICE_DIST_EFFECTIVE_DT,CREDIT_HIERARCHY,MANAGER_ID,ALLOCATION_CC,LAD_CUSTOMER_TYPE,POS_NON_STORE_IND


Created : 11/30/2018, sxg151, CCN Project.... ASP-1156
Changed :
*******************************************************************************/
    IN_BULK_LOAD_PROCESS_ID   IN       NUMBER,
    OUT_CLOB                     OUT   CLOB,
    OUT_FILE_NAME                OUT   VARCHAR2)
IS
    V_TABLE_NAME  BULK_LOAD_PROCESSES.BULK_LOAD_EXT_TBL_NAME%TYPE;
 
    CURSOR main_cursor IS
        SELECT *
          FROM USER_TAB_COLUMNS
         WHERE TABLE_NAME = V_TABLE_NAME
         ORDER BY COLUMN_ID;
BEGIN
    GET_BULK_LOAD_PRCSS_DTLS(IN_BULK_LOAD_PROCESS_ID,
                             V_TABLE_NAME,
                             OUT_FILE_NAME);

    FOR rec IN main_cursor LOOP
        OUT_CLOB := OUT_CLOB || rec.COLUMN_NAME || ',';
    END LOOP;

    OUT_CLOB := RTRIM(OUT_CLOB,',');
END BULK_LOAD_PRCSS_FILE_DTLS_UI_SP;

PROCEDURE BULK_LOAD_PROCESSES_UI_SP(
/*******************************************************************************
This procedure provides details about all bulk load processes currently existing in CCN Cost Center Schema
--UI pass the user Id
<BATCH_PROCESS_UI>
    <USER_ID>sxg151</USER_ID>
</BATCH_PROCESS_UI>

Created : 11/30/2018, sxg151, CCN Project.... ASP-1156
Changed :
*******************************************************************************/
    IN_XML                IN      VARCHAR2,
    OUT_BULK_PRC_DETAILS     OUT  SYS_REFCURSOR)
IS
    V_XML                  XMLTYPE := SYS.XMLTYPE(IN_XML);
    V_USER_ID              VARCHAR2(10);
    V_COUNT NUMBER := 0;
BEGIN
    IF (V_XML.EXISTSNODE('/BATCH_PROCESS_UI/USER_ID/text()') = 1) THEN
      V_USER_ID := v_xml.EXTRACT('/BATCH_PROCESS_UI/USER_ID/text()').GETSTRINGVAL();
    END IF;
    SELECT COUNT(*)
      INTO V_COUNT
      FROM SECURITY_MATRIX
     WHERE UPPER(USER_ID) =  UPPER(V_USER_ID)
       AND ROLE_CODE IN ('CCNU','CCND');

        IF V_COUNT <> 0 THEN
            OPEN OUT_BULK_PRC_DETAILS FOR
                SELECT BULK_LOAD_PROCESS_ID,
                       BULK_LOAD_PROCESS_NAME,
                       BULK_LOAD_PROCESS_DESCRIPTION
                  FROM BULK_LOAD_PROCESSES 
              ORDER BY BULK_LOAD_PROCESS_ID;
        ELSE
            OPEN OUT_BULK_PRC_DETAILS FOR
                SELECT DISTINCT BULK_LOAD_PROCESS_ID,
                                BULK_LOAD_PROCESS_NAME,
                                BULK_LOAD_PROCESS_DESCRIPTION
                           FROM BULK_LOAD_PROCESSES BP
                   WHERE EXISTS (SELECT x.*
                                   FROM ROLE_DETAILS RD,
                                        SECURITY_MATRIX SM,
                                        XMLTABLE ('/USER_RULES_DESCRIPTION/BATCH_PROCESS_WINDOW/*'
                                                   PASSING RD.USER_RULES_DESCRIPTION
                                                   COLUMNS Value VARCHAR2(30) PATH 'text()') x
                                  WHERE UPPER(SM.USER_ID) = UPPER(V_USER_ID)
                                    AND SM.ROLE_CODE      = RD.ROLE_CODE
                                    AND x.value           = BP.BULK_LOAD_PROCESS_NAME);
        END IF;         
END BULK_LOAD_PROCESSES_UI_SP;

END CCN_BULK_LOAD_PROCESS;