head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2012.08.27.19.13.59;	author sw\mdh01r;	state Exp;
branches;
next	;
deltatype	text;
kopt	kv;
permissions	666;
commitid	1a44503bc6f6452e;
filename	PICK_LIST_RULES.pkg;


desc
@@


1.1
log
@New Pick_List_Business_Rules code.
Committed on the Free edition of March Hare Software CVSNT Server.
Upgrade to CVS Suite for more features and support:
http://march-hare.com/cvsnt/
@
text
@create or replace
PACKAGE BODY PICK_LIST_RULES
    AS
/******************************************************************************
	PICK_LIST_RULES_PKG

	This Package is intended to validate business rules for the PICK_LIST
	function;  Namely the CODE_HEADER and CODE_DETAIL tables

created : MDH 8/27/2012 
 
******************************************************************************/

PROCEDURE PICK_LIST_RULES_SP (
/******************************************************************************
	PICK_LIST_RULES_SP

	This is the main validation program that will run through all the rules 
	and raise the first violation hit.

created : MDH 8/27/2012
******************************************************************************/	
	inCODE_HEADER_ROWTYPE  in  CODE_HEADER%rowtype )
        IS                  
    begin
		null;    
    end PICK_LIST_RULES_SP;
    
procedure CODE_HEADER_BR_SP ( 
/*****************************************************************************
	CODE_HEADER_BR_SP

	This procedure is intended to enforce the Business Rules
	for CODE_HEADER validation edits and verifying the following rules:
  
  The CODE_HEADER and CODE_DETAIL tables will house our "code" tables from 
       the Legacy IDMS CCN Database along with other "validation" codes 
       necessary for the new Oracle CCN Database.  
 
  In Addition:

  1.)  Code_Header_Name (30-VR/BR): 
       This field (column) will house the name of the "Code" table that is to  
          be edited.  
       This field (column) is mandatory and cannot be sapces.  
      
 2.)  Code_Header_Expire_User (20-BR): 
       This field (column) will house the user name or I.D. of the user who 
          expired or "inactivated" the table in question.
       This field (column) is mandatory on when the Code_Header_Expire_Flag 
          has been set to a "Y".
           
 3.)  Code_Header_Expire_Eff_Date (VR/BR): 
       This field (column) will house the date whent he table in question was  
          expired or "Inactivated".
       This field (column) is mandatory on when the Code_Header_Expire_Flag 
          has been set to a "Y".    
      
 4.)  Code_Header_DTL_VAL_Size (2,0 - BR): 
       This field (column) will contain the size of the "Code" on the CODE_
          DETAIL table.  
       This tells us how big the "Code" must be for editing puposes.
       This field (column) is mandatory and must be numeric and cannot be zeros.
 
 5.)  Code_Header_DTL_VAL_Default (32 - BR): 
       This field (column) will contain the default value for a particular
          "Pick List".  
       This field (column) is mandatory and must be numeric and cannot be zeros.
 
created : MDH 08/03/2012
******************************************************************************/	
  
   inCODE_HEADER_ROWTYPE   IN  CODE_HEADER%rowtype )

        IS 
        
-- Specify in_xxxxx_rowttype to get all the fields.

 code_header_name_exp              EXCEPTION;
 code_header_desc_exp              EXCEPTION;
 code_header_dflt_exp              EXCEPTION;
 code_header_dflt2_exp             EXCEPTION; 
 invalid_eff_date1_exp             EXCEPTION; /* TAL */
 invalid_eff_date2_exp             EXCEPTION; 
 inv_code_hdr_val_size_exp         EXCEPTION;
 code_hdr_val_Size_zero_exp        EXCEPTION;
 
 v_emp_data_rowtype          EMP_DATA%rowtype;
   
 v_curr_date date := sysdate;
 v_code   number;
 v_errm   varchar(500);
 v_count  number;
 v_terminal  number;
 v_date   date;
 
 
  
begin

/*******************************************************************************
  1A.)  Code_Header_Name (30-VR/BR): 
       This field (column) will house the name of the "Code" table that is to  
          be edited.  
       This field (column) is mandatory and cannot be sapces.  
      
*******************************************************************************/

begin

      if (inCODE_HEADER_ROWTYPE.code_header_name is NULL) OR 
         (inCODE_HEADER_ROWTYPE.code_header_name in (' ')) THEN 
--  See First Error A       
         RAISE code_header_name_exp ;
      end if;
--  
end;
--        
/*******************************************************************************
  1B.)  Code_Header_Description (100-VR/BR): 
       This field (column) will house a description of the "Code" table that is  
          to be edited.  
       This field (column) is mandatory and cannot be sapces.  
      
*******************************************************************************/

begin

      if (inCODE_HEADER_ROWTYPE.code_header_description is NULL) OR 
         (inCODE_HEADER_ROWTYPE.code_header_description in (' ')) THEN 
--  See Second Error B       
         RAISE code_header_desc_exp ;
      end if;
--  
end;
--
--
/*******************************************************************************
 2.)  Code_Header_Expire_User (20-BR): 
       This field (column) will house the user name or I.D. of the user who 
          expired or "inactivated" the table in question.
       This field (column) is mandatory on when the Code_Header_Expire_Flag 
          has been set to a "Y".
           
   This field will be set automatically.  No editing will be done.
    08/03/2012 MDH
*******************************************************************************/	  
--
/*******************************************************************************
   3.)  Code_Header_Expire_Eff_Date (VR/BR): 
       This field (column) will house the date whent he table in question was  
          expired or "Inactivated".
       This field (column) is mandatory on when the Code_Header_Expire_Flag 
          has been set to a "Y".         
*******************************************************************************/	 
--
/*******************************************************************************
       test for valid date
*******************************************************************************/	
--
begin
     if (inCODE_HEADER_ROWTYPE.code_header_expire_flag in ('Y'))  and 
        inCODE_HEADER_ROWTYPE.code_header_expire_eff_date  is null  then
             raise invalid_eff_date1_exp;
--  See Second Error C-1                   
      end if;
--    
     if (inCODE_HEADER_ROWTYPE.code_header_expire_flag in ('Y'))  and 
         inCODE_HEADER_ROWTYPE.code_header_expire_eff_date  is not null  then
      begin
        v_date  :=  inCODE_HEADER_ROWTYPE.code_header_expire_eff_date;
        -- Yes, it was a valid date (no EXCEPTION)
         EXCEPTION
           when others then
              raise invalid_eff_date2_exp;
--  See Second Error C-2                    
         -- No,  not a valid date
      end;
     end if;
end;
--
--
/*******************************************************************************
 4.)  Code_Header_DTL_VAL_Size (2,0 - BR): 
       This field (column) will contain the size of the "Code" on the CODE_
          DETAIL table.  
       This tells us how big the "Code" must be for editing puposes.
       This field (column) is mandatory and must be numeric and cannot be zeros.
*******************************************************************************/	 

begin

      if (TRANSLATE(inCODE_HEADER_ROWTYPE.code_header_dtl_val_size, ' +-.0123456789',' ') is not NULL) THEN 
--  See Fourth Error D-1       
         RAISE inv_code_hdr_val_size_exp ;
      end if;
--  
--
      if inCODE_HEADER_ROWTYPE.code_header_dtl_val_size < '1'  THEN 
--  See Fourth Error D-2           
          RAISE code_hdr_val_Size_zero_exp ;
      end if;	
--  
end ;
--   
/*******************************************************************************
 5.)  Code_Header_DTL_VAL_Default (32 - BR): 
       This field (column) will contain the default value for a particular
          "Pick List".  
       This field (column) is mandatory and must be numeric and cannot be zeros.
*******************************************************************************/
--
begin

      if (inCODE_HEADER_ROWTYPE.code_header_dtl_val_default is NULL) OR 
         (inCODE_HEADER_ROWTYPE.code_header_dtl_val_default in (' ')) THEN 
--  See Fifth Error E       
         RAISE code_header_dflt_exp ;
      end if;
--    
     if inCODE_HEADER_ROWTYPE.code_header_dtl_val_default is not NULL  then 
        if length(inCODE_HEADER_ROWTYPE.code_header_dtl_val_default)   <>
                  inCODE_HEADER_ROWTYPE.code_header_dtl_val_size  THEN 
--  See Sixt Error F       
         RAISE code_header_dflt2_exp ;
        end if;
      end if;
--        
--  
end;
--
--
/*******************************************************************************
	  EXCEPTION ERRORS AREA
*******************************************************************************/	  
	
 EXCEPTION

-- First Error A                   
               when code_header_name_exp then
                    v_code := errnums.en_code_header_name_err; 
                    errpkg.raise_err(v_code, 'CODE_HEADER_BR_SP.code_header_name_exp '  ,
                   'Code Header "' || inCODE_HEADER_ROWTYPE.code_header_name || 
                   '" Code Header Name cannot be blank "' );
-- Second Error B
                when code_header_desc_exp then
                    v_code := errnums.en_code_header_desc_err; 
                    errpkg.raise_err(v_code, 'CODE_HEADER_BR_SP.code_header_desc_exp '  ,
                   'Code Header "' || inCODE_HEADER_ROWTYPE.code_header_name || '" - "' ||
                   inCODE_HEADER_ROWTYPE.code_header_type ||
                   '" Code Header Description cannot be blank "' );
-- Third Error C-1    
                when invalid_eff_date1_exp then
                    v_code := errnums.en_invalid_eff_date_err; 
                    errpkg.raise_err(v_code, 'CODE_HEADER_BR_SP.invalid_eff_date_exp '  ,
                    'Code Header "' || inCODE_HEADER_ROWTYPE.code_header_name || '" - "' ||
                     inCODE_HEADER_ROWTYPE.code_header_type ||
                     '" Effective Date required when code value is flaged for expiration');                                  
-- Third Error C-2    
                when invalid_eff_date2_exp then
                    v_code := errnums.en_invalid_eff_date_err; 
                    errpkg.raise_err(v_code, 'CODE_HEADER_BR_SP.invalid_eff_date_exp '  ,
                    'Code Header "' || inCODE_HEADER_ROWTYPE.code_header_name || '" - "' ||
                     inCODE_HEADER_ROWTYPE.code_header_type ||
                     '" Effective Date entered "' ||
                     inCODE_HEADER_ROWTYPE.code_header_expire_eff_date ||
                     '" is not a valid date');               
-- Fourth Error D-1    
               when inv_code_hdr_val_size_exp then
                    v_code := errnums.en_inv_code_hdr_val_size_err; 
                    errpkg.raise_err(v_code, 'CODE_HEADER_BR_SP.invalid_code_hdr_val_size_exp '  ,
                     'Code Header "' || inCODE_HEADER_ROWTYPE.code_header_name || '" - "' ||
                     inCODE_HEADER_ROWTYPE.code_header_type ||                 
                     '" Code Header Detail Value Size is not numeric ' );
 -- Fourth Error D-2    
               when code_hdr_val_size_zero_exp then
                    v_code := errnums.en_inv_code_hdr_val_size_err; 
                    errpkg.raise_err(v_code, 'CODE_HEADER_BR_SP.code_hdr_val_size_zero_exp '  ,
                     'Code Header "' || inCODE_HEADER_ROWTYPE.code_header_name || '" - "' ||
                     inCODE_HEADER_ROWTYPE.code_header_type ||                 
                     '" Code Header Detail Value Size cannot be zero ' );    
-- Fifth Error E
                when code_header_dflt_exp then
                    v_code := errnums.en_code_header_dflt_err; 
                    errpkg.raise_err(v_code, 'CODE_HEADER_BR_SP.code_header_dflt_exp '  ,
                   'Code Header "' || inCODE_HEADER_ROWTYPE.code_header_name || '" - "' ||
                   inCODE_HEADER_ROWTYPE.code_header_type ||
                   '" Code Header Detail Default Value cannot be blank ' );                     
-- Fifth Error F
                when code_header_dflt2_exp then
                    v_code := errnums.en_code_header_dflt_err; 
                    errpkg.raise_err(v_code, 'CODE_HEADER_BR_SP.code_header_dflt_exp '  ,
                   'Code Header "' || inCODE_HEADER_ROWTYPE.code_header_name || '" - "' ||
                   inCODE_HEADER_ROWTYPE.code_header_type ||
                   '" Default Value digits cannot be larger than the Default Value Size "'  || 
                    inCODE_HEADER_ROWTYPE.code_header_dtl_val_size || '"' );                         
               
-- Others
               when OTHERS then
                    v_code := sqlcode;
                    v_errm := substr(sqlerrm,1, 500);
                    errpkg.raise_err(v_code, v_errm ||
             		'CODE_HEADER_BR_SP Error ');   
 

end CODE_HEADER_BR_SP;  

procedure CODE_DETAIL_BR_SP ( 
/*****************************************************************************
	CODE_DETAIL_BR_SP

	This procedure is intended to enforce the Business Rules
	for CODE_DETAIL validation edits and verifying the following rules:
  
  The CODE_HEADER and CODE_DETAIL tables will house our "code" tables from 
       the Legacy IDMS CCN Database along with other "validation" codes 
       necessary for the new Oracle CCN Database.  
 
  In Addition:

  1.)  Code_Header_Name (30-VR/BR): 
       This field (column) will house the name of the "Code" table that is to  
          be edited.  
       This field (column) is mandatory and cannot be sapces.  
      
 2.)  Code_Detail_Value (32-VR/BR): 
       This field (column) will contain the code value. 
       This field (column) is mandatory and cannot be spaces.
       This field (column) must adhere to the column size set by the 
         Code_Header_DTL_Val_Size in the CODE_HEADER table.
     
 3.)  Code_Detail_Description (100-VR/BR): 
       This field (column) will contain the description of the code value. 
       This field (column) is mandatory and cannot be spaces or "null".
          
 4.)  Code_Detail_Expire_Flag (1-VR/BR): 
       This field (column) will allow the user to expire a CODE_DETAIL Table row 
          exmarking it as "inactive".
       This field (column) is mandatory and cannot be spaces.  The valid values
          are "Y" or "N".
          
 5.)  Code_Detail_Expire_User (20-BR): 
       This field (column) will house the user name or I.D. of the user who 
          expired or "inactivated" the table in question.
       This field (column) is mandatory on when the Code_Header_Expire_Flag 
          has been set to a "Y".
           
 6.)  Code_Detail_Expire_Eff_Date (VR/BR): 
       This field (column) will house the date whent he table in question was  
          expired or "Inactivated".
       This field (column) is mandatory on when the Code_Header_Expire_Flag 
          has been set to a "Y".    
 
created : MDH 08/09/2012
******************************************************************************/	
  
   inCODE_HEADER_ROWTYPE   IN  CODE_HEADER%rowtype
  ,inCODE_DETAIL_ROWTYPE   IN  CODE_DETAIL%rowtype )

        IS 
        
-- Specify in_xxxxx_rowttype to get all the fields.

 code_header_name_exp              EXCEPTION;
 code_header_name2_exp             EXCEPTION;
 code_header_name3_exp             EXCEPTION;
 code_detail_value_exp             EXCEPTION;
 code_detail_value2_exp            EXCEPTION;
 code_detail_desc_exp              EXCEPTION;
 invalid_eff_date1_exp             EXCEPTION; /* TAL */
 invalid_eff_date2_exp             EXCEPTION; 
 
 v_emp_data_rowtype          EMP_DATA%rowtype;
   
 v_curr_date date := sysdate;
 v_code   number;
 v_errm   varchar(500);
 v_count  number;
 v_terminal  number;
 v_date   date;
 
 
  
begin
--
/*******************************************************************************
  1.)  Code_Header_Name (30-VR/BR): 
       This field (column) will house the name of the "Code" table that is to  
          be edited.  
       This field (column) is mandatory and cannot be sapces.  
*******************************************************************************/

begin
      if (inCODE_DETAIL_ROWTYPE.code_header_name is NULL) OR 
         (inCODE_DETAIL_ROWTYPE.code_header_name in (' ')) THEN 
--  See First Error A-1       
         RAISE code_header_name_exp ;
      end if;
--      
      if (inCODE_DETAIL_ROWTYPE.code_header_name <> 
                       inCODE_HEADER_ROWTYPE.code_header_name ) THEN 
--  See First Error A-2       
         RAISE code_header_name2_exp ;
      end if;
--      
      if (inCODE_DETAIL_ROWTYPE.code_header_type <> 
                       inCODE_HEADER_ROWTYPE.code_header_type ) THEN 
--  See First Error A-3       
         RAISE code_header_name3_exp ;
      end if;    
 dbms_output.put_line('Good Code Header Name ');	
--  
end;
--  
--
/*******************************************************************************
  2.)  Code_Detail_Value (32-VR/BR): 
       This field (column) will contain the code value. 
       This field (column) is mandatory and cannot be spaces.
       This field (column) must adhere to the column size set by the 
         Code_Header_DTL_Val_Size in the CODE_HEADER table.
      
*******************************************************************************/
--
begin
      if (inCODE_DETAIL_ROWTYPE.code_detail_value is NULL) OR 
         (inCODE_DETAIL_ROWTYPE.code_detail_value in (' ')) THEN 
--  See Second Error B-1       
         RAISE code_detail_value_exp ;
      end if;
--    
     if inCODE_DETAIL_ROWTYPE.code_detail_value is not NULL  then 
        if length(inCODE_DETAIL_ROWTYPE.code_detail_value)   <>
                  inCODE_HEADER_ROWTYPE.code_header_dtl_val_size  THEN 
--  See Second Error B-2       
         RAISE code_detail_value2_exp ;
        end if;
      end if;
--            
--    
 dbms_output.put_line('Good Code Detail Value ');	
--  
end;
--        
--
/*******************************************************************************
  3.)  Code_Detail_Description (100-VR/BR): 
       This field (column) will contain the description of the code value. 
       This field (column) is mandatory and cannot be spaces or "null".     
*******************************************************************************/
--
begin
      if (inCODE_DETAIL_ROWTYPE.code_detail_description is NULL) OR 
         (inCODE_DETAIL_ROWTYPE.code_detail_description in (' ')) THEN 
--  See Third Error C       
         RAISE code_detail_desc_exp ;
      end if;
--    
 dbms_output.put_line('Good Code Detail Description ');	
--  
end;
--
--
/*******************************************************************************
  4.)  Code_Detail_Expire_Flag (1-VR/BR): 
       This field (column) will allow the user to expire a CODE_DETAIL Table row 
          exmarking it as "inactive".
       This field (column) is mandatory and cannot be spaces.  The valid values
          are "Y" or "N".
*******************************************************************************/	 
--
/*******************************************************************************
       test for valid date
*******************************************************************************/	
--
begin
     if (inCODE_DETAIL_ROWTYPE.code_detail_expire_flag in ('Y'))  and 
        inCODE_DETAIL_ROWTYPE.code_detail_expire_eff_date  is null  then
             raise invalid_eff_date1_exp;
--  See Fourth Error D-1                   
      end if;
--    
     if (inCODE_DETAIL_ROWTYPE.code_detail_expire_flag in ('Y'))  and 
         inCODE_DETAIL_ROWTYPE.code_detail_expire_eff_date  is not null  then
      begin
        v_date  :=  inCODE_DETAIL_ROWTYPE.code_detail_expire_eff_date;
        -- Yes, it was a valid date (no EXCEPTION)
         EXCEPTION
           when others then
              raise invalid_eff_date2_exp;
--  See Fourth Error D-2                    
         -- No,  not a valid date
      end;
     end if;
end;

  dbms_output.put_line('completed code detail expire effective date check). ' );
--
--
/*******************************************************************************
 5.)  Code_Detail_Expire_User (20-BR): 
       This field (column) will house the user name or I.D. of the user who 
          expired or "inactivated" the table in question.
       This field (column) is mandatory on when the Code_Header_Expire_Flag 
          has been set to a "Y".           
          
   This field will be set automatically.  No editing will be done.
    08/09/2012 MDH
*******************************************************************************/	
--
--
        dbms_output.put_line('completed ALL edit rules). ' );
--
/*******************************************************************************
	  EXCEPTION ERRORS AREA
*******************************************************************************/	  
--	
 EXCEPTION

-- First Error A-1                   
               when code_header_name_exp then
                    v_code := errnums.en_code_header_name_err; 
                    errpkg.raise_err(v_code, 'CODE_DETAIL_BR_SP.code_header_name_exp '  ,
                   'Code Detail "' || inCODE_DETAIL_ROWTYPE.code_header_name || 
                   '" Code Detail Name cannot be blank ' );
-- First Error A-2                   
               when code_header_name2_exp then
                    v_code := errnums.en_code_header_name_err; 
                    errpkg.raise_err(v_code, 'CODE_DETAIL_BR_SP.code_header_name2_exp '  ,
                   'Code Detail "' || inCODE_DETAIL_ROWTYPE.code_header_name || 
                   '" Code Detail Name does not match Code Header Name "' ||
                    inCODE_HEADER_ROWTYPE.code_header_name || '"');  
-- First Error A-3                   
               when code_header_name3_exp then
                    v_code := errnums.en_code_header_name_err; 
                    errpkg.raise_err(v_code, 'CODE_DETAIL_BR_SP.code_header_name3_exp '  ,
                   'Code Detail "' || inCODE_DETAIL_ROWTYPE.code_header_name || '" - "' ||
                   inCODE_DETAIL_ROWTYPE.code_header_type ||
                   '" Code Detail type does not match Code Header Type "' ||
                    inCODE_HEADER_ROWTYPE.code_header_type || '"');    
-- Second Error B-1
                when code_detail_value_exp then                                                         
                    v_code := errnums.en_code_detail_value_err; 
                    errpkg.raise_err(v_code, 'CODE_DETAIL_BR_SP.code_detail_value_exp '  ,
                   'Code Detail "' || inCODE_DETAIL_ROWTYPE.code_header_name || '" - "' ||
                   inCODE_HEADER_ROWTYPE.code_header_type ||
                   '" Code Detail Value cannot be blank "' );
-- Second Error B-2
                when code_detail_value2_exp then                                                         
                    v_code := errnums.en_code_detail_value_err; 
                    errpkg.raise_err(v_code, 'CODE_DETAIL_BR_SP.code_detail_value_exp '  ,
                   'Code Detail "' || inCODE_DETAIL_ROWTYPE.code_header_name || '" - "' ||
                   inCODE_HEADER_ROWTYPE.code_header_type ||
                   '" Detail Value digits cannot be larger than the Header Default Value Size "'  || 
                    inCODE_HEADER_ROWTYPE.code_header_dtl_val_size || '"' );     
-- Third Error C
                when code_detail_desc_exp then
                    v_code := errnums.en_code_detail_desc_err;                                           
                    errpkg.raise_err(v_code, 'CODE_DETAIL_BR_SP.code_detail_desc_exp '  ,
                   'Code Detail "' || inCODE_DETAIL_ROWTYPE.code_header_name || '" - "' ||
                   inCODE_DETAIL_ROWTYPE.code_header_type ||
                   '" Code Detail Description cannot be blank "' );
-- Fourth Error D-1    
                when invalid_eff_date1_exp then
                    v_code := errnums.en_invalid_eff_date_err; 
                    errpkg.raise_err(v_code, 'CODE_DETAIL_BR_SP.invalid_eff_date_exp '  ,
                    'Code Detail "' || inCODE_DETAIL_ROWTYPE.code_header_name || '" - "' ||
                     inCODE_DETAIL_ROWTYPE.code_header_type ||
                     '" Effective Date required when code value is flaged for expiration');                                  
-- Fourth Error D-2    
                when invalid_eff_date2_exp then
                    v_code := errnums.en_invalid_eff_date_err; 
                    errpkg.raise_err(v_code, 'CODE_DETAIL_BR_SP.invalid_eff_date_exp '  ,
                    'Code Detail "' || inCODE_DETAIL_ROWTYPE.code_header_name || '" - "' ||
                     inCODE_DETAIL_ROWTYPE.code_header_type ||
                     '" Effective Date entered "' ||
                     inCODE_DETAIL_ROWTYPE.code_detail_expire_eff_date ||
                     '" is not a valid date');           

               
-- Others
               when OTHERS then
                    v_code := sqlcode;
                    v_errm := substr(sqlerrm,1, 500);
                    errpkg.raise_err(v_code, v_errm ||
             		'CODE_DETAIL_BR_SP Error ');   
 

end CODE_DETAIL_BR_SP;

end pick_list_rules;@
