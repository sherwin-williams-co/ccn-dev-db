CREATE OR REPLACE PACKAGE body TAXWARE_TAPI
/*********************************************************** 
This is the Package Body
created : 08/22/2012 tal CCN project
updated : 09/13/2012 TAL added LAST_MAINT_DATE, LAST_MAINT_METHOD_ID, LAST_MAINT_USER_ID
************************************************************/
IS
  
-- insert
PROCEDURE ins(
    IN_TWJ_STATE            IN TAXWARE.TWJ_STATE%TYPE DEFAULT NULL ,
    IN_TWJ_COMPANY          IN TAXWARE.TWJ_COMPANY%TYPE DEFAULT NULL ,
    IN_TWJ_COUNTRY          IN TAXWARE.TWJ_COUNTRY%TYPE DEFAULT NULL ,
    IN_TWJ_GEO              IN TAXWARE.TWJ_GEO%TYPE DEFAULT NULL ,
    IN_COST_CENTER_CODE     IN TAXWARE.COST_CENTER_CODE%TYPE ,
    IN_TWJ_MAINTENANCE_DATE IN TAXWARE.TWJ_MAINTENANCE_DATE%TYPE DEFAULT NULL ,
    IN_TWJ_ZIP              IN TAXWARE.TWJ_ZIP%TYPE DEFAULT NULL ,
    IN_LAST_MAINT_USER_ID   IN TAXWARE.LAST_MAINT_USER_ID%TYPE DEFAULT NULL ,
    IN_LAST_MAINT_DATE      IN TAXWARE.LAST_MAINT_DATE%TYPE DEFAULT NULL ,
    IN_LAST_MAINT_METHOD_ID IN TAXWARE.LAST_MAINT_METHOD_ID%TYPE DEFAULT NULL )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  INSERT
  INTO TAXWARE
    (
      TWJ_STATE ,
      TWJ_COMPANY ,
      TWJ_COUNTRY ,
      TWJ_GEO ,
      COST_CENTER_CODE ,
      TWJ_MAINTENANCE_DATE ,
      TWJ_ZIP ,
      LAST_MAINT_USER_ID ,
      LAST_MAINT_DATE ,
      LAST_MAINT_METHOD_ID
    )
    VALUES
    (
      IN_TWJ_STATE ,
      IN_TWJ_COMPANY ,
      IN_TWJ_COUNTRY ,
      IN_TWJ_GEO ,
      IN_COST_CENTER_CODE ,
      IN_TWJ_MAINTENANCE_DATE ,
      IN_TWJ_ZIP ,
      IN_LAST_MAINT_USER_ID ,
      IN_LAST_MAINT_DATE ,
      IN_LAST_MAINT_METHOD_ID
    );

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := sqlcode;
	     errpkg.raise_err(v_code,'TAXWARE Insert');

END;

-- update
PROCEDURE upd
  (
    IN_TWJ_STATE            IN TAXWARE.TWJ_STATE%TYPE DEFAULT NULL ,
    IN_TWJ_COMPANY          IN TAXWARE.TWJ_COMPANY%TYPE DEFAULT NULL ,
    IN_TWJ_COUNTRY          IN TAXWARE.TWJ_COUNTRY%TYPE DEFAULT NULL ,
    IN_TWJ_GEO              IN TAXWARE.TWJ_GEO%TYPE DEFAULT NULL ,
    IN_COST_CENTER_CODE     IN TAXWARE.COST_CENTER_CODE%TYPE ,
    IN_TWJ_MAINTENANCE_DATE IN TAXWARE.TWJ_MAINTENANCE_DATE%TYPE DEFAULT NULL ,
    IN_TWJ_ZIP              IN TAXWARE.TWJ_ZIP%TYPE DEFAULT NULL ,
    IN_LAST_MAINT_USER_ID   IN TAXWARE.LAST_MAINT_USER_ID%TYPE DEFAULT NULL ,
    IN_LAST_MAINT_DATE      IN TAXWARE.LAST_MAINT_DATE%TYPE DEFAULT NULL ,
    IN_LAST_MAINT_METHOD_ID IN TAXWARE.LAST_MAINT_METHOD_ID%TYPE DEFAULT NULL 
  )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  UPDATE TAXWARE
  SET TWJ_STATE          = IN_TWJ_STATE ,
    TWJ_COMPANY          = IN_TWJ_COMPANY ,
    TWJ_COUNTRY          = IN_TWJ_COUNTRY ,
    TWJ_GEO              = IN_TWJ_GEO ,
    TWJ_MAINTENANCE_DATE = IN_TWJ_MAINTENANCE_DATE ,
    TWJ_ZIP              = IN_TWJ_ZIP ,
    LAST_MAINT_USER_ID   = IN_LAST_MAINT_USER_ID ,
    LAST_MAINT_DATE      = IN_LAST_MAINT_DATE ,
    LAST_MAINT_METHOD_ID = IN_LAST_MAINT_METHOD_ID
  WHERE COST_CENTER_CODE = in_COST_CENTER_CODE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := sqlcode;
	     errpkg.raise_err(v_code,'TAXWARE Update');

END;

-- del
PROCEDURE del(
    in_COST_CENTER_CODE IN TAXWARE.COST_CENTER_CODE%type )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  DELETE FROM TAXWARE WHERE COST_CENTER_CODE = in_COST_CENTER_CODE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := sqlcode;
	     errpkg.raise_err(v_code,'TAXWARE Delete');

END;

END TAXWARE_tapi;

