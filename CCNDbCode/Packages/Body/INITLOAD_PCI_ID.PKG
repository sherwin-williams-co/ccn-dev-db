create or replace PACKAGE BODY INITLOAD_PCI_ID AS
/****************************************************************************** 
  This package is intended to load PCI DISCOVER ID and PCI MERCHANT ID  columns in bank card table

created : 03/03/2016 nxk927 CCN Project
changed : 
******************************************************************************/

PROCEDURE LOAD_BANK_PCI_ID
/****************************************************************************** 
  This procedure is intended to load PCI DISCOVER ID and PCI MERCHANT ID  columns in bank card table

created : 03/03/2016 nxk927 CCN Project
changed : 04/07/2016 nxk927 CCN Project
          passing the column name in the select query
******************************************************************************/
IS
  V_COUNT NUMBER := 0;
BEGIN
    FOR REC IN (SELECT COST_CENTER_CODE,
                       PCI_MERCHANT_ID
                  FROM TEMP_PCI_MID) LOOP
        V_COUNT:= V_COUNT+1;
        BEGIN
            UPDATE BANK_CARD
               SET PCI_MERCHANT_ID            = REC.PCI_MERCHANT_ID
             WHERE SUBSTR(COST_CENTER_CODE,3) = REC.COST_CENTER_CODE
               AND EXPIRATION_DATE IS NULL;
              
            IF V_COUNT = 100 THEN
               COMMIT;
               V_COUNT := 0;
            END IF;
        EXCEPTION
            WHEN OTHERS THEN
                ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'LOAD_BANK_PCI_ID', SQLERRM, REC.COST_CENTER_CODE);

        END;      
    END LOOP;
    COMMIT;
    V_COUNT := 0;

    FOR REC IN (SELECT COST_CENTER_CODE,
                       PCI_DISCOVER_ID
                  FROM TEMP_PCI_DISCOVER_ID) LOOP
        V_COUNT:= V_COUNT+1;
        BEGIN              
            UPDATE BANK_CARD
               SET PCI_DISCOVER_ID            = REC.PCI_DISCOVER_ID
             WHERE SUBSTR(COST_CENTER_CODE,3) = REC.COST_CENTER_CODE
               AND EXPIRATION_DATE IS NULL;
    
            IF V_COUNT = 100 THEN
               COMMIT;
               V_COUNT := 0;
            END IF;
        EXCEPTION
            WHEN OTHERS THEN
                ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'LOAD_BANK_PCI_ID', SQLERRM, REC.COST_CENTER_CODE);
        END;   
    END LOOP;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'LOAD_BANK_PCI_ID', SQLERRM, '000000');
END LOAD_BANK_PCI_ID;

PROCEDURE LOAD_TERMINAL_PCI_INFO
/****************************************************************************** 
  This procedure is intended to load PCI_TERMINAL_ID, PCI_VALUE_LINK_MID  
  and PCI_VAL_LINK_ALT_MID columns in terminal table
  
created : 03/03/2016 nxk927 CCN Project
changed : 04/07/2016 nxk927 CCN Project
          passing the column name in the select query and removed the
          individual cursor for PCI_VALUE_LINK_MID and PCI_VAL_LINK_ALT_MID
******************************************************************************/
IS
  V_COUNT NUMBER := 0;
BEGIN
    FOR REC IN (SELECT COST_CENTER_CODE,
                       TERM_NUMBER,
                       PCI_TERMINAL_ID,
                       PCI_VALUE_LINK_MID,
                       PCI_VAL_LINK_ALT_MID
                  FROM TEMP_PCI_TERMINAL_INFO) LOOP
        V_COUNT:= V_COUNT+1;
        BEGIN
            UPDATE TERMINAL
               SET PCI_TERMINAL_ID            = REC.PCI_TERMINAL_ID,
                   PCI_VALUE_LINK_MID         = REC.PCI_VALUE_LINK_MID,
                   PCI_VAL_LINK_ALT_MID       = REC.PCI_VAL_LINK_ALT_MID
             WHERE SUBSTR(COST_CENTER_CODE,3) = REC.COST_CENTER_CODE
               AND TERMINAL_NUMBER            = REC.TERM_NUMBER
               AND EXPIRATION_DATE IS NULL;
           
            IF V_COUNT = 100 THEN
               COMMIT;
               V_COUNT := 0;
            END IF;
        EXCEPTION
            WHEN OTHERS THEN
                ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'LOAD_TERMINAL_PCI_INFO', SQLERRM, REC.COST_CENTER_CODE);
        END;      
    END LOOP;
    COMMIT;
    
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'LOAD_TERMINAL_PCI_INFO', SQLERRM, '000000');
END LOAD_TERMINAL_PCI_INFO;

PROCEDURE INITLOAD_SP
/******************************************************************
This Procedure is a wrapper for the Initial Load of the 
BANK TABLE COLUMNS:  PCI MERCHANT ID and PCI DISCOVER ID
TERMINAL TABLE COLUMNS : PCI_TERMINAL_ID ,PCI_VALUE_LINK_MID and PCI_VAL_LINK_ALT_MID
   
   This process will load data in the new columns mentioned above

Created : 03/03/2016 nxk927 CCN Project....
Changed :
******************************************************************/
AS
    V_CONTEXT    VARCHAR2(200);
    V_START_TIME NUMBER;
BEGIN
     CCN_BATCH_PKG.LOCK_DATABASE_SP();

     V_START_TIME := DBMS_UTILITY.GET_TIME;
     EXECUTE IMMEDIATE 'ALTER TRIGGER TR_BANK_CARD_UPD DISABLE';
     V_CONTEXT := 'Load new columns in BANKING Tables ';
     LOAD_BANK_PCI_ID();
     EXECUTE IMMEDIATE 'ALTER TRIGGER TR_BANK_CARD_UPD ENABLE';
     DBMS_OUTPUT.PUT_LINE('Load completed in : '|| (DBMS_UTILITY.GET_TIME - V_START_TIME)/100 || ' Seconds');

     V_START_TIME := DBMS_UTILITY.GET_TIME;
     EXECUTE IMMEDIATE 'ALTER TRIGGER TR_TERMINAL_UPD DISABLE';
     V_CONTEXT := 'Load new columns in TERMINAL Tables ';
     LOAD_TERMINAL_PCI_INFO();
     EXECUTE IMMEDIATE 'ALTER TRIGGER TR_TERMINAL_UPD ENABLE';
     DBMS_OUTPUT.PUT_LINE('Load completed in : '|| (DBMS_UTILITY.GET_TIME - V_START_TIME)/100 || ' Seconds');

     CCN_BATCH_PKG.UNLOCK_DATABASE_SP();
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'INITLOAD_SP', SQLERRM, '000000');
END INITLOAD_SP;

END INITLOAD_PCI_ID;