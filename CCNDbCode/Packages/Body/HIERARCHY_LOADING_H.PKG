CREATE OR REPLACE 
PACKAGE BODY HIERARCHY_LOADING_H
/*********************************************************** 
This package is intended to load files from mainframe into the 
HIERARCHY tables

created : 08/12/2013 SH CCN project
************************************************************/
AS

--This flag will say if the process is for batch or initial Load
M_BATCH_FLAG VARCHAR2(1) := 'N';


PROCEDURE LOAD_TEMP_TABLES
/*******************************************************************************
	LOAD_TEMP_TABLES   --    Loads all temporary tables before process start

created : 08/12/2013 SH CCN Project....
*******************************************************************************/
 IS
 
 V_CODE NUMBER;
 v_errm VARCHAR2(500);

 BEGIN

      EXECUTE IMMEDIATE 'TRUNCATE TABLE GLOBAL_HIERARCHY_EXT_DETAIL_T';
       EXECUTE IMMEDIATE 'TRUNCATE TABLE LEGACY_GL_DIVISION_EXT_DTL_T';
      EXECUTE IMMEDIATE 'TRUNCATE TABLE ALTERNATE_DAD_EXT_DETAIL_T';
      EXECUTE IMMEDIATE 'TRUNCATE TABLE FACTS_DIVISION_EXT_DETAIL_T';
      
      IF NVL(M_BATCH_FLAG,'N') = 'N' THEN
       INSERT INTO GLOBAL_HIERARCHY_EXT_DETAIL_T
          SELECT /*+ no_parallel (GLOBAL_HIERARCHY_EXT_DETAIL)*/ * FROM GLOBAL_HIERARCHY_E_DETAIL_H;
       INSERT INTO LEGACY_GL_DIVISION_EXT_DTL_T
           SELECT /*+ no_parallel (LEGACY_GL_DIVISION_EXT_DETAIL)*/ * FROM LEGACY_GL_DIVISION_E_DTL_H;
         INSERT INTO ALTERNATE_DAD_EXT_DETAIL_T
          SELECT /*+ no_parallel (ALTERNATE_DAD_EXT_DETAIL)*/ * FROM ALTERNATE_DAD_E_DETAIL_H;
       INSERT INTO FACTS_DIVISION_EXT_DETAIL_T
            SELECT /*+ no_parallel (FACTS_DIVISION_EXT_DETAIL)*/ * FROM FACTS_DIVISION_E_DETAIL_H;
      ELSE
         INSERT INTO GLOBAL_HIERARCHY_EXT_DETAIL_T
            SELECT /*+ no_parallel (GLOBAL_HIERARCHY_E_DETAIL_HB)*/ * FROM GLOBAL_HIERARCHY_E_DETAIL_HB;
         INSERT INTO LEGACY_GL_DIVISION_EXT_DTL_T
            SELECT /*+ no_parallel (LEGACY_GL_DIVISION_E_DTL_HB)*/ * FROM LEGACY_GL_DIVISION_E_DTL_HB;
         INSERT INTO ALTERNATE_DAD_EXT_DETAIL_T
            SELECT /*+ no_parallel (ALTERNATE_DAD_E_DETAIL_HB)*/ * FROM ALTERNATE_DAD_E_DETAIL_HB;
         INSERT INTO FACTS_DIVISION_EXT_DETAIL_T
            SELECT /*+ no_parallel (FACTS_DIVISION_E_DETAIL_HB)*/ * FROM FACTS_DIVISION_E_DETAIL_HB;
      END IF;
--
  EXCEPTION
--
        WHEN OTHERS THEN 
                 v_code  := SQLCODE;
                 v_errm  := substr(SQLERRM,1,200);
                 errpkg.raise_err(v_code, 'HIERARCHY_LOADING_H.LOAD_TEMP_TABLES' || V_ERRM );
 END LOAD_TEMP_TABLES;
 
       
PROCEDURE GLOBAL_HIERARCHY_LOAD
/**********************************************************
GLOBAL_HIERARCHY_LOAD

created : 08/12/2013 SH CCN Project....
**********************************************************/

IS
    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL_TEST.UPPER_LVL_VER_VALUE%TYPE;
    V_UPPER_LVL_VER_VALUE_N  GLOBAL_HIERARCHY_EXT_DETAIL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL_TEST.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL_TEST.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL_TEST.hrchy_dtl_exp_date%TYPE;

  CURSOR ALL_REC_CUR IS
     SELECT * FROM GLOBAL_HIERARCHY_E_DETAIL_H WHERE HRCHY_HDR_NAME = DECODE(M_BATCH_FLAG,'Y','XXX','GLOBAL_HIERARCHY');
    

time_before   PLS_INTEGER := DBMS_UTILITY.get_time;

BEGIN 
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     END CASE;

                     SELECT XMLELEMENT (  "attributes",
                                   XMLAGG (XMLELEMENT ( "upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS  "Name"
                                                         ,'Picklist Value' AS  "Description"
                                                         ,TRIM(NVL(EACH_REC.UPPER_LVL_VER_VALUE,'**')) AS  "Value"
                                                         ))))
                                                  INTO V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL;      
                            INSERT INTO HIERARCHY_DETAIL_TEST (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         NVL(EACH_REC.HRCHY_DTL_EFF_DATE,SYSDATE),
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                        UPDATE HIERARCHY_DETAIL_TEST
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                                
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-2));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
 
                        begin
                            select /*+ INDEX(GLOBAL_HIERARCHY_EXT_DETAIL_T INDEX1_TEMP1 )*/
                            HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, TRIM(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_HRCHY_DTL_EFF_DATE, V_HRCHY_DTL_EXP_DATE, V_UPPER_LVL_VER_VALUE_N
                              FROM GLOBAL_HIERARCHY_EXT_DETAIL_T
                             WHERE HRCHY_HDR_NAME = 'GLOBAL_HIERARCHY'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                        EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                        END;
                         SELECT XMLELEMENT (  "attributes",
                                   XMLAGG (XMLELEMENT ( "upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS  "Name"
                                                         ,'Picklist Value' AS  "Description"
                                                         ,nvl(V_UPPER_LVL_VER_VALUE_N, '**') AS  "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 
                         INSERT INTO HIERARCHY_DETAIL_TEST (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  END IF;
               END IF;

                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := NULL;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_HRCHY_DTL_DESC         := NULL; 
                    V_hrchy_dtl_eff_date     := NULL; 
                    V_hrchy_dtl_exp_date     := NULL;
            END LOOP;

   COMMIT;
DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
   DBMS_OUTPUT.PUT_LINE('GLOBAL_HIERARCHY_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('GLOBAL_HIERARCHY_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL|| ' : '||SQLERRM || ' : ' ||SQLCODE );  
       --RAISE;
END GLOBAL_HIERARCHY_LOAD;

                                                    
PROCEDURE LEGACY_GL_DIV_HIER_LOAD 
/******************************************************************************
LEGACY_GL_DIV_HIER_LOAD

created : 08/12/2013 SH CCN Project.... 

*******************************************************************************/
IS

    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL_TEST.UPPER_LVL_VER_VALUE%type;
    V_UPPER_LVL_VER_VALUE_N  LEGACY_GL_DIVISION_EXT_DTL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL_TEST.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL_TEST.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL_TEST.hrchy_dtl_exp_date%TYPE;

  CURSOR ALL_REC_CUR IS
     SELECT * FROM LEGACY_GL_DIVISION_E_DTL_H WHERE HRCHY_HDR_NAME = DECODE(M_BATCH_FLAG,'Y','XXX','LEGACY_GL_DIVISION');
   
time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
BEGIN 
    
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '4' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-3));
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -3, 3);
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '5' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     END CASE;


                     SELECT XMLELEMENT (  "attributes",
                                   XMLAGG (XMLELEMENT ( "upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS  "Name"
                                                         ,'Picklist Value' AS  "Description"
                                                         ,TRIM(NVL(EACH_REC.UPPER_LVL_VER_VALUE,'**')) AS  "Value"
                                                         ))))
                                                  INTO V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL;      
                                                  
                            INSERT INTO HIERARCHY_DETAIL_TEST (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );

                        UPDATE HIERARCHY_DETAIL_TEST
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                         
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 1, 2);
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '4' THEN
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-5));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_PREV_LVL_VAL, -2, 2);
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-3));
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '5' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-3));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -3, 3);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
                 
              
                         begin
                            select /*+ INDEX(LEGACY_GL_DIVISION_EXT_DTL_T INDEX1_TEMP5 )*/
                                  HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, TRIM(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_HRCHY_DTL_EFF_DATE, V_HRCHY_DTL_EXP_DATE, V_UPPER_LVL_VER_VALUE_N 
                              FROM LEGACY_GL_DIVISION_EXT_DTL_T
                             WHERE HRCHY_HDR_NAME = 'LEGACY_GL_DIVISION'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                        EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                        END;
                        
                        SELECT XMLELEMENT (  "attributes",
                                   XMLAGG (XMLELEMENT ( "upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS  "Name"
                                                         ,'Picklist Value' AS  "Description"
                                                         ,nvl(V_UPPER_LVL_VER_VALUE_N, '**') AS  "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL;

                        begin
                        
                         INSERT INTO HIERARCHY_DETAIL_TEST (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                        EXCEPTION
                          WHEN OTHERS THEN
                            DBMS_OUTPUT.PUT_LINE('Failed for ' || EACH_REC.HRCHY_DTL_CURR_LVL_VAL);
                        END;
                  END IF;
               END IF;
                       
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := NULL;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_hrchy_dtl_eff_date     := NULL;
                    V_hrchy_dtl_exp_date     := NULL;
                    V_HRCHY_DTL_DESC         := NULL;
            end LOOP;
  COMMIT;
  DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
  DBMS_OUTPUT.PUT_LINE('LEGACY_GL_DIV_HIER_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('LEGACY_GL_DIV_HIER_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL);
END LEGACY_GL_DIV_HIER_LOAD;

PROCEDURE ALTERNATE_DAD_HIER_LOAD
/******************************************************************************
ALTERNATE_DAD_HIER_LOAD

created : 08/12/2013 SH CCN Project.... 

*******************************************************************************/
IS

    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL_TEST.UPPER_LVL_VER_VALUE%type;
    V_UPPER_LVL_VER_VALUE_N  ALTERNATE_DAD_EXT_DETAIL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_HRCHY_DTL_LEVEL        HIERARCHY_DETAIL_TEST.HRCHY_DTL_LEVEL%TYPE;
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL_TEST.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL_TEST.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL_TEST.hrchy_dtl_exp_date%TYPE;

  CURSOR ALL_REC_CUR IS
     SELECT * FROM ALTERNATE_DAD_E_DETAIL_H WHERE HRCHY_HDR_NAME = DECODE(M_BATCH_FLAG,'Y','XXX','ALTERNATE_DAD');
     
time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
BEGIN 
    
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                     WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                          V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                          V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                          V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                     ELSE
                         V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                         V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                     END CASE;


                     SELECT XMLELEMENT (  "attributes",
                                   XMLAGG (XMLELEMENT ( "upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS  "Name"
                                                         ,'Picklist Value' AS  "Description"
                                                         ,TRIM(NVL(EACH_REC.UPPER_LVL_VER_VALUE,'**')) AS  "Value"
                                                         ))))
                                                  INTO V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL;      
                                                  
                            INSERT INTO HIERARCHY_DETAIL_TEST (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );

                        UPDATE HIERARCHY_DETAIL_TEST
                                 SET HRCHY_DTL_NEXT_LVL_VAL = EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF EACH_REC.HRCHY_DTL_LEVEL <> '1' THEN
                                
                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                              V_HRCHY_DTL_PREV_LVL_VAL := '~~~';
                              V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                              V_HRCHY_DTL_CURR_LVL_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '9' THEN
                              V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-6));
                              V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-2));
                              V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;
        
                         
                         BEGIN
                            SELECT /*+ INDEX(ALTERNATE_DAD_EXT_DETAIL_T INDEX1_TEMP6 )*/
                                   HRCHY_DTL_DESC, hrchy_dtl_eff_date, hrchy_dtl_exp_date, TRIM(UPPER_LVL_VER_VALUE)
                              INTO V_HRCHY_DTL_DESC, V_hrchy_dtl_eff_date, V_hrchy_dtl_exp_date,  V_UPPER_LVL_VER_VALUE_N
                              FROM ALTERNATE_DAD_EXT_DETAIL_T
                             WHERE HRCHY_HDR_NAME = 'ALTERNATE_DAD'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                        EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                        END;
                        
                        SELECT XMLELEMENT (  "attributes",
                                   XMLAGG (XMLELEMENT ( "upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS  "Name"
                                                         ,'Picklist Value' AS  "Description"
                                                         ,nvl(V_UPPER_LVL_VER_VALUE_N, '**') AS  "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 
                                                  
                         INSERT INTO HIERARCHY_DETAIL_TEST (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  END IF;
               END IF;
                       
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := NULL;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_HRCHY_DTL_DESC         := NULL; 
                    V_hrchy_dtl_eff_date     := NULL; 
                    V_hrchy_dtl_exp_date     := NULL;
            END LOOP;
      COMMIT;
      DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
      DBMS_OUTPUT.PUT_LINE('ALTERNATE_DAD_HIER_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('ALTERNATE_DAD_HIER_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL);
END ALTERNATE_DAD_HIER_LOAD;


PROCEDURE FACTS_DIVISION_HIER_LOAD
/******************************************************************************
FACTS_DIVISION_HIER_LOAD

created : 08/12/2013 SH CCN Project.... 

*******************************************************************************/
IS

    v_commit integer := 0;
    V_HRCHY_DTL_PREV_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_PREV_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_HRCHY_DTL_NEXT_LVL_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_NEXT_LVL_VAL%TYPE;
    V_HRCHY_DTL_CURR_ROW_VAL HIERARCHY_DETAIL_TEST.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    V_UPPER_LVL_VER_VALUE    HIERARCHY_DETAIL_TEST.UPPER_LVL_VER_VALUE%TYPE;
    V_UPPER_LVL_VER_VALUE_N  FACTS_DIVISION_EXT_DETAIL_T.UPPER_LVL_VER_VALUE%TYPE;
    V_HRCHY_DTL_LEVEL        HIERARCHY_DETAIL_TEST.HRCHY_DTL_LEVEL%TYPE;
    V_HRCHY_DTL_DESC         HIERARCHY_DETAIL_TEST.HRCHY_DTL_DESC%TYPE;
    V_hrchy_dtl_eff_date     HIERARCHY_DETAIL_TEST.hrchy_dtl_eff_date%TYPE;
    V_hrchy_dtl_exp_date     HIERARCHY_DETAIL_TEST.hrchy_dtl_exp_date%TYPE;
    
  CURSOR ALL_REC_CUR IS
     SELECT * FROM FACTS_DIVISION_E_DETAIL_H WHERE HRCHY_HDR_NAME = DECODE(M_BATCH_FLAG,'Y','XXX','FACTS_DIVISION');

time_before   PLS_INTEGER;

begin 
   time_before := DBMS_UTILITY.get_time;
      --creating the two levels as they are not in the file
      INSERT INTO HIERARCHY_DETAIL_TEST (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( 'FACTS_DIVISION',
                                                         '1',
                                                         '~~~',
                                                         '01',
                                                         '0101',
                                                         '16-Mar-2007',
                                                         null,
                                                         'NORTH AMERICA',
                                                         '01',
                                                         '<attributes><upper_lvl_ver_desc><Name>Statement Type</Name><Description>Picklist Value</Description><Value>**</Value></upper_lvl_ver_desc></attributes>'
                                                       );
                                                     
                          INSERT INTO HIERARCHY_DETAIL_TEST (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( 'FACTS_DIVISION',
                                                         '2',
                                                         '01',
                                                         '0101',
                                                         null,
                                                         '16-Mar-2007',
                                                         null,
                                                         'SHERWIN-WILLIAMS COMPANY',
                                                         '01',
                                                         '<attributes><upper_lvl_ver_desc><Name>Statement Type</Name><Description>Picklist Value</Description><Value>**</Value></upper_lvl_ver_desc></attributes>'
                                                       );
      FOR EACH_REC IN ALL_REC_CUR
      LOOP
                     V_HRCHY_DTL_LEVEL := EACH_REC.HRCHY_DTL_LEVEL +2;

                         CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                            V_HRCHY_DTL_PREV_LVL_VAL := '0101';
                            V_HRCHY_DTL_CURR_LVL_VAL := '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                            V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -4, 4);
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                            V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                            V_HRCHY_DTL_CURR_LVL_VAL := '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                            V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-6));
                            V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                         END CASE;

                     SELECT XMLELEMENT (  "attributes",
                                   XMLAGG (XMLELEMENT ( "upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS  "Name"
                                                         ,'Picklist Value' AS  "Description"
                                                         --,TRIM(EACH_REC.UPPER_LVL_VER_VALUE) AS "Value"
                                                         ,TRIM(NVL(EACH_REC.UPPER_LVL_VER_VALUE,'**')) AS  "Value"
                                                         ))))
                                                  INTO V_UPPER_LVL_VER_VALUE
                                                  FROM DUAL;      
                                                  
                            INSERT INTO HIERARCHY_DETAIL_TEST (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         V_HRCHY_DTL_LEVEL,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL,
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                        UPDATE HIERARCHY_DETAIL_TEST
                                 SET HRCHY_DTL_NEXT_LVL_VAL = '0101'||EACH_REC.HRCHY_DTL_CURR_LVL_VAL
                               WHERE HRCHY_HDR_NAME = EACH_REC.HRCHY_HDR_NAME
                                 AND HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_PREV_LVL_VAL
                                 AND HRCHY_DTL_NEXT_LVL_VAL IS NULL
                                 AND HRCHY_DTL_LEVEL = TO_CHAR(V_HRCHY_DTL_LEVEL-1);

               IF SQL%ROWCOUNT = 0 THEN      
                                 
                   IF V_HRCHY_DTL_LEVEL <>  '1' THEN
                        CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                            V_HRCHY_DTL_PREV_LVL_VAL := '01';
                            V_HRCHY_DTL_CURR_LVL_VAL := '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                            V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 1,4);
                            V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                            V_HRCHY_DTL_NEXT_LVL_VAL := '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         WHEN EACH_REC.HRCHY_DTL_LEVEL = '2' THEN
                            --V_HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                            V_HRCHY_DTL_CURR_LVL_VAL := '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                            V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(V_HRCHY_DTL_CURR_LVL_VAL)-6));
                            V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, 1, 4);
                            V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -4, 4);
                            V_HRCHY_DTL_NEXT_LVL_VAL :=  '0101'|| EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                         ELSE 
                             V_HRCHY_DTL_PREV_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0, (LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-4));
                             V_HRCHY_DTL_CURR_LVL_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, 0,(LENGTH(EACH_REC.HRCHY_DTL_CURR_LVL_VAL)-2));
                             V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(V_HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                         END CASE;

                         BEGIN
                            select /*+ INDEX(FACTS_DIVISION_EXT_DETAIL_T INDEX1_TEMP8 )*/
                                   HRCHY_DTL_DESC, HRCHY_DTL_EFF_DATE, HRCHY_DTL_EXP_DATE, TRIM(UPPER_LVL_VER_VALUE)
                              into V_HRCHY_DTL_DESC, V_HRCHY_DTL_EFF_DATE, V_HRCHY_DTL_EXP_DATE, V_UPPER_LVL_VER_VALUE_N  
                              FROM FACTS_DIVISION_EXT_DETAIL_T --FACTS_DIVISION_EXT_DETAIL
                             where HRCHY_HDR_NAME = 'FACTS_DIVISION'
                               and HRCHY_DTL_LEVEL = TO_CHAR(EACH_REC.HRCHY_DTL_LEVEL-1)
                               and '0101'|| HRCHY_DTL_CURR_LVL_VAL = V_HRCHY_DTL_CURR_LVL_VAL;
                         EXCEPTION
                           WHEN OTHERS THEN
                                NULL;
                         END;       
                         
                         --the level '2' are not in the file, hence created
                         if V_HRCHY_DTL_LEVEL = 3 and V_HRCHY_DTL_DESC is null then
                            V_HRCHY_DTL_DESC := 'SHERWIN-WILLIAMS COMPANY';
                         end if;
                         SELECT XMLELEMENT (  "attributes",
                                   XMLAGG (XMLELEMENT ( "upper_lvl_ver_desc", 
                                               XMLFOREST(
                                                         'Statement Type'  AS  "Name"
                                                         ,'Picklist Value' AS  "Description"
                                                         ,nvl(V_UPPER_LVL_VER_VALUE_N, '**') AS  "Value"
                                                         ))))
                                                  into V_UPPER_LVL_VER_VALUE
                                                  from DUAL; 
                         INSERT INTO HIERARCHY_DETAIL_TEST (  HRCHY_HDR_NAME,
                                                         HRCHY_DTL_LEVEL,
                                                         HRCHY_DTL_PREV_LVL_VAL,
                                                         HRCHY_DTL_CURR_LVL_VAL,
                                                         HRCHY_DTL_NEXT_LVL_VAL,
                                                         HRCHY_DTL_EFF_DATE,
                                                         HRCHY_DTL_EXP_DATE,
                                                         HRCHY_DTL_DESC,
                                                         HRCHY_DTL_CURR_ROW_VAL,
                                                         UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         V_HRCHY_DTL_LEVEL-1,
                                                         V_HRCHY_DTL_PREV_LVL_VAL,
                                                         V_HRCHY_DTL_CURR_LVL_VAL, --prev of 4 will be curr of 3
                                                         V_HRCHY_DTL_NEXT_LVL_VAL,
                                                         nvl(V_hrchy_dtl_eff_date, sysdate),
                                                         V_hrchy_dtl_exp_date,
                                                         V_HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );
                  END IF;
               END IF;
                      if v_commit > 100 then 
                         commit;
                         v_commit := 0;
                      else
                         v_commit := v_commit + 1;
                      END IF;
                      
                    V_HRCHY_DTL_PREV_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;
                    V_HRCHY_DTL_NEXT_LVL_VAL := NULL;
                    V_HRCHY_DTL_CURR_ROW_VAL := NULL;   
                    V_UPPER_LVL_VER_VALUE    := null;
                    V_UPPER_LVL_VER_VALUE_N  := NULL;
                    V_hrchy_dtl_eff_date     := NULL;
                    V_hrchy_dtl_exp_date     := NULL;
                    V_HRCHY_DTL_DESC         := NULL;
            end LOOP;
  COMMIT;
DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
  DBMS_OUTPUT.PUT_LINE('FACTS_DIVISION_HIER_LOAD completed. ');

EXCEPTION
  when OTHERS then
       DBMS_OUTPUT.PUT_LINE('FACTS_DIVISION_HIER_LOAD Failed at '|| V_HRCHY_DTL_CURR_LVL_VAL);
END FACTS_DIVISION_HIER_LOAD; 

PROCEDURE HIER_LOAD_MAIN_SP
/******************************************************************
This Procedure is a wrapper for the Hierarchy Load all the files from
mainframe in /app/ccn/datafiles into the HIERARCHY_DETAIL table
This Procedure
    * Disables all the Triggers for HIERARCHY_DETAIL Table
    * Deletes the HIERARCHY_DETAIL table
    * Loads the HIERARCHY_DETAIL table
    * Re-Enables the Triggers

Created: SH 05/06/2013
******************************************************************/
(IN_BATCH_FLAG        VARCHAR2)
AS
    V_CONTEXT VARCHAR2(200);
  time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
  BEGIN

      M_BATCH_FLAG := IN_BATCH_FLAG;
      
        V_CONTEXT := 'Loading Temp Tables from External Tables ';
      LOAD_TEMP_TABLES();

       IF NVL(M_BATCH_FLAG,'N') = 'N' THEN
         --V_CONTEXT := 'Truncating HIERARCHY Tables ';
         execute immediate 'TRUNCATE TABLE HIERARCHY_DETAIL_TEST';
         --execute immediate 'TRUNCATE TABLE HIERARCHY_DESCRIPTION';
         --DELETE FROM HIERARCHY_HEADER;
      END IF;

      V_CONTEXT := 'Loading GLOBAL_HIERARCHY_H ';
      HIERARCHY_LOADING_H.GLOBAL_HIERARCHY_LOAD;

      V_CONTEXT := 'Loading LEGACY_GL_DIVISION_H ';
      HIERARCHY_LOADING_H.LEGACY_GL_DIV_HIER_LOAD;
      
      V_CONTEXT := 'Loading ALTERNATE_DAD_H ';
      HIERARCHY_LOADING_H.ALTERNATE_DAD_HIER_LOAD;

      V_CONTEXT := 'Loading FACTS_DIVISION_H ';
      HIERARCHY_LOADING_H.FACTS_DIVISION_HIER_LOAD;
     
     
--comment
DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
      COMMIT;

EXCEPTION
   WHEN OTHERS THEN
      dbms_output.put_line('HIERARCHY_LOADING_H failed at ' ||  V_CONTEXT);

END HIER_LOAD_MAIN_SP;
      
END HIERARCHY_LOADING_H;
/*
  CREATE TABLE "COSTCNTR"."ADMIN_SALES_AREA_E_DETAIL_HB" 
   (	"HRCHY_HDR_NAME" VARCHAR2(100 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(100 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
         ) 
           )
      LOCATION
       ( 'admin_to_sales_area.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;


  CREATE TABLE "COSTCNTR"."ADMIN_SALES_DIST_E_DETAIL_HB" 
   (	"HRCHY_HDR_NAME" VARCHAR2(100 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(100 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
         ) 
           )
      LOCATION
       ( 'admin_to_sales_district.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
 

  CREATE TABLE "COSTCNTR"."ADMIN_SALES_DIV_E_DETAIL_HB" 
   (	"HRCHY_HDR_NAME" VARCHAR2(100 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(100 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
         ) 
           )
      LOCATION
       ( 'admin_to_sales_division.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
 

  CREATE TABLE "COSTCNTR"."ALTERNATE_DAD_E_DETAIL_HB" 
   (	"HRCHY_HDR_NAME" VARCHAR2(100 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(1000 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
         ) 
           )
      LOCATION
       ( 'alternate_dad.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
 
  CREATE TABLE "COSTCNTR"."FACTS_DIVISION_E_DETAIL_HB" 
   (	"HRCHY_HDR_NAME" VARCHAR2(20 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(1000 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
	   UPPER_LVL_VER_VALUE 
         ) 
           )
      LOCATION
       ( 'facts_division.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
 

  CREATE TABLE "COSTCNTR"."GLOBAL_HIERARCHY_E_DETAIL_HB" 
   (	"HRCHY_HDR_NAME" VARCHAR2(100 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(100 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
         ) 
           )
      LOCATION
       ( 'global_hierarchy.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
 

  CREATE TABLE "COSTCNTR"."LEGACY_GL_DIVISION_E_DTL_HB" 
   (	"HRCHY_HDR_NAME" VARCHAR2(20 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(1000 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
	   UPPER_LVL_VER_VALUE 
         ) 
           )
      LOCATION
       ( 'legacy_gl_division.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
   
   
   
   CREATE TABLE "COSTCNTR"."ADMIN_SALES_AREA_E_DETAIL_H" 
   (	"HRCHY_HDR_NAME" VARCHAR2(100 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(100 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
         ) 
           )
      LOCATION
       ( 'admin_to_sales_area_h.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;


  CREATE TABLE "COSTCNTR"."ADMIN_SALES_DIST_E_DETAIL_H" 
   (	"HRCHY_HDR_NAME" VARCHAR2(100 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(100 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
         ) 
           )
      LOCATION
       ( 'admin_to_sales_district_h.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
 

  CREATE TABLE "COSTCNTR"."ADMIN_SALES_DIV_E_DETAIL_H" 
   (	"HRCHY_HDR_NAME" VARCHAR2(100 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(100 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
         ) 
           )
      LOCATION
       ( 'admin_to_sales_division_h.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
 

  CREATE TABLE "COSTCNTR"."ALTERNATE_DAD_E_DETAIL_H" 
   (	"HRCHY_HDR_NAME" VARCHAR2(100 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(1000 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
         ) 
           )
      LOCATION
       ( 'alternate_dad_h.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
  

  CREATE TABLE "COSTCNTR"."FACTS_DIVISION_E_DETAIL_H" 
   (	"HRCHY_HDR_NAME" VARCHAR2(20 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(1000 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
	   UPPER_LVL_VER_VALUE 
         ) 
           )
      LOCATION
       ( 'facts_division_h.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
 

  CREATE TABLE "COSTCNTR"."GLOBAL_HIERARCHY_E_DETAIL_H" 
   (	"HRCHY_HDR_NAME" VARCHAR2(100 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(100 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
           UPPER_LVL_VER_VALUE
         ) 
           )
      LOCATION
       ( 'global_hierarchy_h.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
 

  CREATE TABLE "COSTCNTR"."LEGACY_GL_DIVISION_E_DTL_H" 
   (	"HRCHY_HDR_NAME" VARCHAR2(20 BYTE), 
	"HRCHY_DTL_LEVEL" VARCHAR2(2 BYTE), 
	"HRCHY_DTL_PREV_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_CURR_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_NEXT_LVL_VAL" VARCHAR2(1000 BYTE), 
	"HRCHY_DTL_EFF_DATE" DATE, 
	"HRCHY_DTL_EXP_DATE" DATE, 
	"HRCHY_DTL_DESC" VARCHAR2(100 BYTE), 
	"UPPER_LVL_VER_VALUE" VARCHAR2(1000 BYTE)
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "CCN_DATAFILES"
      ACCESS PARAMETERS
      ( records delimited by newline 
         FIELDS TERMINATED BY ',' 
         LRTRIM
         missing field values are null 
         ( 
           HRCHY_HDR_NAME,
	   HRCHY_DTL_LEVEL,
	   HRCHY_DTL_PREV_LVL_VAL,
	   HRCHY_DTL_CURR_LVL_VAL,
	   HRCHY_DTL_NEXT_LVL_VAL,
	   HRCHY_DTL_EFF_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_EXP_DATE DATE 'YYYYMMDD',
	   HRCHY_DTL_DESC,
	   UPPER_LVL_VER_VALUE 
         ) 
           )
      LOCATION
       ( 'legacy_gl_division_h.txt'
       )
    )
   REJECT LIMIT UNLIMITED PARALLEL 32767;
   
*/

