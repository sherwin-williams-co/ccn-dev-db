create or replace PACKAGE BODY CREDIT_HIERARCHY_LOAD
/*******************************************************************************
This package is intended to load Credit Hierarchy files from mainframe into the 
HIERARCHY tables

created : 02/12/2016 sxh487927 CCN project
modified: 07/15/2016 vxv336 CCN project
          Changed CREDIT_HIER_HDR_DESC_LOAD proc
modified: 09/06/2016 vxv336
          Removed procedures that are not needed anymore
*******************************************************************************/
AS

PROCEDURE ALTER_HIER_TRIGGERS   
/*******************************************************************************
ALTER_HIER_TRIGGERS   --    Alter Hierarchy table(s) triggers

  This procedure will enable and/or disable Hierarchy table(s) triggers based on an
  input "status" parameter.  
 
created : 02/12/2016 sxh487 CCN Project....
modified: 08/23/2016 jxc517 CCN Project Team....
          corrected the comment to throw correct package name
*******************************************************************************/
 ( IN_STATUS  IN VARCHAR2 )
 IS
 
 tr_stmnt VARCHAR2(500);
 V_CODE NUMBER;
 v_errm varchar2(500);

 BEGIN
    IF IN_STATUS NOT IN ('ENABLE', 'enable', 'DISABLE', 'disable') THEN 
       DBMS_OUTPUT.PUT_LINE('ALTER_HIER_TRIGGERS ' ||
                            'Status: <' || IN_STATUS  || '>' ||
                            ' IS Invalid, only ' || 'ENABLE or DISABLE' ||
                            ' are accepted as valid parameters');
      RAISE VALUE_ERROR;
    END IF;
--
      tr_stmnt := 'ALTER TRIGGER TR_HIER_DETAIL_UPD';
      EXECUTE IMMEDIATE tr_stmnt || ' ' || IN_STATUS;
      
      EXECUTE IMMEDIATE 'ALTER TRIGGER TR_HIER_HEAD_UPD ' || IN_STATUS;
      EXECUTE IMMEDIATE 'ALTER TRIGGER TR_HIER_DESC_UPD ' || IN_STATUS;
      EXECUTE IMMEDIATE 'ALTER TRIGGER TR_COST_CENTER_UPD ' || IN_STATUS;
--
DBMS_OUTPUT.PUT_LINE('Hier Triggers '||IN_STATUS);
  EXCEPTION
--
        WHEN OTHERS THEN 
                 v_code  := SQLCODE;
                 v_errm  := substr(SQLERRM,1,200);
                 errpkg.raise_err(v_code, 'CREDIT_HIERARCHY_LOAD.ALTER_HIER_TRIGGERS' ||
                 V_ERRM );
 END ALTER_HIER_TRIGGERS;

PROCEDURE DELETE_CREDIT_HIERARCHY_DATA
/*******************************************************************************
This Procedure deletes below tables "CREDIT_HIERARCHY" data before kick stgarting the load again

created : 08/23/2016 jxc517 CCN Project Team....
modified: 
*******************************************************************************/
IS
 V_CODE NUMBER;
 V_ERRM VARCHAR2(500);
BEGIN
    DELETE FROM CODE_DETAIL WHERE CODE_HEADER_NAME IN ('DCM', 'ACM', 'RCM');
    DBMS_OUTPUT.PUT_LINE('CODE_DETAIL - DCM, ACM, RCM : '|| SQL%ROWCOUNT || ' Row(s) deleted ' );

    DELETE FROM CODE_HEADER WHERE CODE_HEADER_NAME IN ('DCM', 'ACM', 'RCM');
    DBMS_OUTPUT.PUT_LINE('CODE_HEADER - DCM, ACM, RCM : '|| SQL%ROWCOUNT || ' Row(s) deleted ' );

    DELETE FROM HIERARCHY_DETAIL WHERE HRCHY_HDR_NAME = 'CREDIT_HIERARCHY';
    DBMS_OUTPUT.PUT_LINE('HIERARCHY_DETAIL : '|| SQL%ROWCOUNT || ' Row(s) deleted ' );

    DELETE FROM HIERARCHY_DESCRIPTION WHERE HRCHY_HDR_NAME = 'CREDIT_HIERARCHY';
    DBMS_OUTPUT.PUT_LINE('HIERARCHY_DESCRIPTION : '|| SQL%ROWCOUNT || ' Row(s) deleted ' );

    DELETE FROM HIERARCHY_HEADER WHERE HRCHY_HDR_NAME = 'CREDIT_HIERARCHY';
    DBMS_OUTPUT.PUT_LINE('HIERARCHY_HEADER : '|| SQL%ROWCOUNT || ' Row(s) deleted ' );
EXCEPTION
  WHEN OTHERS THEN
       V_CODE  := SQLCODE;
       V_ERRM  := SUBSTR(SQLERRM,1,500);
       errpkg.raise_err(v_code, 'CREDIT_HIERARCHY_LOAD.DELETE_CREDIT_HIERARCHY_DATA' || V_ERRM );
END DELETE_CREDIT_HIERARCHY_DATA;


FUNCTION GET_CREDIT_HIERARCHY_REC(
/***********************************************************
	This function will get the credit hier row for the level passed
  
Created : 02/12/2016 sxh487
Changed : 
************************************************************/
    IN_HRCHY_DTL_LEVEL         IN  CREDIT_HIERARCHY_T.HRCHY_DTL_LEVEL%TYPE,
    IN_HRCHY_DTL_CURR_LVL_VAL  IN  CREDIT_HIERARCHY_T.HRCHY_DTL_CURR_LVL_VAL%TYPE)
    RETURN CREDIT_HIERARCHY_T%ROWTYPE
    
IS
    V_CREDIT_HIERARCHY_T_rec   CREDIT_HIERARCHY_T%ROWTYPE;
BEGIN
    SELECT */*+ INDEX(CREDIT_HIERARCHY_T CRDT_HRCHY_IDX )*/
          INTO V_CREDIT_HIERARCHY_T_rec
          FROM CREDIT_HIERARCHY_T B
         WHERE  HRCHY_HDR_NAME = 'CREDIT_HIERARCHY'
           AND HRCHY_DTL_CURR_LVL_VAL = IN_HRCHY_DTL_CURR_LVL_VAL
           AND HRCHY_DTL_LEVEL = IN_HRCHY_DTL_LEVEL
           AND ROWNUM <2;
           
    RETURN V_CREDIT_HIERARCHY_T_rec;
EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END GET_CREDIT_HIERARCHY_REC;


PROCEDURE UPDATE_UPPER_LVL_VER_VALUE
/*******************************************************************************
This Procedure updates UPPER_LVL_VER_VALUE field in HIERARCHY_DETAIL table

created : 08/29/2016 vxv336 CCN project team
modified:
*******************************************************************************/
IS
  V_UPPER_LVL_VER_VALUE hierarchy_detail.upper_lvl_ver_value%TYPE;
BEGIN

  update HIERARCHY_DETAIL hd
   set hd.upper_lvl_ver_value = (SELECT XMLELEMENT ( "attributes",
                                                    (XMLELEMENT("upper_lvl_ver_desc", 
                                                               XMLFOREST(
                                                                    'ACM_MGR' AS "Name",
                                                                    ACM_Name as "Value"
                                                                    ))),
                                                     XMLELEMENT("upper_lvl_ver_desc", 
                                                               XMLFOREST(
                                                                     'DCM_MGR' AS "Name",
                                                                     DCM_Name as "Value"
                                                                     )),
                                                     XMLELEMENT("upper_lvl_ver_desc", 
                                                               XMLFOREST(
                                                                     'DCO' AS "Name",
                                                                     DCO as "Value"
                                                                     )),
                                                     XMLELEMENT("upper_lvl_ver_desc", 
                                                               XMLFOREST(
                                                                     'DCO_DESC' AS "Name",
                                                                     (SELECT cc.COST_CENTER_NAME
                                                                         FROM COST_CENTER cc
                                                                        WHERE UPPER(cost_center_code) = UPPER(DCO))
                                                                      as "Value"
                                                                     )))
                                  FROM TEMP_CREDIT_HIER_ATTR_DTLS t
                                  where t.Dist_num = hd.hrchy_dtl_curr_row_val)
  where hd.HRCHY_HDR_NAME = 'CREDIT_HIERARCHY'
    and hd.hrchy_dtl_level = 4;
    
  commit;
  
END UPDATE_UPPER_LVL_VER_VALUE;

PROCEDURE CREDIT_HIER_HDR_DESC_LOAD
/*******************************************************************************
This Procedure Loads HIERARCHY_HEADER and HIERARCHY_DESCRIPTION for credit hierarchy
before loading the files from Mainframe into hierarchy_detail table

created : 02/12/2016 sxh487 CCN project
modified: 07/15/2016 vxv336 CCN project
          Removed SYSOUT attribute for DCO as per new requirement
modified: 08/23/2016 jxc517 CCN project Team....
          Added RAISE under exception to stop giong further, if anything fails here
modified: 07/15/2016 vxv336 CCN project team
          added DCO as attribute under District and removed it as a level
*******************************************************************************/
IS
 V_CODE NUMBER;
 V_ERRM VARCHAR2(500);
BEGIN
---INSERT FOR CREDIT HIERARCHY INTO HIERARCHY_HEADER
Insert into HIERARCHY_HEADER (HRCHY_HDR_NAME,HRCHY_HDR_LEVELS,HRCHY_HDR_DESC,STMNT_TYPE_VALIDATION_IND,ALL_APPLICABLE_ATTRIBUTES) values ('CREDIT_HIERARCHY','5','Credit Hierarchy Structure',null,null);

---INSERT FOR CREDIT HIERARCHY INTO HIERARCHY_DESCRIPTION
Insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR,LVL_VALUE_SIZE) values ('CREDIT_HIERARCHY','1','Group',null,null,2);
Insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR,LVL_VALUE_SIZE) values ('CREDIT_HIERARCHY','2','Division',null,null,2);
Insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR,LVL_VALUE_SIZE) values ('CREDIT_HIERARCHY','3','Area',null,null,2);
Insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR,LVL_VALUE_SIZE) values ('CREDIT_HIERARCHY','4','District','<attributes>
  <upper_lvl_ver_desc>
    <Name>ACM_MGR</Name>
  </upper_lvl_ver_desc>
  <upper_lvl_ver_desc>
    <Name>DCM_MGR</Name>
  </upper_lvl_ver_desc>
  <upper_lvl_ver_desc>
    <Name>DCO</Name>
  </upper_lvl_ver_desc>
  <upper_lvl_ver_desc>
    <Name>DCO_DESC</Name>
  </upper_lvl_ver_desc>
</attributes>
',null,3);
Insert into HIERARCHY_DESCRIPTION (HRCHY_HDR_NAME,HRCHY_HDR_LVL_NBR,HRCHY_HDR_LVL_DESC,UPPER_LVL_VER_VALUE,HRCHY_GLOBAL_LVL_NBR,LVL_VALUE_SIZE) values ('CREDIT_HIERARCHY','5','Cost Center',null,null,6);

EXCEPTION
  WHEN OTHERS THEN
       V_CODE  := SQLCODE;
       V_ERRM  := SUBSTR(SQLERRM,1,500);
       errpkg.raise_err(v_code, 'CREDIT_HIERARCHY_LOAD.CREDIT_HIER_HDR_DESC_LOAD' || V_ERRM );
END CREDIT_HIER_HDR_DESC_LOAD;

PROCEDURE LOAD_INTERMEDIATE_TABLES
/*******************************************************************************
This Procedure Loads the intermediate tables TEMP_CREDIT_HIERARCHY_DETAIL and 
for credit hierarchy before loading the files from Mainframe into hierarchy_detail table

created : 02/12/2016 sxh487 CCN project
modified: 08/23/2016 jxc517 CCN project Team....
          Added RAISE under exception to stop giong further, if anything fails here
*******************************************************************************/
 IS
 V_CODE NUMBER;
 V_ERRM VARCHAR2(500);
BEGIN
      EXECUTE IMMEDIATE 'TRUNCATE TABLE CREDIT_HIERARCHY_T';
      
      INSERT INTO CREDIT_HIERARCHY_T
         SELECT /*+ NO_PARALLEL (TEMP_CREDIT_HIERARCHY_DETAIL)*/ * FROM TEMP_CREDIT_HIERARCHY_DETAIL;

EXCEPTION
  WHEN OTHERS THEN
       V_CODE  := SQLCODE;
       V_ERRM  := SUBSTR(SQLERRM,1,200);
       errpkg.raise_err(v_code, 'CREDIT_HIERARCHY_LOAD.LOAD_INTERMEDIATE_TABLES' || V_ERRM );
END LOAD_INTERMEDIATE_TABLES;

PROCEDURE CREDIT_HIERARCHY_LOAD_MAIN
/******************************************************************************
This Procedure Loads the hierarchy_detail table with the 6 level Credit hierarchy
This procedure will build the necesarry  levels and will be loaded in the main table

created : 02/12/2016 sxh487 CCN project
modified: 08/23/2016 jxc517 CCN project Team....
          Added RAISE under exception to stop giong further, if anything fails here
*******************************************************************************/
IS
    V_CODE NUMBER;
    V_ERRM VARCHAR2(500);
    v_count integer := 0;
    V_COST_CENTER_rec COST_CENTER%ROWTYPE;    
    
    CURSOR CREDIT_HIER_CUR is
            SELECT *
              FROM CREDIT_HIERARCHY_T ORDER BY HRCHY_DTL_LEVEL;
              
      time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
      V_COMMIT INTEGER := 0;
      V_UPPER_LVL_VER_VALUE     HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%TYPE;
      V_HRCHY_DTL_CURR_ROW_VAL  HIERARCHY_DETAIL.HRCHY_DTL_CURR_ROW_VAL%TYPE;
    
    BEGIN
       FOR EACH_REC IN CREDIT_HIER_CUR LOOP
   
            CASE WHEN EACH_REC.HRCHY_DTL_LEVEL = '1' THEN
                      EACH_REC.HRCHY_DTL_PREV_LVL_VAL := '~~~';
                      V_HRCHY_DTL_CURR_ROW_VAL := EACH_REC.HRCHY_DTL_CURR_LVL_VAL;
                 WHEN EACH_REC.HRCHY_DTL_LEVEL = '4' THEN
                      V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -3, 3);
                 WHEN EACH_REC.HRCHY_DTL_LEVEL = '5' THEN
                      EACH_REC.HRCHY_DTL_NEXT_LVL_VAL := '~~~';
                      V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -6, 6);
                 ELSE
                      V_HRCHY_DTL_CURR_ROW_VAL := SUBSTR(EACH_REC.HRCHY_DTL_CURR_LVL_VAL, -2, 2);
                 END CASE;

                            INSERT INTO HIERARCHY_DETAIL (  HRCHY_HDR_NAME,
                                                            HRCHY_DTL_LEVEL,
                                                            HRCHY_DTL_PREV_LVL_VAL,
                                                            HRCHY_DTL_CURR_LVL_VAL,
                                                            HRCHY_DTL_NEXT_LVL_VAL,
                                                            HRCHY_DTL_EFF_DATE,
                                                            HRCHY_DTL_EXP_DATE,
                                                            HRCHY_DTL_DESC,
                                                            HRCHY_DTL_CURR_ROW_VAL,
                                                            UPPER_LVL_VER_VALUE
                                                      )
                                                VALUES ( EACH_REC.HRCHY_HDR_NAME,
                                                         EACH_REC.HRCHY_DTL_LEVEL,
                                                         EACH_REC.HRCHY_DTL_PREV_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_CURR_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_NEXT_LVL_VAL,
                                                         EACH_REC.HRCHY_DTL_EFF_DATE,
                                                         EACH_REC.HRCHY_DTL_EXP_DATE,
                                                         EACH_REC.HRCHY_DTL_DESC,
                                                         V_HRCHY_DTL_CURR_ROW_VAL,
                                                         V_UPPER_LVL_VER_VALUE
                                                       );

           IF V_COMMIT > 100 THEN 
              COMMIT;
              V_COMMIT := 0;
           ELSE
              V_COMMIT := V_COMMIT + 1;
           END IF;
                  
           V_HRCHY_DTL_CURR_ROW_VAL := NULL;
           V_UPPER_LVL_VER_VALUE    := NULL;

     END LOOP;
     COMMIT;
     
     UPDATE_UPPER_LVL_VER_VALUE;
     
     DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
     DBMS_OUTPUT.PUT_LINE('CREDIT_HIERARCHY_LOAD_MAIN completed. ');
EXCEPTION
  when OTHERS then
       V_CODE  := SQLCODE;
       V_ERRM  := SUBSTR(SQLERRM,1,200);
       errpkg.raise_err(v_code, 'CREDIT_HIERARCHY_LOAD.CREDIT_HIERARCHY_LOAD_MAIN' || V_ERRM );
END CREDIT_HIERARCHY_LOAD_MAIN; 

PROCEDURE CREDIT_HIERARCHY_LOAD_MAIN_SP
/******************************************************************
This Procedure is a wrapper for the Credit Hierarchy Load.
This Procedure
    * Disables all the Triggers for HIERARCHY_DETAIL Table
    * Delete the already existing data for this CREDIT_HIERARCHY before starting the load process
    * Loads the HIERARCHY_HEADER,HIERARCHY_DESCRIPTION, INTERMEDIATE  tables
    * Loads the HIERARCHY_DETAIL table with the Credit Hierarchy data
    * Re-Enables the Triggers

created : 02/12/2016 sxh487 CCN project
modified: 08/23/2016 jxc517 CCN project Team....
          Added RAISE under exception to stop giong further, if anything fails here
          08/29/2016 vxv336 CCN Project Team
          Remvoed LOAD_CODE_HEADER_DETAIL
******************************************************************/
AS
    V_CONTEXT     VARCHAR2(200);
    time_before   PLS_INTEGER := DBMS_UTILITY.get_time;
    V_CODE        NUMBER;
    V_ERRM        VARCHAR2(500);
BEGIN
      CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
      V_CONTEXT := 'Alter triggers - DISABLE ';
      ALTER_HIER_TRIGGERS('DISABLE');

      V_CONTEXT := 'Deleting the old credit hier details, description and header before kick starting the process again';
      DELETE_CREDIT_HIERARCHY_DATA();

      V_CONTEXT := 'Loading credit hier header and description ';
      CREDIT_HIER_HDR_DESC_LOAD();

      V_CONTEXT := 'Loading Temp Tables from External Tables  ';
      LOAD_INTERMEDIATE_TABLES();

      V_CONTEXT := 'Loading credit hier into hierarchy_detail table';
      CREDIT_HIERARCHY_LOAD_MAIN;
            
      V_CONTEXT := 'Alter triggers - ENABLE ';
      ALTER_HIER_TRIGGERS ( 'ENABLE' );

      DBMS_OUTPUT.put_line (DBMS_UTILITY.get_time - time_before);
      CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION; 
EXCEPTION
   WHEN OTHERS THEN
       V_CODE  := SQLCODE;
       V_ERRM  := SUBSTR(SQLERRM,1,200);
       errpkg.raise_err(v_code, 'CREDIT_HIERARCHY_LOAD.CREDIT_HIERARCHY_LOAD_MAIN_SP' || V_ERRM );
END CREDIT_HIERARCHY_LOAD_MAIN_SP;

END CREDIT_HIERARCHY_LOAD;