create or replace PACKAGE BODY CCN_ACCOUNTING_PKG AS 
/****************************************************************************** 
This package is used to load the table into CCN_ACCOUNTING_TBL 
and generate report from CCN_ACCOUNTING_TBL attributes. 

created : 06/16/2017 axt754 -- CCN Project Team...

******************************************************************************/

PROCEDURE LOAD_CCN_ACCOUNTING_TABLE(
/****************************************************************************** 
This PROCEDURE loads the data into CCN_ACCOUNTING_TBL

created : 06/16/2017 axt754 -- CCN Project Team
Modified: 07/05/2017 axt754 -- Change to remove all filters except global hierarchy ind
Modified: 07/11/2017 pxb712 -- Change to add a new column STATUS_CODE in CCN_ACCOUNTING_TBL
          07/25/2017 axt754 -- Added STATUS_CODE_DESC, TERRITORY_BUSN_CODE, TERRITORY_BUSN_CODE_DESC to CCN_ACCOUNTING_TBL
          07/28/2017 axt754 -- Added Territory_rep to CCN_ACCOUNTING_TBL
                            -- Renamed CITY_MGR_NAME to CITY_SALES_MANAGER_NAME in CCN_ACCOUNTING_TBL
          07/31/2017 axt754 -- Changed function to retrieve cost center manager
          03/28/2018 sxg151 -- Replaced the function(CCN_HIERARCHY.GET_MGR_NAME_FNC to COMMON_TOOLS.GET_CC_MANAGER_NAME)  to get MGR_NAME
          06/12/2018 sxg151 -- Added BEGIN_DATE,TYPE_CODE and TYPE_CODE_DESC  in CCN_ACCOUNTING_TBL ASP-1075.
		  09/13/2018 kxm302 -- Replaced the function(COMMON_TOOLS.GET_CC_MANAGER_NAME to CCN_DERIVED_VALUES.GET_CC_MANAGER_NAME)  to get MGR_NAME ASP-1128.
          09/20/2018 kxm302 -- Accounting Report update to add address fields ASP-1130.
******************************************************************************/
IN_DATE IN DATE)
IS 

   CURSOR GET_CC_DETAILS IS 
       SELECT COST_CENTER_CODE 
             ,COST_CENTER_NAME
             ,CATEGORY
             ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('CATEGORY','COD',CATEGORY) CATEGORY_DESC
             ,ACQUISITION_CODE
             ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('ACQUISITION_CODE','COD',ACQUISITION_CODE) ACQUISITION_CODE_DESC
             ,STATEMENT_TYPE
             ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('STATEMENT_TYPE','COD',STATEMENT_TYPE) STATEMENT_TYPE_DESC
             ,MISSION_TYPE_CODE
             ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('MISSION_TYPE_CODE','COD',MISSION_TYPE_CODE) MISSION_TYPE_CODE_DESC
             ,OPEN_DATE
             ,CLOSE_DATE
             ,CURRENCY_CODE
             ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('CURRENCY_CODE','COD',CURRENCY_CODE) CURRENCY_CODE_DESC
             ,BEGIN_DATE
         FROM COST_CENTER;

    CURSOR GET_MARKETING_DETAILS(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT MKT_MISSION
              ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('MKT_MISSION','COD',MKT_MISSION) MKT_MISSION_DESC
              ,MKT_SALES_FLOOR_SIZE
              ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('MKT_SALES_FLOOR_SIZE','COD',MKT_SALES_FLOOR_SIZE) MKT_SALES_FLOOR_SIZE_DESC
              ,MKT_WAREHOUSE_SIZE
              ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('MKT_WAREHOUSE_SIZE','COD',MKT_WAREHOUSE_SIZE) MKT_WAREHOUSE_SIZE_DESC
          FROM MARKETING
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE;

    CURSOR GET_HIERARCHY_DETAILS(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT GLOBAL_DOMAIN "DOMAIN"
               ,GLOBAL_DOMAIN_NAME "DOMAIN_NAME"
               ,GLOBAL_GROUP "GROUP"
               ,GLOBAL_GROUP_NAME "GROUP_NAME"
               ,GLOBAL_DIVISION "DIVISION"
               ,GLOBAL_DIVISION_NAME "DIVISION_NAME"
               ,GLOBAL_AREA "AREA"
               ,GLOBAL_AREA_NAME "AREA_NAME"
               ,GLOBAL_DISTRICT "DISTRICT"
               ,GLOBAL_DISTRICT_NAME "DISTRICT_NAME"
               ,GLOBAL_CITY_SALES_MGR "CITY_SALES_MGR"
               ,GLOBAL_CITY_SALES_MGR_NAME "CITY_SALES_MGR_NAME"
               ,GLOBAL_ZONE "ZONE"
               ,GLOBAL_ZONE_NAME "ZONE_NAME"
               ,GLOBAL_SPECIAL_ROLES "SPECIAL_ROLES"
               ,GLOBAL_SPECIAL_ROLES_NAME "SPECIAL_ROLES_NAME"
               ,LEGACY_GL_DIVISION "SGL_DIVISION"
               ,LEGACY_GL_DIVISION_NAME "SGL_DIVISION_NAME"
               ,COA_DIVISION
               ,COA_DIVISION_NAME
          FROM GLBL_FACTS_LEGACY_VIEW
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE;

    CURSOR GET_MGR_DETAILS(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT DIV_MGR_NAME
               ,AREA_MGR_NAME
               ,DISTRICT_MGR_NAME
               ,CITY_MGR_NAME CITY_SALES_MANAGER_NAME
               ,CCN_DERIVED_VALUES.GET_CC_MANAGER_NAME(COST_CENTER_CODE) CC_MGR_NAME
          FROM GLOBAL_HIERARCHY_ATTRBT_VW
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE;

    CURSOR GET_ADDRESS_DETAILS(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT  STATE_CODE
               ,STATE_CODE_DESCRIPTION
               ,PROVINCE_CODE
               ,PROVINCE_CODE_DESCRIPTION
               ,ADDRESS_LINE_1
               ,ADDRESS_LINE_2
               ,ADDRESS_LINE_3
               ,CITY
               ,NVL(ZIP_CODE,POSTAl_CODE) ZIP_CODE
          FROM ADDRESS_VW
         WHERE  COST_CENTER_CODE = IN_COST_CENTER_CODE
           AND ADDRESS_TYPE = 'M'
           AND EXPIRATION_DATE IS NULL;

     CURSOR GET_STATUS_CODE(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT STATUS_CODE
              ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('STATUS_CODE','COD',STATUS_CODE) STATUS_CODE_DESC
          FROM STATUS
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
           AND EXPIRATION_DATE IS NULL;

     CURSOR GET_TERR_BUSN_CODE(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT TERRITORY_TYPE_BUSN_CODE TERRITORY_BUSN_CODE
               ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('TERRITORY_TYPE_BUSN_CODE','COD',TERRITORY_TYPE_BUSN_CODE) TERRITORY_BUSN_CODE_DESC
          FROM TERRITORY
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE;

     CURSOR GET_TYPE_CODE_CUR(IN_COST_CENTER_CODE VARCHAR2) IS -- ASP-1075
        SELECT TYPE_CODE,
               CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('TYPE_CODE','COD',TYPE_CODE) TYPE_CODE_DESC
          FROM TYPE
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
           AND EXPIRATION_DATE IS NULL;

    V_CCN_ACCOUNTING_ROWTYPE CCN_ACCOUNTING_TBL%ROWTYPE;
    V_COUNT                   NUMBER := 0;

BEGIN
    -- If we need to re run the report, then delete and re load the data for the re run date
    DELETE FROM CCN_ACCOUNTING_TBL WHERE LOAD_DATE = IN_DATE;

    FOR CC_REC IN GET_CC_DETAILS LOOP
        V_CCN_ACCOUNTING_ROWTYPE := NULL;

        -- LOAD CC DETAILS
        V_CCN_ACCOUNTING_ROWTYPE.COST_CENTER_CODE        := CC_REC.COST_CENTER_CODE;
        V_CCN_ACCOUNTING_ROWTYPE.COST_CENTER_NAME        := CC_REC.COST_CENTER_NAME;
        V_CCN_ACCOUNTING_ROWTYPE.CATEGORY                := CC_REC.CATEGORY;
        V_CCN_ACCOUNTING_ROWTYPE.CATEGORY_DESC           := CC_REC.CATEGORY_DESC;
        V_CCN_ACCOUNTING_ROWTYPE.ACQUISITION_CODE        := CC_REC.ACQUISITION_CODE;
        V_CCN_ACCOUNTING_ROWTYPE.ACQUISITION_CODE_DESC   := CC_REC.ACQUISITION_CODE_DESC;
        V_CCN_ACCOUNTING_ROWTYPE.STATEMENT_TYPE          := CC_REC.STATEMENT_TYPE;
        V_CCN_ACCOUNTING_ROWTYPE.STATEMENT_TYPE_DESC     := CC_REC.STATEMENT_TYPE_DESC;
        V_CCN_ACCOUNTING_ROWTYPE.MISSION_TYPE_CODE       := CC_REC.MISSION_TYPE_CODE;
        V_CCN_ACCOUNTING_ROWTYPE.MISSION_TYPE_CODE_DESC  := CC_REC.MISSION_TYPE_CODE_DESC;
        V_CCN_ACCOUNTING_ROWTYPE.OPEN_DATE               := CC_REC.OPEN_DATE;
        V_CCN_ACCOUNTING_ROWTYPE.CLOSE_DATE              := CC_REC.CLOSE_DATE;
        V_CCN_ACCOUNTING_ROWTYPE.CURRENCY_CODE           := CC_REC.CURRENCY_CODE;
        V_CCN_ACCOUNTING_ROWTYPE.CURRENCY_CODE_DESC      := CC_REC.CURRENCY_CODE_DESC;
        V_CCN_ACCOUNTING_ROWTYPE.BEGIN_DATE              := CC_REC.BEGIN_DATE;

       -- LOAD MARKETING DETAILS
       FOR REC IN GET_MARKETING_DETAILS(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.MKT_MISSION               := REC.MKT_MISSION;
              V_CCN_ACCOUNTING_ROWTYPE.MKT_MISSION_DESC          := REC.MKT_MISSION_DESC;
              V_CCN_ACCOUNTING_ROWTYPE.MKT_SALES_FLOOR_SIZE      := REC.MKT_SALES_FLOOR_SIZE;
              V_CCN_ACCOUNTING_ROWTYPE.MKT_SALES_FLOOR_SIZE_DESC := REC.MKT_SALES_FLOOR_SIZE_DESC;
              V_CCN_ACCOUNTING_ROWTYPE.MKT_WAREHOUSE_SIZE        := REC.MKT_WAREHOUSE_SIZE;
              V_CCN_ACCOUNTING_ROWTYPE.MKT_WAREHOUSE_SIZE_DESC   := REC.MKT_WAREHOUSE_SIZE_DESC;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;

        -- LOAD HIERARCHY DETAILS
        FOR REC IN GET_HIERARCHY_DETAILS(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.DOMAIN              := REC.DOMAIN;
              V_CCN_ACCOUNTING_ROWTYPE.DOMAIN_NAME         := REC.DOMAIN_NAME;
              V_CCN_ACCOUNTING_ROWTYPE."GROUP"             := REC."GROUP";
              V_CCN_ACCOUNTING_ROWTYPE.GROUP_NAME          := REC.GROUP_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.DIVISION            := REC.DIVISION;
              V_CCN_ACCOUNTING_ROWTYPE.DIVISION_NAME       := REC.DIVISION_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.AREA                := REC.AREA;
              V_CCN_ACCOUNTING_ROWTYPE.AREA_NAME           := REC.AREA_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.DISTRICT            := REC.DISTRICT;
              V_CCN_ACCOUNTING_ROWTYPE.DISTRICT_NAME       := REC.DISTRICT_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.CITY_SALES_MGR      := REC.CITY_SALES_MGR;
              V_CCN_ACCOUNTING_ROWTYPE.CITY_SALES_MGR_NAME := REC.CITY_SALES_MGR_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.ZONE                := REC.ZONE;
              V_CCN_ACCOUNTING_ROWTYPE.ZONE_NAME           := REC.ZONE_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.SPECIAL_ROLES       := REC.SPECIAL_ROLES;
              V_CCN_ACCOUNTING_ROWTYPE.SPECIAL_ROLES_NAME  := REC.SPECIAL_ROLES_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.SGL_DIVISION        := REC.SGL_DIVISION;
              V_CCN_ACCOUNTING_ROWTYPE.SGL_DIVISION_NAME   := REC.SGL_DIVISION_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.COA_DIVISION        := REC.COA_DIVISION;
              V_CCN_ACCOUNTING_ROWTYPE.COA_DIVISION_NAME   := REC.COA_DIVISION_NAME;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
       END LOOP;

       -- LOAD MANAGER DETAILS
        FOR REC IN GET_MGR_DETAILS(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.DIV_MGR_NAME              := REC.DIV_MGR_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.AREA_MGR_NAME             := REC.AREA_MGR_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.DISTRICT_MGR_NAME         := REC.DISTRICT_MGR_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.CITY_SALES_MANAGER_NAME   := REC.CITY_SALES_MANAGER_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.CC_MGR_NAME               := REC.CC_MGR_NAME;

              -- Load Territory Rep as city_sales_manager_name, for cost centers whose category is 'T'
              IF CC_REC.CATEGORY = 'T' THEN
                  V_CCN_ACCOUNTING_ROWTYPE.TERRITORY_REP         := REC.CITY_SALES_MANAGER_NAME;
              END IF;

           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;

        -- LOAD ADDRESS DETAILS
        FOR REC IN GET_ADDRESS_DETAILS(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.STATE_CODE           := REC.STATE_CODE;
              V_CCN_ACCOUNTING_ROWTYPE.STATE_DESCRIPTION    := REC.STATE_CODE_DESCRIPTION;
              V_CCN_ACCOUNTING_ROWTYPE.PROVINCE_CODE        := REC.PROVINCE_CODE;
              V_CCN_ACCOUNTING_ROWTYPE.PROVINCE_DESCRIPTION := REC.PROVINCE_CODE_DESCRIPTION;
              V_CCN_ACCOUNTING_ROWTYPE.ADDRESS_LINE_1       := REC.ADDRESS_LINE_1;
              V_CCN_ACCOUNTING_ROWTYPE.ADDRESS_LINE_2       := REC.ADDRESS_LINE_2;
              V_CCN_ACCOUNTING_ROWTYPE.ADDRESS_LINE_3       := REC.ADDRESS_LINE_3;
              V_CCN_ACCOUNTING_ROWTYPE.ZIP_CODE              := REC.ZIP_CODE;
              V_CCN_ACCOUNTING_ROWTYPE.CITY                 := REC.CITY;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;

        -- LOAD STATUS DETAILS
       FOR REC IN GET_STATUS_CODE(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.STATUS_CODE      := REC.STATUS_CODE;
              V_CCN_ACCOUNTING_ROWTYPE.STATUS_CODE_DESC := REC.STATUS_CODE_DESC;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;

        -- LOAD TERRITORY TYPE BUSN DETAILS
       FOR REC IN GET_TERR_BUSN_CODE(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.TERRITORY_BUSN_CODE      := REC.TERRITORY_BUSN_CODE;
              V_CCN_ACCOUNTING_ROWTYPE.TERRITORY_BUSN_CODE_DESC := REC.TERRITORY_BUSN_CODE_DESC;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;

        -- LOAD TYPE_CODE,TYPE_CODE_DESC --ASP-1075.

        FOR REC IN GET_TYPE_CODE_CUR(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.TYPE_CODE      := REC.TYPE_CODE;
              V_CCN_ACCOUNTING_ROWTYPE.TYPE_CODE_DESC := REC.TYPE_CODE_DESC;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;

        V_CCN_ACCOUNTING_ROWTYPE.LOAD_DATE := IN_DATE;

        -- INSERT INTO CCN_ACCOUNTING_TBL if DIVISION,AREA,DISTRICT is not NULL(Which are attached to Global Hierarchy)
        IF(V_CCN_ACCOUNTING_ROWTYPE.DIVISION IS NOT NULL AND
           V_CCN_ACCOUNTING_ROWTYPE.AREA     IS NOT NULL AND
           V_CCN_ACCOUNTING_ROWTYPE.DISTRICT IS NOT NULL) THEN
            INSERT INTO CCN_ACCOUNTING_TBL VALUES V_CCN_ACCOUNTING_ROWTYPE;
        END IF;

        --COMMIT LOGIC
        V_COUNT := V_COUNT + 1;
        IF V_COUNT = 1000 THEN
            COMMIT;
            V_COUNT := 0;
        END IF;
    END LOOP;

    COMMIT;
EXCEPTION 
    WHEN OTHERS THEN
       DBMS_OUTPUT.PUT_LINE('FAILED TO LOAD CCN APPLICATION TABLE FOR MONTH '||to_char(SYSDATE,'MONTH'));
       DBMS_OUTPUT.PUT_LINE(SQLCODE || SUBSTR(SQLERRM, 1, 500)||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
END LOAD_CCN_ACCOUNTING_TABLE;

PROCEDURE GEN_CCN_ACCOUNTING_REPORT
/****************************************************************************** 
This PROCEDURE is calls columns from CCN_ACCOUNTING_TBL and generate CLOB for
calling MAIL_PKG. 

created : 06/16/2017 axt754 -- CCN Project Team
Mdified: 07/11/2017 pxb712 -- added new column STATUS_CODE in CCN_ACCOUNTING_TBL
         07/25/2017 axt754 -- Added STATUS_CODE_DESC, TERRITORY_BUSN_CODE, TERRITORY_BUSN_CODE_DESC to report
         07/28/2017 axt754 -- Added Territory_rep to report
                           -- Renamed CITY_MGR_NAME to CITY/SALES_MANAGER_NAME in report
         06/12/2018 sxg151 -- Added BEGIN_DATE,TYPE,TYPE_CODE_DESC and File formate has been changed ASP-1075
         09/20/2018 kxm302 -- Added ADDRESS_LINE_1,ADDRESS_LINE_2,ADDRESS_LINE_3,CITY,ZIP_CODE to report ASP-1130
******************************************************************************/
      IS
   V_CLOB           CLOB;
   V_CLOB_REC       CLOB;
   V_LOAD_DATE      DATE;
BEGIN
    V_CLOB :=  'COST_CENTER_CODE'||
               ',COST_CENTER_NAME'||
               ',DIVISION'||
               ',AREA'||
               ',DISTRICT'||
               ',CITY_SALES_MGR'||
               ',MISSION_TYPE_CODE'||
               ',MISSION_TYPE_CODE_DESC'||
               ',BEGIN_DATE'||
               ',OPEN_DATE'||
               ',CLOSE_DATE'||
               ',TYPE_CODE'||
               ',TYPE_CODE_DESC'||
               ',STATUS_CODE'||
               ',STATUS_CODE_DESC'||
               ',TERRITORY_BUSN_CODE'||
               ',TERRITORY_BUSN_CODE_DESC'||
               ',MKT_MISSION'||
               ',MKT_MISSION_DESC'||
               ',CATEGORY'||
               ',CATEGORY_DESC'||
               ',ACQUISITION_CODE'||
               ',ACQUISITION_CODE_DESC'||
               ',STATEMENT_TYPE'||
               ',STATEMENT_TYPE_DESC'||
               ',STATE_CODE'||
               ',STATE_DESCRIPTION'||
               ',PROVINCE_CODE'||
               ',PROVINCE_DESCRIPTION'||
               ',DIVISION_NAME'||
               ',AREA_NAME'||
               ',DISTRICT_NAME'||
               ',CITY_SALES_MGR_NAME'||
               ',DIV_MGR_NAME'||
               ',AREA_MGR_NAME'||
               ',DISTRICT_MGR_NAME'||
               ',CITY_SALES_MANAGER_NAME'||
               ',CC_MGR_NAME'||
               ',TERRITORY_REP'||
               ',CURRENCY_CODE'||
               ',CURRENCY_CODE_DESC'||
               ',MKT_SALES_FLOOR_SIZE'||
               ',MKT_SALES_FLOOR_SIZE_DESC'||
               ',MKT_WAREHOUSE_SIZE'||
               ',MKT_WAREHOUSE_SIZE_DESC'||
               ',COA_DIVISION'||
               ',COA_DIVISION_NAME'||
               ',SGL_DIVISION'||
               ',SGL_DIVISION_NAME'||
               ',DOMAIN'||
               ',DOMAIN_NAME'||
               ',GROUP'||
               ',GROUP_NAME'||
               ',ZONE'||
               ',ZONE_NAME'||
               ',SPECIAL_ROLES'||
               ',SPECIAL_ROLES_NAME'||
               ',ADDRESS_LINE_1'||
               ',ADDRESS_LINE_2'||
               ',ADDRESS_LINE_3'||
               ',CITY'||
               ',ZIP_CODE'||CHR(10);

   FOR REC IN (SELECT *
                 FROM CCN_ACCOUNTING_TBL
                WHERE LOAD_DATE = (SELECT MAX(LOAD_DATE)
                                     FROM CCN_ACCOUNTING_TBL)) LOOP


       -- Appended '="attribute"', so that if opened in excel the '0' on left side wouldn't be ignored..

        V_CLOB_REC := '="' || REC.COST_CENTER_CODE || '",' ||
                      '"' ||  REC.COST_CENTER_NAME || '",' ||
                      '="' || NVL(REC.DIVISION,'N/A') || '",' ||
                      '="' || NVL(REC.AREA,'N/A') || '",' ||
                      '="' || NVL(REC.DISTRICT,'N/A') || '",' ||
                      '="' || NVL(REC.CITY_SALES_MGR,'N/A')	|| '",' ||
                      '="' || NVL(REC.MISSION_TYPE_CODE,'N/A') || '",' ||
                      '="' || NVL(REC.MISSION_TYPE_CODE_DESC,'N/A') || '",' ||
                      '="' || REC.BEGIN_DATE || '",' ||
                      '="' || REC.OPEN_DATE || '",' ||
                      '="' || REC.CLOSE_DATE || '",' ||
                      '="' || NVL(REC.TYPE_CODE,'N/A') || '",' ||
                      '="' || NVL(REC.TYPE_CODE_DESC,'N/A') || '",' ||
                      '="' || NVL(REC.STATUS_CODE,'N/A') || '",' ||
                      '="' || NVL(REC.STATUS_CODE_DESC,'N/A') || '",' ||
                      '="' || NVL(REC.TERRITORY_BUSN_CODE,'N/A') || '",' ||
                      '="' || NVL(REC.TERRITORY_BUSN_CODE_DESC,'N/A') || '",' ||
                      '="' || NVL(REC.MKT_MISSION,'N/A') || '",' ||
                      '="' || NVL(REC.MKT_MISSION_DESC,'N/A') || '",' ||
                      '="' || REC.CATEGORY || '",' ||
                      '="' || REC.CATEGORY_DESC || '",' ||
                      '="' || NVL(REC.ACQUISITION_CODE,'N/A') || '",' ||
                      '="' || NVL(REC.ACQUISITION_CODE_DESC,'N/A') || '",' ||
                      '="' || NVL(REC.STATEMENT_TYPE,'N/A') || '",' ||
                      '="' || NVL(REC.STATEMENT_TYPE_DESC,'N/A') || '",' ||
                      '="' || NVL(REC.STATE_CODE,'N/A') || '",' ||
                      '="' || NVL(REC.STATE_DESCRIPTION,'N/A') || '",' ||
                      '="' || NVL(REC.PROVINCE_CODE,'N/A') || '",' ||
                      '="' || NVL(REC.PROVINCE_DESCRIPTION,'N/A') || '",' ||
                      '="' || NVL(REC.DIVISION_NAME,'N/A') || '",' ||
                      '="' || NVL(REC.AREA_NAME,'N/A') || '",' ||
                      '="' || NVL(REC.DISTRICT_NAME,'N/A') || '",' ||
                      '"' || NVL(REC.CITY_SALES_MGR_NAME,'N/A') || '",' ||
                      '"' || NVL(REC.DIV_MGR_NAME,'N/A') || '",' ||
                      '"' || NVL(REC.AREA_MGR_NAME,'N/A') || '",' ||
                      '"' || NVL(REC.DISTRICT_MGR_NAME,'N/A') || '",' ||
                      '"' || NVL(REC.CITY_SALES_MANAGER_NAME,'N/A') || '",' ||
                      '"' || NVL(REC.CC_MGR_NAME,'N/A') || '",' ||
                      '"' || NVL(REC.TERRITORY_REP,'N/A') || '",' ||
                      '="' || NVL(REC.CURRENCY_CODE,'N/A') || '",' ||
                      '="' || NVL(REC.CURRENCY_CODE_DESC,'N/A')	|| '",' ||
                      '="' || NVL(REC.MKT_SALES_FLOOR_SIZE,'N/A') || '",' ||
                      '"' || NVL(REC.MKT_SALES_FLOOR_SIZE_DESC,'N/A') || '",' ||
                      '="' || NVL(REC.MKT_WAREHOUSE_SIZE,'N/A')	|| '",' ||
                      '"' || NVL(REC.MKT_WAREHOUSE_SIZE_DESC,'N/A') || '",' ||
                      '="' || NVL(REC.COA_DIVISION,'N/A') || '",' ||
                      '"' || NVL(REC.COA_DIVISION_NAME,'N/A') || '",' ||
                      '="' || NVL(REC.SGL_DIVISION,'N/A') || '",' ||
                      '"' || NVL(REC.SGL_DIVISION_NAME,'N/A') || '",' ||
                      '="' || NVL(REC.DOMAIN,'N/A') || '",' ||
                      '"' || NVL(REC.DOMAIN_NAME,'N/A') || '",' ||
                      '="' || NVL(REC."GROUP",'N/A') || '",' ||
                      '"' || NVL(REC.GROUP_NAME,'N/A') || '",' ||
                      '="' || NVL(REC."ZONE",'N/A') || '",' ||
                      '"' || NVL(REC.ZONE_NAME,'N/A') || '",' ||
                      '="' || NVL(REC.SPECIAL_ROLES,'N/A') || '",' ||
                      '"' || NVL(REC.SPECIAL_ROLES_NAME,'N/A') || '",' ||
                      '="' || NVL(REC.ADDRESS_LINE_1,'N/A') || '",' ||
                      '="' || NVL(REC.ADDRESS_LINE_2,'N/A') || '",' ||
                      '="' || NVL(REC.ADDRESS_LINE_3,'N/A') || '",' ||
                      '="' || NVL(REC.CITY,'N/A') || '",' ||
                      '="' || NVL(REC.ZIP_CODE,'N/A') || '"' || CHR(10);
                 V_CLOB := V_CLOB || V_CLOB_REC;
   END LOOP;

    CCN_COMMON_TOOLS.WRITE_CLOB_ON_SERVER('CCN_DATAFILES',
                                          'CCN_ACCNT_REPORT_' || TO_CHAR(TRUNC(SYSDATE),'DD_MON_RRRR') ||'.csv',
                                           V_CLOB);

EXCEPTION 
    WHEN OTHERS THEN
       DBMS_OUTPUT.PUT_LINE('FAILED TO GENERATE CCN APPLICATION VIEW REPORT');
       DBMS_OUTPUT.PUT_LINE(SQLCODE || SUBSTR(SQLERRM, 1, 500)||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);

END GEN_CCN_ACCOUNTING_REPORT;

PROCEDURE SEND_EPM_FILES
/******************************************************************************
 This procedure will generate the Account Report and EPM Files and email the files.
Created : 05/31/2018 sxg151 -- CCN Project Team
Changed :
******************************************************************************/
IS
    BEGIN
        -- Generate Accounting view report
        GEN_CCN_ACCOUNTING_REPORT();
        -- Generate EPM Files report
        CCN_EPM_FEED_PKG.GENERATE_EPM_FILES();
        --Email above generated files to user
        MAIL_PKG.SEND_MAIL('CCN_ACCNT_EPM_REPORT');

EXCEPTION
    WHEN OTHERS THEN
       DBMS_OUTPUT.PUT_LINE('FAILED TO EMAIL "EPM REPORT"');
       DBMS_OUTPUT.PUT_LINE(SQLCODE || SUBSTR(SQLERRM, 1, 500)||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
        RAISE;
END SEND_EPM_FILES;

END CCN_ACCOUNTING_PKG;