create or replace PACKAGE BODY CCN_ACCOUNTING_PKG AS 
/****************************************************************************** 
This package is used to load the table into CCN_ACCOUNTING_TBL 
and generate report from CCN_ACCOUNTING_TBL attributes. 

created : 06/16/2017 axt754 -- CCN Project Team...

******************************************************************************/

PROCEDURE LOAD_CCN_ACCOUNTING_TABLE(
/****************************************************************************** 
This PROCEDURE loads the data into CCN_ACCOUNTING_TBL

created : 06/16/2017 axt754 -- CCN Project Team
Modified: 07/05/2017 axt754 -- Change to remove all filters except global hierarchy ind
******************************************************************************/
IN_DATE IN DATE)
IS 
  -- Just retreive all cost centers that are attached to global hierarchy
   CURSOR GET_CC_DETAILS IS 
       SELECT COST_CENTER_CODE 
             ,COST_CENTER_NAME
             ,CATEGORY
             ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('CATEGORY','COD',CATEGORY) CATEGORY_DESC
             ,ACQUISITION_CODE
             ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('ACQUISITION_CODE','COD',ACQUISITION_CODE) ACQUISITION_CODE_DESC
             ,STATEMENT_TYPE
             ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('STATEMENT_TYPE','COD',STATEMENT_TYPE) STATEMENT_TYPE_DESC
             ,MISSION_TYPE_CODE
             ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('MISSION_TYPE_CODE','COD',MISSION_TYPE_CODE) MISSION_TYPE_CODE_DESC
             ,OPEN_DATE
             ,CLOSE_DATE
             ,CURRENCY_CODE
             ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('CURRENCY_CODE','COD',CURRENCY_CODE) CURRENCY_CODE_DESC
         FROM COST_CENTER
        WHERE GLOBAL_HIERARCHY_IND = 'Y';
        
    CURSOR GET_MARKETING_DETAILS(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT MKT_MISSION
              ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('MKT_MISSION','COD',MKT_MISSION) MKT_MISSION_DESC
              ,MKT_SALES_FLOOR_SIZE
              ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('MKT_SALES_FLOOR_SIZE','COD',MKT_SALES_FLOOR_SIZE) MKT_SALES_FLOOR_SIZE_DESC
              ,MKT_WAREHOUSE_SIZE
              ,CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('MKT_WAREHOUSE_SIZE','COD',MKT_WAREHOUSE_SIZE) MKT_WAREHOUSE_SIZE_DESC
          FROM MARKETING
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE;
         
    CURSOR GET_HIERARCHY_DETAILS(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT GLOBAL_DOMAIN "DOMAIN"
               ,GLOBAL_DOMAIN_NAME "DOMAIN_NAME"
               ,GLOBAL_GROUP "GROUP"
               ,GLOBAL_GROUP_NAME "GROUP_NAME"
               ,GLOBAL_DIVISION "DIVISION"
               ,GLOBAL_DIVISION_NAME "DIVISION_NAME"
               ,GLOBAL_AREA "AREA"
               ,GLOBAL_AREA_NAME "AREA_NAME"
               ,GLOBAL_DISTRICT "DISTRICT"
               ,GLOBAL_DISTRICT_NAME "DISTRICT_NAME"
               ,GLOBAL_CITY_SALES_MGR "CITY_SALES_MGR"
               ,GLOBAL_CITY_SALES_MGR_NAME "CITY_SALES_MGR_NAME"
               ,GLOBAL_ZONE "ZONE"
               ,GLOBAL_ZONE_NAME "ZONE_NAME"
               ,GLOBAL_SPECIAL_ROLES "SPECIAL_ROLES"
               ,GLOBAL_SPECIAL_ROLES_NAME "SPECIAL_ROLES_NAME"
               ,LEGACY_GL_DIVISION "SGL_DIVISION"
               ,LEGACY_GL_DIVISION_NAME "SGL_DIVISION_NAME"
               ,COA_DIVISION
               ,COA_DIVISION_NAME
          FROM GLBL_FACTS_LEGACY_VIEW
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE;
         
    CURSOR GET_MGR_DETAILS(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT DIV_MGR_NAME
               ,AREA_MGR_NAME
               ,DISTRICT_MGR_NAME
               ,CITY_MGR_NAME
               ,CC_MGR_NAME
          FROM GLOBAL_HIERARCHY_ATTRBT_VW
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE;
         
    CURSOR GET_STATE_CODE(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT STATE_CODE
               ,STATE_CODE_DESCRIPTION
               ,PROVINCE_CODE
               ,PROVINCE_CODE_DESCRIPTION
          FROM ADDRESS_VW
         WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
           AND ADDRESS_TYPE = 'M'
           AND EXPIRATION_DATE IS NULL;
           
    V_CCN_ACCOUNTING_ROWTYPE CCN_ACCOUNTING_TBL%ROWTYPE;
    V_COUNT                   NUMBER := 0;
    
BEGIN
    -- If we need to re run the report, then delete and re load the data for the re run date
    DELETE FROM CCN_ACCOUNTING_TBL WHERE LOAD_DATE = IN_DATE;
    
    FOR CC_REC IN GET_CC_DETAILS LOOP
        V_CCN_ACCOUNTING_ROWTYPE := NULL;
        
        -- LOAD CC DETAILS
        V_CCN_ACCOUNTING_ROWTYPE.COST_CENTER_CODE        := CC_REC.COST_CENTER_CODE;
        V_CCN_ACCOUNTING_ROWTYPE.COST_CENTER_NAME        := CC_REC.COST_CENTER_NAME;
        V_CCN_ACCOUNTING_ROWTYPE.CATEGORY                := CC_REC.CATEGORY;
        V_CCN_ACCOUNTING_ROWTYPE.CATEGORY_DESC           := CC_REC.CATEGORY_DESC;
        V_CCN_ACCOUNTING_ROWTYPE.ACQUISITION_CODE        := CC_REC.ACQUISITION_CODE;
        V_CCN_ACCOUNTING_ROWTYPE.ACQUISITION_CODE_DESC   := CC_REC.ACQUISITION_CODE_DESC;
        V_CCN_ACCOUNTING_ROWTYPE.STATEMENT_TYPE          := CC_REC.STATEMENT_TYPE;
        V_CCN_ACCOUNTING_ROWTYPE.STATEMENT_TYPE_DESC     := CC_REC.STATEMENT_TYPE_DESC;
        V_CCN_ACCOUNTING_ROWTYPE.MISSION_TYPE_CODE       := CC_REC.MISSION_TYPE_CODE;
        V_CCN_ACCOUNTING_ROWTYPE.MISSION_TYPE_CODE_DESC  := CC_REC.MISSION_TYPE_CODE_DESC;
        V_CCN_ACCOUNTING_ROWTYPE.OPEN_DATE               := CC_REC.OPEN_DATE;
        V_CCN_ACCOUNTING_ROWTYPE.CLOSE_DATE              := CC_REC.CLOSE_DATE;
        V_CCN_ACCOUNTING_ROWTYPE.CURRENCY_CODE           := CC_REC.CURRENCY_CODE;
        V_CCN_ACCOUNTING_ROWTYPE.CURRENCY_CODE_DESC      := CC_REC.CURRENCY_CODE_DESC;
       
       -- LOAD MARKETING DETAILS
       FOR REC IN GET_MARKETING_DETAILS(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.MKT_MISSION               := REC.MKT_MISSION;
              V_CCN_ACCOUNTING_ROWTYPE.MKT_MISSION_DESC          := REC.MKT_MISSION_DESC;
              V_CCN_ACCOUNTING_ROWTYPE.MKT_SALES_FLOOR_SIZE      := REC.MKT_SALES_FLOOR_SIZE;
              V_CCN_ACCOUNTING_ROWTYPE.MKT_SALES_FLOOR_SIZE_DESC := REC.MKT_SALES_FLOOR_SIZE_DESC;
              V_CCN_ACCOUNTING_ROWTYPE.MKT_WAREHOUSE_SIZE        := REC.MKT_WAREHOUSE_SIZE;
              V_CCN_ACCOUNTING_ROWTYPE.MKT_WAREHOUSE_SIZE_DESC   := REC.MKT_WAREHOUSE_SIZE_DESC;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;
        
        -- LOAD HIERARCHY DETAILS
        FOR REC IN GET_HIERARCHY_DETAILS(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.DOMAIN              := REC.DOMAIN;
              V_CCN_ACCOUNTING_ROWTYPE.DOMAIN_NAME         := REC.DOMAIN_NAME;
              V_CCN_ACCOUNTING_ROWTYPE."GROUP"             := REC."GROUP";
              V_CCN_ACCOUNTING_ROWTYPE.GROUP_NAME          := REC.GROUP_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.DIVISION            := REC.DIVISION;
              V_CCN_ACCOUNTING_ROWTYPE.DIVISION_NAME       := REC.DIVISION_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.AREA                := REC.AREA;
              V_CCN_ACCOUNTING_ROWTYPE.AREA_NAME           := REC.AREA_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.DISTRICT            := REC.DISTRICT;
              V_CCN_ACCOUNTING_ROWTYPE.DISTRICT_NAME       := REC.DISTRICT_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.CITY_SALES_MGR      := REC.CITY_SALES_MGR;
              V_CCN_ACCOUNTING_ROWTYPE.CITY_SALES_MGR_NAME := REC.CITY_SALES_MGR_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.ZONE                := REC.ZONE;
              V_CCN_ACCOUNTING_ROWTYPE.ZONE_NAME           := REC.ZONE_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.SPECIAL_ROLES       := REC.SPECIAL_ROLES;
              V_CCN_ACCOUNTING_ROWTYPE.SPECIAL_ROLES_NAME  := REC.SPECIAL_ROLES_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.SGL_DIVISION        := REC.SGL_DIVISION;
              V_CCN_ACCOUNTING_ROWTYPE.SGL_DIVISION_NAME   := REC.SGL_DIVISION_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.COA_DIVISION        := REC.COA_DIVISION;
              V_CCN_ACCOUNTING_ROWTYPE.COA_DIVISION_NAME   := REC.COA_DIVISION_NAME;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
       END LOOP;
       
       -- LOAD MANAGER DETAILS
        FOR REC IN GET_MGR_DETAILS(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.DIV_MGR_NAME       := REC.DIV_MGR_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.AREA_MGR_NAME      := REC.AREA_MGR_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.DISTRICT_MGR_NAME  := REC.DISTRICT_MGR_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.CITY_MGR_NAME      := REC.CITY_MGR_NAME;
              V_CCN_ACCOUNTING_ROWTYPE.CC_MGR_NAME        := REC.CC_MGR_NAME;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;
        
        -- LOAD STATE DETAILS
        FOR REC IN GET_STATE_CODE(CC_REC.COST_CENTER_CODE) LOOP
           BEGIN
              V_CCN_ACCOUNTING_ROWTYPE.STATE_CODE           := REC.STATE_CODE;
              V_CCN_ACCOUNTING_ROWTYPE.STATE_DESCRIPTION    := REC.STATE_CODE_DESCRIPTION;
              V_CCN_ACCOUNTING_ROWTYPE.PROVINCE_CODE        := REC.PROVINCE_CODE;
              V_CCN_ACCOUNTING_ROWTYPE.PROVINCE_DESCRIPTION := REC.PROVINCE_CODE_DESCRIPTION;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;
        
        V_CCN_ACCOUNTING_ROWTYPE.LOAD_DATE := IN_DATE; 
        -- INSERT INTO CCN_ACCOUNTING_TBL
        INSERT INTO CCN_ACCOUNTING_TBL VALUES V_CCN_ACCOUNTING_ROWTYPE;
        
        --COMMIT LOGIC
        V_COUNT := V_COUNT + 1;
        IF V_COUNT = 1000 THEN
            COMMIT;
            V_COUNT := 0;
        END IF;
    END LOOP;
    
    COMMIT;
EXCEPTION 
    WHEN OTHERS THEN
       DBMS_OUTPUT.PUT_LINE('FAILED TO LOAD CCN APPLICATION TABLE FOR MONTH '||to_char(SYSDATE,'MONTH'));
       DBMS_OUTPUT.PUT_LINE(SQLCODE || SUBSTR(SQLERRM, 1, 500)||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
END LOAD_CCN_ACCOUNTING_TABLE;

PROCEDURE GEN_CCN_ACCOUNTING_REPORT
/****************************************************************************** 
This PROCEDURE is calls columns from CCN_ACCOUNTING_TBL and generate CLOB for
calling MAIL_PKG. 

created : 06/16/2017 axt754 -- CCN Project Team

******************************************************************************/
      IS
   V_CLOB           CLOB;
   V_CLOB_REC       CLOB;
   V_LOAD_DATE      DATE;
BEGIN

    
    V_CLOB :=  'COST_CENTER_CODE'||
             ',COST_CENTER_NAME'||
             ',CATEGORY'||
             ',CATEGORY_DESC'||
             ',ACQUISITION_CODE'||
             ',ACQUISITION_CODE_DESC'||
             ',STATEMENT_TYPE'||
             ',STATEMENT_TYPE_DESC'||
             ',MISSION_TYPE_CODE'||
             ',MISSION_TYPE_CODE_DESC'||
             ',OPEN_DATE'||
             ',CLOSE_DATE'||
             ',CURRENCY_CODE'||
             ',CURRENCY_CODE_DESC'||
             ',MKT_MISSION'||
             ',MKT_MISSION_DESC'||
             ',MKT_SALES_FLOOR_SIZE'||
             ',MKT_SALES_FLOOR_SIZE_DESC'||
             ',MKT_WAREHOUSE_SIZE'||
             ',MKT_WAREHOUSE_SIZE_DESC'||
             ',STATE_CODE'||
             ',STATE_DESCRIPTION'||
             ',PROVINCE_CODE'||
             ',PROVINCE_DESCRIPTION'||
             ',DOMAIN'||
             ',DOMAIN_NAME'||
             ',GROUP'||
             ',GROUP_NAME'||
             ',DIVISION'||
             ',DIVISION_NAME'||
             ',AREA'||
             ',AREA_NAME'||
             ',DISTRICT'||       
             ',DISTRICT_NAME'||      
             ',CITY_SALES_MGR'||  
             ',CITY_SALES_MGR_NAME'||
             ',ZONE'||
             ',ZONE_NAME'||
             ',SPECIAL_ROLES'|| 
             ',SPECIAL_ROLES_NAME'||
             ',SGL_DIVISION'||
             ',SGL_DIVISION_NAME'||
             ',COA_DIVISION'||
             ',COA_DIVISION_NAME'||
             ',DIV_MGR_NAME'||
             ',AREA_MGR_NAME'||
             ',DISTRICT_MGR_NAME'||
             ',CITY_MGR_NAME'||
             ',CC_MGR_NAME'||CHR(10);
   
   FOR REC IN (SELECT *
                 FROM CCN_ACCOUNTING_TBL
                WHERE LOAD_DATE = (SELECT MAX(LOAD_DATE)
                                     FROM CCN_ACCOUNTING_TBL)) LOOP
                 
                 
       -- Appended '="attribute"', so that if opened in excel the '0' on left side wouldn't be ignored..
                 
       V_CLOB_REC := '="' || REC.COST_CENTER_CODE || '",' ||
                 '"' || REC.COST_CENTER_NAME || '",' ||
                 '"' || REC.CATEGORY || '",' ||
                 '"' || REC.CATEGORY_DESC || '",' ||
                 '"' || NVL(REC.ACQUISITION_CODE,'N/A') || '",' ||
                 '"' || NVL(REC.ACQUISITION_CODE_DESC,'N/A') || '",' ||
                 '"' || NVL(REC.STATEMENT_TYPE,'N/A') || '",' ||
                 '"' || NVL(REC.STATEMENT_TYPE_DESC,'N/A') || '",' ||
                 '"' || NVL(REC.MISSION_TYPE_CODE,'N/A') || '",' ||
                 '"' || NVL(REC.MISSION_TYPE_CODE_DESC,'N/A') || '",' ||
                 '"' || REC.OPEN_DATE || '",' ||
                 '"' || REC.CLOSE_DATE || '",' ||
                 '"' || NVL(REC.CURRENCY_CODE,'N/A') || '",' ||
                 '"' || NVL(REC.CURRENCY_CODE_DESC,'N/A') || '",' ||
                 '"' || NVL(REC.MKT_MISSION,'N/A') || '",' ||
                 '"' || NVL(REC.MKT_MISSION_DESC,'N/A') || '",' ||
                 '"' || NVL(REC.MKT_SALES_FLOOR_SIZE,'N/A') || '",' ||
                 '"' || NVL(REC.MKT_SALES_FLOOR_SIZE_DESC,'N/A') || '",' ||
                 '"' || NVL(REC.MKT_WAREHOUSE_SIZE,'N/A') || '",' ||
                 '"' || NVL(REC.MKT_WAREHOUSE_SIZE_DESC,'N/A') || '",' ||
                 '"' || NVL(REC.STATE_CODE,'N/A') || '",' ||
                 '"' || NVL(REC.STATE_DESCRIPTION,'N/A') || '",' ||
                 '"' || NVL(REC.PROVINCE_CODE,'N/A') || '",' ||
                 '"' || NVL(REC.PROVINCE_DESCRIPTION,'N/A') || '",' ||
                 '="' || NVL(REC.DOMAIN,'N/A') || '",' ||
                 '"' || NVL(REC.DOMAIN_NAME,'N/A') || '",' ||
                 '="' || NVL(REC."GROUP",'N/A') || '",' ||
                 '"' || NVL(REC.GROUP_NAME,'N/A') || '",' ||
                 '="' || NVL(REC.DIVISION,'N/A') || '",' ||
                 '"' || NVL(REC.DIVISION_NAME,'N/A') || '",' ||
                 '="' || NVL(REC.AREA,'N/A') || '",' ||
                 '"' || NVL(REC.AREA_NAME,'N/A') || '",' ||
                 '="' || NVL(REC.DISTRICT,'N/A') || '",' ||
                 '"' || NVL(REC.DISTRICT_NAME,'N/A') || '",' ||
                 '="' || NVL(REC.CITY_SALES_MGR,'N/A') || '",' ||
                 '"' || NVL(REC.CITY_SALES_MGR_NAME,'N/A') || '",' ||
                 '="' || NVL(REC."ZONE",'N/A') || '",' ||
                 '"' || NVL(REC.ZONE_NAME,'N/A') || '",' ||
                 '="' || NVL(REC.SPECIAL_ROLES,'N/A') || '",' ||
                 '"' || NVL(REC.SPECIAL_ROLES_NAME,'N/A') || '",' ||
                 '="' || NVL(REC.SGL_DIVISION,'N/A') || '",' ||
                 '"' || NVL(REC.SGL_DIVISION_NAME,'N/A') || '",' ||
                 '="' || NVL(REC.COA_DIVISION,'N/A') || '",' ||
                 '"' || NVL(REC.COA_DIVISION_NAME,'N/A') || '",' ||
                 '"' || NVL(REC.DIV_MGR_NAME,'N/A') || '",' ||
                 '"' || NVL(REC.AREA_MGR_NAME,'N/A') || '",' ||
                 '"' || NVL(REC.DISTRICT_MGR_NAME,'N/A') || '",' ||
                 '"' || NVL(REC.CITY_MGR_NAME,'N/A') || '",' ||
                 '"' || NVL(REC.CC_MGR_NAME,'N/A') || '"' || CHR(10);
                 
                 V_CLOB := V_CLOB || V_CLOB_REC;
   END LOOP;   

   IF V_CLOB <> EMPTY_CLOB() THEN
         MAIL_PKG.SEND_MAIL('CCN_ACCNT_REPORT',NULL, NULL, V_CLOB);
   END IF;   
   
EXCEPTION 
    WHEN OTHERS THEN
       DBMS_OUTPUT.PUT_LINE('FAILED TO GENERATE CCN APPLICATION VIEW REPORT');
       DBMS_OUTPUT.PUT_LINE(SQLCODE || SUBSTR(SQLERRM, 1, 500)||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);

END GEN_CCN_ACCOUNTING_REPORT;
END CCN_ACCOUNTING_PKG;