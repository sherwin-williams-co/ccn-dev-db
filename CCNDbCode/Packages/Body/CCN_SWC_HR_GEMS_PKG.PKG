create or replace PACKAGE BODY CCN_SWC_HR_GEMS_PKG
/*********************************************************** 
This package has procedures to load the fieldpayroll table
SWC_HR_GENERIC_TB from the view SWC_HR_GENERIC_V

created : 12/05/2014 SXH487 
revisions: 

************************************************************/
AS

PROCEDURE SWC_HR_GENERIC_VIEW_INFO_SP
/**********************************************************
SWC_HR_GENERIC_VIEW_INFO 
   This procedure is for truncating the SWC_HR_GEMS_TB 
   table and pull the updated data from the SWC_HR_GENERIC_VIEW_INFO
   created : 12/04/2014  SXH487
   revisions: 07/20/2015 SXT410 Inserting selected column names that are listed 
              in the SWC_HR_GEMS_TB table.
              08/14/2015 SXH487 Changed code to INSERT any missing data or UPDATE any modified data 
**********************************************************/

is

SQ NUMBER;
SE VARCHAR2(500);
V_COUNT     INTEGER := 0 ;

CURSOR SWC_HR_GEMS_INFO_cur IS 
 SELECT PERSON_ID,
        EMPLOYEE_NUMBER,
        NATIONAL_IDENTIFIER,
        FULL_NAME,
        NICK_NAME,
        LAST_NAME,
        FIRST_NAME,
        MIDDLE_NAME,
        BUSINESS_GROUP_NAME,
        CURRENT_EMPLOYEE_FLAG,
        USER_ID,
        EFFECTIVE_START_DATE,
        EFFECTIVE_END_DATE,
        PERSON_TYPE,
        EMPLOYMENT_CATEGORY,
        EMPLOYMENT_CATEGORY_HYP,
        ASSIGNMENT_STATUS,
        ASSIG_STATS,
        ASSIG_STATUS,
        HOME_EMAIL_ADDRESS,
        EMPLOYEE_EMAIL_ADDRESS,
        ORIGINAL_DATE_OF_HIRE,
        LATEST_HIRE_DATE,
        TERMINATION_DATE,
        ADJUSTED_SERVICE_DATE,
        FLSA_CODE,
        SALARY_BASIS,
        BONUS_PLAN,
        WORK_STATE,
        PERF_REVIEW_DATE,
        WORK_AT_HOME,
        ORG_UNIT,
        ORG_UNIT_NAME,
        DAD_RAD_CODE,
        DAD_DIVISION,
        DAD_AREA,
        DAD_DISTRICT,
        DIVISION,
        COST_CENTER,
        CC_CHANGE_DATE,
        DIVISION_CC,
        PRIME,
        SUB,
        PRIME_SUB,
        JOB_NAME,
        JOB_TITLE,
        JOB_FAMILY,
        JOB_TYPE,
        JOB_LEVEL,
        JOB_FUNCTION,
        JOB_CHANGE_DATE,
        ORGANIZATION,
        LOCATION,
        LOCATION_CHANGE_DATE,
        LOCATION_CODE,
        BROADCAST_DAD,
        ADDRESS_LINE1,
        ADDRESS_LINE2,
        ADDRESS_LINE3,
        CITY,
        STATE_OR_PROVINCE,
        COUNTY,
        POSTAL_CODE,
        COUNTRY,
        WORK_ADDRESS_LINE1,
        WORK_ADDRESS_LINE2,
        WORK_TOWN_CITY,
        WORK_POSTAL_CODE,
        WORK_COUNTRY,
        ADDRESS_START_DATE,
        ADDRESS_END_DATE,
        HOME_PHONE,
        WORK_PHONE,
        WORK_MOBILE,
        CELL_PHONE,
        WORK_FAX,
        SALARY_CHANGE_REASON,
        SALARY,
        ANNUAL_SALARY,
        SALARY_CHANGE_AMOUNT,
        SALARY_CHANGE_PCT,
        SALARY_START_DATE,
        SALARY_END_DATE,
        HR_REP_EMP_NUMBER,
        HR_REP_NAME,
        SUPERVISOR_EMP_NUMBER,
        SUPERVISOR_NAME,
        SUPERVISOR_FIRST_NAME,
        SUPERVISOR_LAST_NAME,
        SUPERVISOR_USER_ID,
        SUPERVISOR_JOB_NAME,
        SUPERVISOR_JOB_TITLE,
        SUPERVISOR_EMAIL_ADDRESS,
        SUPERVISOR_DIVISION,
        SUPERVISOR_COST_CENTER,
        SUPERVISOR_DIVISION_CC,
        SUPERVISOR_PRIME_SUB,
        EMRG_CONTACT_NAME,
        EMRG_CONTACT_PHONE,
        PAY_RATE_HOURLY_OR_BIWEEKLY,
        ANNUAL_SALARY_HYP
 FROM SWC_HR_GENERIC_V ;  

V_ROW_DATA  SWC_HR_GEMS_TB%ROWTYPE;

BEGIN
    FOR SWC_HR_GEMS_INFO_rec IN SWC_HR_GEMS_INFO_cur LOOP
        SAVEPOINT EMP_SYNC;
        BEGIN
            SELECT *
              INTO V_ROW_DATA
              FROM SWC_HR_GEMS_TB
             WHERE EMPLOYEE_NUMBER = SWC_HR_GEMS_INFO_rec.EMPLOYEE_NUMBER;
        EXCEPTION
            WHEN OTHERS THEN
                V_ROW_DATA := NULL;
        END;
        IF V_ROW_DATA.EMPLOYEE_NUMBER IS NULL THEN   
            BEGIN
                INSERT INTO SWC_HR_GEMS_TB VALUES SWC_HR_GEMS_INFO_rec;
            EXCEPTION
                WHEN OTHERS THEN
                    COMMON_TOOLS.LOG_ERROR(SWC_HR_GEMS_INFO_rec.COST_CENTER, 'CCN_SWC_HR_GEMS_INFO.SWC_HR_GENERIC_VIEW_INFO_SP', SQLERRM, SQLCODE);
                    ROLLBACK TO EMP_SYNC;
            END;
        ELSE

          IF NVL(V_ROW_DATA.PERSON_ID,0) <> NVL(SWC_HR_GEMS_INFO_rec.PERSON_ID,0)
            OR NVL(V_ROW_DATA.EMPLOYEE_NUMBER,'X') <> NVL(SWC_HR_GEMS_INFO_rec.EMPLOYEE_NUMBER,'X')
            OR NVL(V_ROW_DATA.NATIONAL_IDENTIFIER,'X') <> NVL(SWC_HR_GEMS_INFO_rec.NATIONAL_IDENTIFIER,'X')
            OR NVL(V_ROW_DATA.FULL_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.FULL_NAME,'X')
            OR NVL(V_ROW_DATA.NICK_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.NICK_NAME,'X')
            OR NVL(V_ROW_DATA.LAST_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.LAST_NAME,'X')
            OR NVL(V_ROW_DATA.FIRST_NAME,'X')<> NVL(SWC_HR_GEMS_INFO_rec.FIRST_NAME,'X')
            OR NVL(V_ROW_DATA.MIDDLE_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.MIDDLE_NAME,'X')
            OR NVL(V_ROW_DATA.BUSINESS_GROUP_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.BUSINESS_GROUP_NAME,'X')
            OR NVL(V_ROW_DATA.CURRENT_EMPLOYEE_FLAG,'X') <> NVL(SWC_HR_GEMS_INFO_rec.CURRENT_EMPLOYEE_FLAG,'X')
            OR NVL(V_ROW_DATA.USER_ID,'X') <> NVL(SWC_HR_GEMS_INFO_rec.USER_ID,'X')
            OR NVL(V_ROW_DATA.EFFECTIVE_START_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.EFFECTIVE_START_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.EFFECTIVE_END_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.EFFECTIVE_END_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.PERSON_TYPE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.PERSON_TYPE,'X')
            OR NVL(V_ROW_DATA.EMPLOYMENT_CATEGORY,'X') <> NVL(SWC_HR_GEMS_INFO_rec.EMPLOYMENT_CATEGORY,'X')
            OR NVL(V_ROW_DATA.EMPLOYMENT_CATEGORY_HYP,'X') <> NVL(SWC_HR_GEMS_INFO_rec.EMPLOYMENT_CATEGORY_HYP,'X')
            OR NVL(V_ROW_DATA.ASSIGNMENT_STATUS,'X') <> NVL(SWC_HR_GEMS_INFO_rec.ASSIGNMENT_STATUS,'X')
            OR NVL(V_ROW_DATA.ASSIG_STATS,'X') <> NVL(SWC_HR_GEMS_INFO_rec.ASSIG_STATS,'X')
            OR NVL(V_ROW_DATA.ASSIG_STATUS,'X') <> NVL(SWC_HR_GEMS_INFO_rec.ASSIG_STATUS,'X')
            OR NVL(V_ROW_DATA.HOME_EMAIL_ADDRESS,'X') <> NVL(SWC_HR_GEMS_INFO_rec.HOME_EMAIL_ADDRESS,'X')
            OR NVL(V_ROW_DATA.EMPLOYEE_EMAIL_ADDRESS,'X') <> NVL(SWC_HR_GEMS_INFO_rec.EMPLOYEE_EMAIL_ADDRESS,'X')
            OR NVL(V_ROW_DATA.ORIGINAL_DATE_OF_HIRE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.ORIGINAL_DATE_OF_HIRE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.LATEST_HIRE_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.LATEST_HIRE_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.TERMINATION_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.TERMINATION_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.ADJUSTED_SERVICE_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.ADJUSTED_SERVICE_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.FLSA_CODE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.FLSA_CODE,'X')
            OR NVL(V_ROW_DATA.SALARY_BASIS,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SALARY_BASIS,'X')
            OR NVL(V_ROW_DATA.BONUS_PLAN,'X') <> NVL(SWC_HR_GEMS_INFO_rec.BONUS_PLAN,'X')
            OR NVL(V_ROW_DATA.WORK_STATE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.WORK_STATE,'X')
            OR NVL(V_ROW_DATA.PERF_REVIEW_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.PERF_REVIEW_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.WORK_AT_HOME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.WORK_AT_HOME,'X')
            OR NVL(V_ROW_DATA.ORG_UNIT,'X') <> NVL(SWC_HR_GEMS_INFO_rec.ORG_UNIT,'X')
            OR NVL(V_ROW_DATA.ORG_UNIT_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.ORG_UNIT_NAME,'X')
            OR NVL(V_ROW_DATA.DAD_RAD_CODE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.DAD_RAD_CODE,'X')
            OR NVL(V_ROW_DATA.DAD_DIVISION,'X') <> NVL(SWC_HR_GEMS_INFO_rec.DAD_DIVISION,'X')
            OR NVL(V_ROW_DATA.DAD_AREA,'X') <> NVL(SWC_HR_GEMS_INFO_rec.DAD_AREA,'X')
            OR NVL(V_ROW_DATA.DAD_DISTRICT,'X') <> NVL(SWC_HR_GEMS_INFO_rec.DAD_DISTRICT,'X')
            OR NVL(V_ROW_DATA.DIVISION,'X') <> NVL(SWC_HR_GEMS_INFO_rec.DIVISION,'X')
            OR NVL(V_ROW_DATA.COST_CENTER,'X') <> NVL(SWC_HR_GEMS_INFO_rec.COST_CENTER,'X')
            OR NVL(V_ROW_DATA.CC_CHANGE_DATE, TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.CC_CHANGE_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.DIVISION_CC,'X') <> NVL(SWC_HR_GEMS_INFO_rec.DIVISION_CC,'X')
            OR NVL(V_ROW_DATA.PRIME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.PRIME,'X')
            OR NVL(V_ROW_DATA.SUB,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUB,'X')
            OR NVL(V_ROW_DATA.PRIME_SUB,'X') <> NVL(SWC_HR_GEMS_INFO_rec.PRIME_SUB,'X')
            OR NVL(V_ROW_DATA.JOB_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.JOB_NAME,'X')
            OR NVL(V_ROW_DATA.JOB_TITLE ,'X') <> NVL(SWC_HR_GEMS_INFO_rec.JOB_TITLE,'X')
            OR NVL(V_ROW_DATA.JOB_FAMILY,'X') <> NVL(SWC_HR_GEMS_INFO_rec.JOB_FAMILY,'X')
            OR NVL(V_ROW_DATA.JOB_TYPE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.JOB_TYPE,'X')
            OR NVL(V_ROW_DATA.JOB_LEVEL,'X') <> NVL(SWC_HR_GEMS_INFO_rec.JOB_LEVEL,'X')
            OR NVL(V_ROW_DATA.JOB_FUNCTION,'X') <> NVL(SWC_HR_GEMS_INFO_rec.JOB_FUNCTION,'X')
            OR NVL(V_ROW_DATA.JOB_CHANGE_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.JOB_CHANGE_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.ORGANIZATION,'X') <> NVL(SWC_HR_GEMS_INFO_rec.ORGANIZATION,'X')
            OR NVL(V_ROW_DATA.LOCATION,'X') <> NVL(SWC_HR_GEMS_INFO_rec.LOCATION,'X')
            OR NVL(V_ROW_DATA.LOCATION_CHANGE_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.LOCATION_CHANGE_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.LOCATION_CODE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.LOCATION_CODE,'X')
            OR NVL(V_ROW_DATA.BROADCAST_DAD,'X') <> NVL(SWC_HR_GEMS_INFO_rec.BROADCAST_DAD,'X')
            OR NVL(V_ROW_DATA.ADDRESS_LINE1,'X') <> NVL(SWC_HR_GEMS_INFO_rec.ADDRESS_LINE1,'X')
            OR NVL(V_ROW_DATA.ADDRESS_LINE2,'X') <> NVL(SWC_HR_GEMS_INFO_rec.ADDRESS_LINE2,'X')
            OR NVL(V_ROW_DATA.ADDRESS_LINE3,'X') <> NVL(SWC_HR_GEMS_INFO_rec.ADDRESS_LINE3,'X')
            OR NVL(V_ROW_DATA.CITY,'X') <> NVL(SWC_HR_GEMS_INFO_rec.CITY,'X')
            OR NVL(V_ROW_DATA.STATE_OR_PROVINCE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.STATE_OR_PROVINCE,'X')
            OR NVL(V_ROW_DATA.COUNTY,'X') <> NVL(SWC_HR_GEMS_INFO_rec.COUNTY,'X')
            OR NVL(V_ROW_DATA.POSTAL_CODE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.POSTAL_CODE,'X')
            OR NVL(V_ROW_DATA.COUNTRY,'X') <> NVL(SWC_HR_GEMS_INFO_rec.COUNTRY,'X')
            OR NVL(V_ROW_DATA.WORK_ADDRESS_LINE1,'X') <> NVL(SWC_HR_GEMS_INFO_rec.WORK_ADDRESS_LINE1,'X')
            OR NVL(V_ROW_DATA.WORK_ADDRESS_LINE2,'X') <> NVL(SWC_HR_GEMS_INFO_rec.WORK_ADDRESS_LINE2,'X')
            OR NVL(V_ROW_DATA.WORK_TOWN_CITY,'X') <> NVL(SWC_HR_GEMS_INFO_rec.WORK_TOWN_CITY,'X')
            OR NVL(V_ROW_DATA.WORK_POSTAL_CODE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.WORK_POSTAL_CODE,'X')
            OR NVL(V_ROW_DATA.WORK_COUNTRY,'X') <> NVL(SWC_HR_GEMS_INFO_rec.WORK_COUNTRY,'X')
            OR NVL(V_ROW_DATA.ADDRESS_START_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.ADDRESS_START_DATE, TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.ADDRESS_END_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.ADDRESS_END_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.HOME_PHONE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.HOME_PHONE,'X')
            OR NVL(V_ROW_DATA.WORK_PHONE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.WORK_PHONE,'X')
            OR NVL(V_ROW_DATA.WORK_MOBILE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.WORK_MOBILE,'X')
            OR NVL(V_ROW_DATA.CELL_PHONE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.CELL_PHONE,'X')
            OR NVL(V_ROW_DATA.WORK_FAX,'X') <> NVL(SWC_HR_GEMS_INFO_rec.WORK_FAX,'X')
            OR NVL(V_ROW_DATA.SALARY_CHANGE_REASON,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SALARY_CHANGE_REASON,'X')
            OR NVL(V_ROW_DATA.SALARY,0) <> NVL(SWC_HR_GEMS_INFO_rec.SALARY,0)
            OR NVL(V_ROW_DATA.ANNUAL_SALARY,0) <> NVL(SWC_HR_GEMS_INFO_rec.ANNUAL_SALARY,0)
            OR NVL(V_ROW_DATA.SALARY_CHANGE_AMOUNT,0) <> NVL(SWC_HR_GEMS_INFO_rec.SALARY_CHANGE_AMOUNT,0)
            OR NVL(V_ROW_DATA.SALARY_CHANGE_PCT,0) <> NVL(SWC_HR_GEMS_INFO_rec.SALARY_CHANGE_PCT,0)
            OR NVL(V_ROW_DATA.SALARY_START_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.SALARY_START_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.SALARY_END_DATE,TRUNC(SYSDATE)) <> NVL(SWC_HR_GEMS_INFO_rec.SALARY_END_DATE,TRUNC(SYSDATE))
            OR NVL(V_ROW_DATA.HR_REP_EMP_NUMBER,'X') <> NVL(SWC_HR_GEMS_INFO_rec.HR_REP_EMP_NUMBER,'X')
            OR NVL(V_ROW_DATA.HR_REP_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.HR_REP_NAME,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_EMP_NUMBER,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_EMP_NUMBER,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_NAME,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_FIRST_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_FIRST_NAME,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_LAST_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_LAST_NAME,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_USER_ID,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_USER_ID,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_JOB_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_JOB_NAME,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_JOB_TITLE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_JOB_TITLE,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_EMAIL_ADDRESS,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_EMAIL_ADDRESS,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_DIVISION,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_DIVISION,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_COST_CENTER,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_COST_CENTER,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_DIVISION_CC,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_DIVISION_CC,'X')
            OR NVL(V_ROW_DATA.SUPERVISOR_PRIME_SUB,'X') <> NVL(SWC_HR_GEMS_INFO_rec.SUPERVISOR_PRIME_SUB,'X')
            OR NVL(V_ROW_DATA.EMRG_CONTACT_NAME,'X') <> NVL(SWC_HR_GEMS_INFO_rec.EMRG_CONTACT_NAME,'X')
            OR NVL(V_ROW_DATA.EMRG_CONTACT_PHONE,'X') <> NVL(SWC_HR_GEMS_INFO_rec.EMRG_CONTACT_PHONE,'X')
            OR NVL(V_ROW_DATA.PAY_RATE_HOURLY_OR_BIWEEKLY,0) <> NVL(SWC_HR_GEMS_INFO_rec.PAY_RATE_HOURLY_OR_BIWEEKLY,0)
            OR NVL(V_ROW_DATA.ANNUAL_SALARY_HYP,0) <> NVL(SWC_HR_GEMS_INFO_rec.ANNUAL_SALARY_HYP,0) THEN
            
                BEGIN
                   UPDATE SWC_HR_GEMS_TB
                      SET ROW = SWC_HR_GEMS_INFO_rec
                    WHERE EMPLOYEE_NUMBER = SWC_HR_GEMS_INFO_rec.EMPLOYEE_NUMBER;
                EXCEPTION
                    WHEN OTHERS THEN
                        COMMON_TOOLS.LOG_ERROR(SWC_HR_GEMS_INFO_rec.COST_CENTER, 'CCN_SWC_HR_GEMS_PKG.SWC_HR_GENERIC_VIEW_INFO_SP', SQLERRM, SQLCODE);
                        ROLLBACK TO EMP_SYNC;
                END;
          END IF;
        END IF;
        IF V_COUNT > 100 THEN
            COMMIT; 
            V_COUNT := 0;
        END IF; 
        V_COUNT := V_COUNT + 1;
    END LOOP;
    
    COMMIT;

END SWC_HR_GENERIC_VIEW_INFO_SP;

END CCN_SWC_HR_GEMS_PKG;