CREATE OR REPLACE PACKAGE body OTHER_TAPI
/*********************************************************** 
This is the Package Body
created : 01/25/2012 tal CCN project
updated : 08/24/2012 tal CCN project
************************************************************/
IS
  -- insert
PROCEDURE ins(
    IN_CATEGORY         IN OTHER.CATEGORY%type ,
    IN_COST_CENTER_CODE IN OTHER.COST_CENTER_CODE%type )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  INSERT
  INTO OTHER
    (
      CATEGORY ,
      COST_CENTER_CODE
    )
    VALUES
    (
      IN_CATEGORY ,
      IN_COST_CENTER_CODE
    );

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'OTHER Insert');

END;

-- update
PROCEDURE upd
  (
    IN_CATEGORY         IN OTHER.CATEGORY%type ,
    IN_COST_CENTER_CODE IN OTHER.COST_CENTER_CODE%type
  )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  UPDATE OTHER
  SET CATEGORY           = IN_CATEGORY
  WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'OTHER Update');

END;

-- del
PROCEDURE del(
    IN_COST_CENTER_CODE IN OTHER.COST_CENTER_CODE%type )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  DELETE FROM OTHER WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'OTHER Delete');

END;

END OTHER_tapi;

