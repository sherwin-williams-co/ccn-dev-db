create or replace PACKAGE BODY POS_XML_IFACE_FILE AS 

/*********************************************************** 
This package will hold all procedures/functions used to process 
POS_XML_DATA into Local table and PSO_XML_FILE generation

created : 09/21/2015 dxv848 CCN project
revisions: 

************************************************************/


PROCEDURE LOAD_POS_XML_IFACE_LOCAL 
/****************************************************************************
LOAD_POS_XML_IFACE_LOCAL
This procedure is used to load the local table POS_XML_IFACE_LOCAL from the table
POS_XML_IFACE
created : 09/01/2015 AXK326 CCN Project....
changed :
*****************************************************************************/
AS

CURSOR LOAD_POS_CUR IS
   SELECT GUID  ,               
          QUEUE_NAME ,                      
          BROKER_NAME  ,                       
          MESSAGE_ID,                            
          PUT_TIME   ,           
          XML_DOCUMENT ,                 
          SHRED_TS        ,      
          CREATED_TS  ,
          STATUS 
     FROM POS_XML_IFACE PF,
          XMLTABLE('/CCN/header/tranId'
	                PASSING PF.XML_DOCUMENT
                  COLUMNS VALUE VARCHAR2(20) PATH 'text()')X
    WHERE X.VALUE = '13' AND TRUNC(PF.CREATED_TS) = TRUNC(SYSDATE)-1;
   V_COUNT  NUMBER := 0;
   V_TCOUNT NUMBER := 0;
BEGIN
     FOR LOAD_POS_REC IN LOAD_POS_CUR
     LOOP
        BEGIN
           INSERT INTO POS_XML_IFACE_LOCAL VALUES LOAD_POS_REC;
           V_COUNT   := V_COUNT + 1;
           IF V_COUNT > 100 THEN
              COMMIT;
              V_COUNT := 0;
           END IF;
           V_TCOUNT := V_TCOUNT + 1;
        EXCEPTION
            WHEN others THEN
               DBMS_OUTPUT.PUT_LINE('error read message GUID ' || LOAD_POS_REC.GUID ||' error '|| substr(SQLERRM,1,500));
        END;
     END LOOP;
COMMIT;
DBMS_OUTPUT.PUT_LINE('Total rows inserted ' || V_TCOUNT);
DBMS_OUTPUT.PUT_LINE('0');  
EXCEPTION
   WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('FAILED ' || SQLCODE || ' ' || substr(SQLERRM,1,500));

  
END LOAD_POS_XML_IFACE_LOCAL ;


PROCEDURE CREATE_POS_FILE
/***************************************************************************** 
        CREATE_POS_FILE 

THIS PROCEDURE WILL BUILD THE US  AUTOMOTIVE DAILY STORE DRAFT ISSUES, VOIDS, STOP PAYS, 
AND REMOVE STOP PAYS 

Created : 09/02/2015 AXK326 CCN Project Team....
Modified:
*****************************************************************************/ 
AS
  v_out_clob    clob;
  v_clob        clob;
  v_count       integer := 0 ;
  
  path        	  varchar2(50) := 'CCN_LOAD_FILES'; -- directory created in Oracle database
  filename        varchar2(50) := 'POS_FILE_';
  stamp       	  varchar2(50) := replace(to_char(trunc(sysdate),'dd-Mon-yyyy'),'-', ''); -- used to create timestamp for data file
  output_file 	  utl_file.file_type;
  
CURSOR POS_CUR IS
SELECT X1.acctNbr,
       X1.canceled,
       X1.ctlDate,
       X1.docNbr,
       X1.xmlDocId,
       X1.tranDate,
       X1.tranTimestamp,
       X1.empNbr,
       X1.glAcctNbr,
       X1.gstFlag,
       X1.gstFlag2,
       X1.jobNbr,
       X1.manFlag,
       X1.origTerm,
       X1.origTran,
       X1.othStore,
       X1.proShow,
       X1.recoveryFlag,
       X1.rsnCd,
       X1.storeNbr,
       X1.suspTran,
       X1.termCtlNbr,
       X1.termNbr,
       X1.terrForce,
       X1.tranGuid,
       X1.tranId,
       X1.tranCode,
       X1.tranNbr,
       X1.tranTotal,
       X1.trainingFlag,
       X1.versionId,
       X1.voidCd,
       X1.xmlVersion,
       X1.billAddr1,
       X1.billCity,
       X1.billNm,
       X1.billPhone,
       X1.billSt,
       X1.billZip,
       X1.ci,
       X1.costDisplayed,
       X1.doEmail,
       X1.invoiceEdi,
       X1.empNm,
       X1.formOption,
       X1.lang,
       X1.newAcct,
       X1.printPack,
       X1.storeAddr,
       X1.storeCity,
       X1.storeCoNm,
       X1.storeContact,
       X1.storeNm,
       X1.storePhone,
       X1.storeSt,
       X1.storeZip,
       X1.runCycle,
       X1.bookPeriod,
       X1.division,
       X1.area,
       X1.district,
       X2.payLines,
       X3.guid,
       X3.amt,
       X3.fopTxt,
       X3.recType,
       X3.seqNbr,
       X2.installers
  FROM POS_XML_IFACE_LOCAL PF,
       XMLTABLE('/CCN/header'
	              PASSING PF.XML_DOCUMENT
                                COLUMNS  
                                acctNbr VARCHAR2(15) PATH 'acctNbr',
                                canceled VARCHAR2(15) PATH 'canceled',
                                ctlDate VARCHAR2(15) PATH 'ctlDate',
                                docNbr VARCHAR2(15) PATH 'docNbr',
                                xmlDocId VARCHAR2(15) PATH 'xmlDocId',
                                tranDate VARCHAR2(15) PATH 'tranDate',
                                tranTimestamp VARCHAR2(40) PATH 'tranTimestamp',
                                empNbr VARCHAR2(15) PATH 'empNbr',
                                glAcctNbr VARCHAR2(15) PATH 'glAcctNbr',
                                gstFlag VARCHAR2(15) PATH 'gstFlag',
                                gstFlag2 VARCHAR2(15) PATH 'gstFlag2',
                                jobNbr VARCHAR2(15) PATH 'jobNbr',
                                manFlag VARCHAR2(15) PATH 'manFlag',
                                origTerm VARCHAR2(15) PATH 'origTerm',
                                origTran VARCHAR2(15) PATH 'origTran',
                                othStore VARCHAR2(15) PATH 'othStore',
                                proShow VARCHAR2(15) PATH 'proShow',
                                recoveryFlag VARCHAR2(15) PATH 'recoveryFlag',
                                rsnCd VARCHAR2(15) PATH 'rsnCd',
                                storeNbr VARCHAR2(15) PATH 'storeNbr',
                                suspTran VARCHAR2(15) PATH 'suspTran',
                                termCtlNbr VARCHAR2(15) PATH 'termCtlNbr',
                                termNbr VARCHAR2(15) PATH 'termNbr',
                                terrForce VARCHAR2(15) PATH 'terrForce',
                                tranGuid VARCHAR2(40) PATH 'tranGuid',
                                tranId VARCHAR2(15) PATH 'tranId',
                                tranCode VARCHAR2(15) PATH 'tranCode',
                                tranNbr VARCHAR2(15) PATH 'tranNbr',
                                tranTotal VARCHAR2(15) PATH 'tranTotal',
                                trainingFlag VARCHAR2(15) PATH 'trainingFlag',
                                versionId VARCHAR2(15) PATH 'versionId',
                                voidCd VARCHAR2(15) PATH 'voidCd',
                                xmlVersion VARCHAR2(15) PATH 'xmlVersion',
                                billAddr1 VARCHAR2(30) PATH 'billAddr1',
                                billCity VARCHAR2(30) PATH 'billCity',
                                billNm VARCHAR2(40) PATH 'billNm',
                                billPhone VARCHAR2(15) PATH 'billPhone',
                                billSt VARCHAR2(15) PATH 'billSt',
                                billZip VARCHAR2(15) PATH 'billZip',
                                ci VARCHAR2(15) PATH 'ci',
                                costDisplayed VARCHAR2(15) PATH 'costDisplayed',
                                doEmail VARCHAR2(15) PATH 'doEmail',
                                invoiceEdi VARCHAR2(15) PATH 'invoiceEdi',
                                empNm VARCHAR2(30) PATH 'empNm',
                                formOption VARCHAR2(15) PATH 'formOption',
                                lang VARCHAR2(15) PATH 'lang',
                                newAcct VARCHAR2(15) PATH 'newAcct',
                                printPack VARCHAR2(15) PATH 'printPack',
                                storeAddr VARCHAR2(40) PATH 'storeAddr',
                                storeCity VARCHAR2(30) PATH 'storeCity',
                                storeCoNm VARCHAR2(30) PATH 'storeCoNm',
                                storeContact VARCHAR2(30) PATH 'storeContact',
                                storeNm VARCHAR2(30) PATH 'storeNm',
                                storePhone VARCHAR2(15) PATH 'storePhone',
                                storeSt VARCHAR2(15) PATH 'storeSt',
                                storeZip VARCHAR2(15) PATH 'storeZip',
                                runCycle VARCHAR2(15) PATH 'runCycle',
                                bookPeriod VARCHAR2(15) PATH 'bookPeriod',
                                division VARCHAR2(15) PATH 'division',
                                area VARCHAR2(15) PATH 'area',
                                district VARCHAR2(15) PATH 'district')X1,   
				XMLTABLE('/CCN/detail'
	              PASSING PF.XML_DOCUMENT
                                 COLUMNS
                                 payLines VARCHAR2(15) PATH 'payLines',
                                 installers varchar2(15) path 'installers',
                                 formOfPayment xmltype path 'formsOfPayment/formOfPayment')X2,
        XMLTable('formOfPayment'
                 PASSING X2.formOfPayment
                                  COLUMNS
                                  guid varchar2(40) path 'guid',
                                  amt VARCHAR2(15) PATH 'amt',
                                  fopTxt VARCHAR2(40) PATH 'fopTxt',
                                  recType VARCHAR2(15) PATH 'recType',
                                  seqNbr VARCHAR2(15) PATH 'seqNbr')X3
 WHERE TRUNC(PF.CREATED_TS) = TRUNC(SYSDATE)-1;

  
BEGIN
     output_file := utl_file.fopen ( path
                                   -- ,filename || stamp || filetype
                                    ,filename || stamp
                                    , 'w' --binary
                                    , 32767); 
     
		FOR POS_REC IN POS_CUR LOOP
            v_count := v_count + 1;
			V_OUT_CLOB := RPAD(POS_REC.acctNbr, 15, ' ') 
						  || RPAD(POS_REC.canceled, 15, ' ') 
						  || RPAD(POS_REC.ctlDate, 15, ' ') 
						  || RPAD(POS_REC.docNbr, 15, ' ') 
						  || RPAD(POS_REC.xmlDocId, 15, ' ') 
						  || RPAD(POS_REC.tranDate, 15, ' ') 
						  || RPAD(POS_REC.tranTimestamp, 40, ' ') 
						  || RPAD(POS_REC.empNbr, 15, ' ') 
						  || RPAD(POS_REC.glAcctNbr, 15, ' ') 
						  || RPAD(POS_REC.gstFlag, 15, ' ') 
						  || RPAD(POS_REC.gstFlag2, 15, ' ') 
						  || RPAD(POS_REC.jobNbr, 15, ' ') 
						  || RPAD(POS_REC.manFlag, 15, ' ') 
						  || RPAD(POS_REC.origTerm, 15, ' ') 
						  || RPAD(POS_REC.origTran, 15, ' ') 
						  || RPAD(POS_REC.othStore, 15, ' ') 
						  || RPAD(POS_REC.proShow, 15, ' ') 
						  || RPAD(POS_REC.recoveryFlag, 15, ' ') 
						  || RPAD(POS_REC.rsnCd, 15, ' ') 
						  || RPAD(POS_REC.storeNbr, 15, ' ') 
						  || RPAD(POS_REC.suspTran, 15, ' ') 
						  || RPAD(POS_REC.termCtlNbr, 15, ' ') 
						  || RPAD(POS_REC.termNbr, 15, ' ') 
						  || RPAD(POS_REC.terrForce, 15, ' ') 
						  || RPAD(POS_REC.tranGuid, 40, ' ') 
						  || RPAD(POS_REC.tranId, 15, ' ') 
						  || RPAD(POS_REC.tranCode, 15, ' ') 
						  || RPAD(POS_REC.tranNbr, 15, ' ') 
						  || RPAD(POS_REC.tranTotal, 15, ' ') 
						  || RPAD(POS_REC.trainingFlag, 15, ' ') 
						  || RPAD(POS_REC.versionId, 15, ' ') 
						  || RPAD(POS_REC.voidCd, 15, ' ') 
						  || RPAD(POS_REC.xmlVersion, 15, ' ') 
						  || RPAD(POS_REC.billAddr1, 30, ' ') 
						  || RPAD(POS_REC.billCity, 30, ' ') 
						  || RPAD(POS_REC.billNm, 40, ' ') 
						  || RPAD(POS_REC.billPhone, 15, ' ') 
						  || RPAD(POS_REC.billSt, 15, ' ') 
						  || RPAD(POS_REC.billZip, 15, ' ') 
						  || RPAD(POS_REC.ci, 15, ' ') 
						  || RPAD(POS_REC.costDisplayed, 15, ' ') 
						  || RPAD(POS_REC.doEmail, 15, ' ') 
						  || RPAD(POS_REC.invoiceEdi, 15, ' ') 
						  || RPAD(POS_REC.empNm, 40, ' ') 
						  || RPAD(POS_REC.formOption, 15, ' ') 
						  || RPAD(POS_REC.lang, 15, ' ') 
						  || RPAD(POS_REC.newAcct, 15, ' ') 
						  || RPAD(POS_REC.printPack, 15, ' ') 
						  || RPAD(POS_REC.storeAddr, 40, ' ') 
						  || RPAD(POS_REC.storeCity, 30, ' ') 
						  || RPAD(POS_REC.storeCoNm, 30, ' ') 
						  || RPAD(POS_REC.storeContact, 40, ' ') 
						  || RPAD(POS_REC.storeNm, 40, ' ') 
						  || RPAD(POS_REC.storePhone, 15, ' ') 
						  || RPAD(POS_REC.storeSt, 15, ' ') 
						  || RPAD(POS_REC.storeZip, 15, ' ')  
						  || RPAD(POS_REC.runCycle, 15, ' ') 
						  || RPAD(POS_REC.bookPeriod, 15, ' ') 
						  || RPAD(POS_REC.division, 15, ' ') 
						  || RPAD(POS_REC.area, 15, ' ') 
						  || RPAD(POS_REC.district, 15, ' ') 
						  || RPAD(NVL(POS_REC.payLines, '               '), 15, ' ') 
						  || RPAD(POS_REC.guid, 40, ' ') 
						  || RPAD(NVL(POS_REC.amt, '               '), 15, ' ') 
						  || RPAD(POS_REC.fopTxt, 40, ' ') 
						  || RPAD(POS_REC.recType, 15, ' ') 
						  || RPAD(POS_REC.seqNbr, 15, ' ') 
						  || RPAD(NVL(POS_REC.installers, '               '), 15, ' ');
              
              IF v_count = 1 THEN
                UTL_FILE.PUT_LINE(OUTPUT_FILE, V_OUT_CLOB, TRUE);
                V_OUT_CLOB := NULL;
                v_count := 0;
              END IF;
		END LOOP;

	utl_file.fclose(output_file);
 
 EXCEPTION 
   WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('FAILED ' || SQLCODE || ' ' || substr(SQLERRM,1,500));

END CREATE_POS_FILE;

END POS_XML_IFACE_FILE;