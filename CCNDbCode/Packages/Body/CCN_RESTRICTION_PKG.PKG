create or replace PACKAGE BODY            "CCN_RESTRICTION_PKG" AS 
 /******************************************************************************
 This package body will contain the core procedures to handle locking/restriction of 
 multiple users accessing same objects at the same time
 
 Created On : 04/15/2014
 Created By : CCN Project Team - jcv517
 ******************************************************************************/
  
 FUNCTION IS_OBJECT_RESTRICTED(
 /******************************************************************************
 IS_OBJECT_RESTRICTED
 
 This procedure will check if there is a restriction already placed on passed in object
 Returns USER_ID who is locking the object if restricted
 Returns NULL if NOT restricted
 
 IN_OBJECT_NAME - Name of the Object on which restriction needs to be checked
 
 ******************************************************************************/
 IN_OBJECT_NAME   IN     CCN_RESTRICTION.OBJECT_NAME%TYPE) RETURN BOOLEAN
 IS
     V_IS_OBJECT_RESTRICTED BOOLEAN := FALSE;
 BEGIN
 
     FOR rec IN (SELECT A.*,
                        SYS_CONTEXT('USERENV', 'SID', 15) OS_SID
                   FROM CCN_RESTRICTION A
                  WHERE OBJECT_NAME = IN_OBJECT_NAME
                    AND RESTRICTION_TERM_DATE IS NULL) LOOP
        IF rec.SESSION_ID <> rec.OS_SID THEN
            V_IS_OBJECT_RESTRICTED := TRUE;
            EXIT;
        END IF;
    END LOOP;

    RETURN V_IS_OBJECT_RESTRICTED;
 
 EXCEPTION 
     WHEN OTHERS THEN
         RETURN NULL;
 END IS_OBJECT_RESTRICTED;
 
 PROCEDURE RESTRICT_OBJECT(
 /******************************************************************************
 RESTRICT_OBJECT
 
 This procedure will place restriction on passed object
 
 IN_OBJECT_NAME     - Name of the Object on which restriction needs to be placed
 
 ******************************************************************************/
 IN_OBJECT_NAME     IN       CCN_RESTRICTION.OBJECT_NAME%TYPE)
 IS
     PRAGMA AUTONOMOUS_TRANSACTION;
     V_COUNT                NUMBER := 0;
 BEGIN

    BEGIN
        SELECT COUNT(*)
          INTO V_COUNT
          FROM CCN_RESTRICTION
         WHERE OBJECT_NAME         = IN_OBJECT_NAME
           AND SESSION_ID          = SYS_CONTEXT('USERENV', 'SID', 15)
           AND RESTRICTION_TERM_DATE IS NULL;
    EXCEPTION
        WHEN OTHERS THEN
            V_COUNT := 0;
    END;
    IF V_COUNT = 0 THEN
        INSERT INTO CCN_RESTRICTION VALUES(CCN_RESTRICTION_SEQ.NEXTVAL,
                                           IN_OBJECT_NAME,
                                           SYSDATE,
                                           NULL, 
                                           SYS_CONTEXT('USERENV', 'SID', 15));
    END IF;

    COMMIT;

 EXCEPTION 
     WHEN OTHERS THEN
         RAISE;
 END RESTRICT_OBJECT;
 
 PROCEDURE RELEASE_OBJECT(
 /******************************************************************************
 RELEASE_OBJECT
 
 This procedure will release the restriction on passed object based on passed 
 restriction ID
 
 IN_RESTRICTION_ID     - Restriction ID that needs to be released
 
 ******************************************************************************/
 IN_OBJECT_NAME     IN       CCN_RESTRICTION.OBJECT_NAME%TYPE)
 IS
      PRAGMA AUTONOMOUS_TRANSACTION;
 BEGIN
 
     UPDATE CCN_RESTRICTION
        SET RESTRICTION_TERM_DATE = SYSDATE
      WHERE OBJECT_NAME         = IN_OBJECT_NAME
        AND SESSION_ID          = SYS_CONTEXT('USERENV', 'SID', 15)
        AND RESTRICTION_TERM_DATE IS NULL;
        
    COMMIT;
 
 EXCEPTION 
     WHEN OTHERS THEN
        RAISE;
 END RELEASE_OBJECT;
 
 PROCEDURE RELEASE_TIMED_OUT_OBJECTS(
 /******************************************************************************
 RELEASE_TIMED_OUT_OBJECTS
 
 This procedure will release the restriction on all objects that are timed out
 
 IN_TIME_OUT_MINUTES - passed Number of Minutes which will be used to expire restricted objects
 
 ******************************************************************************/
 IN_TIME_OUT_MINUTES     IN       NUMBER)
 IS
      PRAGMA AUTONOMOUS_TRANSACTION; 
 BEGIN
 
     UPDATE CCN_RESTRICTION
        SET RESTRICTION_TERM_DATE = SYSDATE
      WHERE ((SYSDATE - RESTRICTION_EFFECTIVE_DATE) * 24 * 60) > IN_TIME_OUT_MINUTES
        AND RESTRICTION_TERM_DATE IS NULL;
 
     COMMIT;
 EXCEPTION 
     WHEN OTHERS THEN
        RAISE;
 END RELEASE_TIMED_OUT_OBJECTS;
 
  END CCN_RESTRICTION_PKG;
  
  