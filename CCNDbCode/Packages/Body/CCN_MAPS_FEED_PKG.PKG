create or replace PACKAGE BODY CCN_MAPS_FEED_PKG AS 
/****************************************************************************** 
This package is used generate xml file for geographic information and research team 

created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/

PROCEDURE GENERATE_CSV_FILE_CONTENT(
/****************************************************************************** 
This PROCEDURE generates the csv file content for store cost centers

created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
                rec             IN      cc_map_feed_rec,
                OUT_XML_AS_CLOB OUT    CLOB)
AS
      v_clob CLOB;
BEGIN
                
    v_clob :=   '="' || REC.COST_CENTER_CODE || '",' ||
                '"'  || REC.COST_CENTER_NAME || '",' ||
                '"'  || NVL(REC.STATEMENT_TYPE,'N/A') || '",' ||
                '"'  || NVL(REC.STATEMENT_TYPE_DESC,'N/A') || '",' ||
                '="' || NVL(REC.MISSION_TYPE_CODE,'N/A') || '",' ||
                '"'  || NVL(REC.MISSION_TYPE_CODE_DESC,'N/A') || '",' ||
                '="' || NVL(REC.OPEN_DATE,'N/A') || '",' ||
                '="' || NVL(REC.MOVE_DATE,'N/A') || '",' ||
                '"'  || NVL(REC.CC_TEMP_CLOSED_CD,'N/A') || '",' ||
                '"'  || NVL(REC.CC_TEMP_CLOSED_CD_DESC,'N/A') || '",' ||
                '"'  || NVL(REC.LEASE_OWN_CODE,'N/A') || '",' ||
                '"'  || NVL(REC.LEASE_OWN_CODE_DESC,'N/A') || '",' ||              
                '"'  || NVL(REC.CIW_COLOR_CONSULTANT_TYPE_DESC,'N/A') || '",' ||
                '"'  || NVL(REC.HCR_COLOR_CONSULTANT_TYPE_DESC,'N/A') || '",' ||
                '"'  || NVL(REC.HOA_COLOR_CONSULTANT_TYPE_DESC,'N/A') || '",' ||
                '"'  || NVL(REC.ISR_COLOR_CONSULTANT_TYPE_DESC,'N/A') || '",' ||
                '"'  || NVL(REC.PCC_COLOR_CONSULTANT_TYPE_DESC,'N/A') || '",' ||
                '"'  || NVL(REC.PCL_COLOR_CONSULTANT_TYPE_DESC,'N/A') || '",' ||
                '"'  || NVL(REC.SWD_COLOR_CONSULTANT_TYPE_DESC,'N/A') || '",' ||
                '="' || NVL(REC.MKT_MISSION,'N/A') || '",' ||
                '"'  || NVL(REC.MKT_MISSION_DESC,'N/A') || '",' ||
                '="' || NVL(REC.MKT_SALES_FLOOR_SIZE,'N/A') || '",' ||
                '"'  || NVL(REC.MKT_SALES_FLOOR_SIZE_DESC,'N/A') || '",' ||
                '="' || NVL(REC.MKT_WAREHOUSE_SIZE,'N/A') || '",' ||
                '"'  || NVL(REC.MKT_WAREHOUSE_SIZE_DESC,'N/A') || '",' ||
                '="' || NVL(REC.MKT_REAL_ESTATE_SETTING,'N/A') || '",' ||
                '"'  || NVL(REC.MKT_REAL_ESTATE_SETTING_DESC,'N/A') || '",' ||
                '="' || NVL(REC.DOMAIN,'N/A') || '",' ||
                '="' || NVL(REC.DOMAIN_NAME,'N/A') || '",' ||
                '="' || NVL(REC."GROUP",'N/A') || '",' ||
                '="' || NVL(REC.GROUP_NAME,'N/A') || '",' ||
                '="' || NVL(REC.DIVISION,'N/A') || '",' ||
                '="' || NVL(REC.DIVISION_NAME,'N/A') || '",' ||
                '="' || NVL(REC.AREA,'N/A') || '",' ||
                '="' || NVL(REC.AREA_NAME,'N/A') || '",' ||
                '="' || NVL(REC.HIR_DISTRICT,'N/A') || '",' ||
                '="' || NVL(REC.HIR_DISTRICT_NAME,'N/A') || '",' ||
                '="' || NVL(REC.CITY_SALES_MANAGER,'N/A') || '",' ||
                '="' || NVL(REC.CITY_SALES_MANAGER_NAME,'N/A') || '",' ||
                '="' || NVL(REC.PHONE_AREA_CODE,'N/A') || '",' ||
                '="' || NVL(REC.PHONE_NUMBER,'N/A') || '",' ;
                
                
      OUT_XML_AS_CLOB := v_clob;
EXCEPTION 
    WHEN OTHERS THEN
       COMMON_TOOLS.LOG_ERROR(rec.COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.GENERATE_CSV_FILE_CONTENT' , SQLERRM, SQLCODE);
    RAISE;

END GENERATE_CSV_FILE_CONTENT;


PROCEDURE GENERATE_MAPS_CSV_FILE
/****************************************************************************** 
This PROCEDURE generates the xml file for store cost centers

created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
IS 

   CURSOR GET_COST_CENTER_DETAILS IS 
        SELECT cost_center_code 
             ,cost_center_name             
             ,statement_type
             ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('STATEMENT_TYPE','COD',STATEMENT_TYPE) statement_type_desc
             ,mission_type_code
             ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('MISSION_TYPE_CODE','COD',MISSION_TYPE_CODE) mission_type_code_desc
             ,TO_CHAR(open_date,'MM-DD-YYYY') AS open_date
             ,TO_CHAR(move_date,'MM-DD-YYYY') AS  move_date
             ,cc_temp_closed_cd
             ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('CC_TEMP_CLOSED_CD','COD',CC_TEMP_CLOSED_CD) cc_temp_closed_cd_desc
             ,lease_own_code
             ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('LEASE_OWN_CODE','COD',LEASE_OWN_CODE) lease_own_code_desc
             -- ,extract(COLOR_CONSULTANT_TYPE,'/PROGRAM_TYPE').getStringVal() as color_consultant_type
            ,REGEXP_REPLACE (cc.COLOR_CONSULTANT_TYPE.extract('/PROGRAM_TYPE/COLOR_CONSULTANT_TYPE/text()').getStringVal(), '(.{3})','\1,') AS color_consultant_type
             ,country_code
         FROM cost_center cc WHERE category = 'S' 
         AND  NVL(open_date,SYSDATE) <> '01-JAN-2099'          
         AND  close_date IS NULL;
        
    CURSOR GET_MARKETING_DETAILS(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT mkt_mission
              ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('MKT_MISSION','COD',MKT_MISSION) mkt_mission_desc
              ,mkt_sales_floor_size
              ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('MKT_SALES_FLOOR_SIZE','COD',MKT_SALES_FLOOR_SIZE) mkt_sales_floor_size_desc
              ,mkt_warehouse_size
              ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('MKT_WAREHOUSE_SIZE','COD',MKT_WAREHOUSE_SIZE) mkt_warehouse_size_desc
              ,mkt_real_estate_setting
              ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('MKT_REAL_ESTATE_SETTING','COD',MKT_REAL_ESTATE_SETTING) mkt_real_estate_setting_desc              
              ,"CATEGORY"
          FROM marketing
         WHERE cost_center_code = IN_COST_CENTER_CODE;
         
    CURSOR GET_HIERARCHY_DETAILS(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT  DISTINCT
                h.hrchy_hdr_name
               ,cc.cost_center_code
               ,h.domain_val domain
               ,h.group_val "GROUP"
               ,h.division_val division
               ,h.area_val area
               ,h.district_val district
               ,h.city_sales_manager_val city_sales_manager
               ,h.domain_val_name domain_name
               ,h.group_val_name group_name
               ,h.division_val_name division_name
               ,nvl2(h.area_val,h.area_val_name,NULL) area_name
               ,h.district_val_name district_name
               ,h.city_sales_manager_val_name city_sales_manager_name
               ,cc.cost_center_name
            FROM cost_center CC,
           (WITH T AS (SELECT hdesc.hrchy_hdr_lvl_desc description,
                          hd.hrchy_dtl_curr_row_val cost_center_code,
                          hd.hrchy_hdr_name,
                          hd.hrchy_dtl_eff_date,
                          hd.hrchy_dtl_exp_date,
                          hd.hrchy_dtl_curr_lvl_val,
                          SUBSTR(hd.hrchy_dtl_curr_lvl_val, 1 + hdesc.sum_val - hdesc.lvl_value_size, hdesc.lvl_value_size) val,
                          (SELECT hrchy_dtl_desc
                             FROM hierarchy_detail
                            WHERE hrchy_dtl_curr_lvl_val = SUBSTR(hd.hrchy_dtl_curr_lvl_val, 1, hdesc.sum_val)
                              AND hrchy_hdr_name  = hdesc.hrchy_hdr_name
                              AND hrchy_dtl_level = hdesc.hrchy_hdr_lvl_nbr
                              AND ROWNUM < 2)  val_name
                     FROM hierarchy_detail hd,
                          hierarchy_header hh,
                          (SELECT hrchy_hdr_name,
                                  hrchy_hdr_lvl_nbr,
                                  hrchy_hdr_lvl_desc,
                                  lvl_value_size,
                                  SUM(lvl_value_size) OVER (PARTITION BY hrchy_hdr_name ORDER BY hrchy_hdr_lvl_nbr) sum_val
                             FROM hierarchy_description) Hdesc
                    WHERE hd.hrchy_hdr_name  = hdesc.hrchy_hdr_name
                      AND hd.hrchy_hdr_name  = hh.hrchy_hdr_name
                      AND hd.hrchy_dtl_level = hh.hrchy_hdr_levels
                      AND hd.hrchy_hdr_name = 'GLOBAL_HIERARCHY'
                      AND NVL(hd.hrchy_dtl_next_lvl_val, '~~~') = '~~~')
             SELECT *
               FROM T
                    PIVOT 
                    (MAX(val) AS val,
                     MAX(val_name) AS val_name FOR (description) IN ('Domain' AS DOMAIN,
                                                                     'Group' AS "GROUP",
                                                                     'Division' AS DIVISION,
                                                                     'Area' AS AREA,
                                                                     'District' AS DISTRICT,
                                                                     'City/Sales Manager' AS CITY_SALES_MANAGER
                                                                      ))) H

               WHERE cc.cost_center_code = h.cost_center_code(+)
                     AND cc.cost_center_code = IN_COST_CENTER_CODE;
 
         
    CURSOR GET_ADDRESS_USA(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT  address_line_1
               ,address_line_2
               ,address_line_3
               ,city
               ,state_code
               ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('STATE_CODE','COD',STATE_CODE) as STATE_CODE_DESC
               ,zip_code
               ,zip_code_4
               ,county
               ,country_code
          FROM address_usa
         WHERE cost_center_code = IN_COST_CENTER_CODE
           AND address_type = 'M'
           AND expiration_date IS NULL;
           
    CURSOR GET_ADDRESS_CAN(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT  address_line_1
               ,address_line_2
               ,address_line_3
               ,city
               ,province_code
               ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('PROVINCE_CODE_CAN','COD',PROVINCE_CODE) as PROVINCE_CODE_DESC
               ,postal_code
               ,country_code
          FROM address_can
         WHERE cost_center_code = IN_COST_CENTER_CODE
           AND address_type = 'M'
           AND expiration_date IS NULL;
  
    CURSOR GET_ADDRESS_OTHER(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT  address_line_1
               ,address_line_2
               ,address_line_3
               ,city
               ,province_code
               ,state_code
               ,postal_code
               ,country_code
          FROM address_other
         WHERE cost_center_code = IN_COST_CENTER_CODE
           AND address_type = 'M'
           AND expiration_date IS NULL;
           
    CURSOR GET_PRI_PHONE(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT phone_area_code
               ,phone_number 
               ,phone_extension
               ,phone_number_type
          FROM phone
         WHERE cost_center_code = IN_COST_CENTER_CODE
           AND phone_number_type='PRI';
           
    v_clob                 CLOB;
    v_common_header        CLOB;
    v_usa_addr_header      varchar2(4000);
    v_can_addr_header      varchar2(4000);
    v_mex_addr_header      varchar2(4000);
    v_brb_addr_header      varchar2(4000);
    v_oth_addr_header      varchar2(4000);
    v_out_clob             CLOB;
    v_cc_map_feed_rec      CC_MAP_FEED_REC;
    v_error                VARCHAR2(1000);
    
    TYPE v_color_consultant_type IS TABLE OF varchar2(100) INDEX BY varchar2(32);
    v_arr_color_consultant_type v_color_consultant_type;
    
    PATH                VARCHAR2(50) := 'CCN_DATAFILES'; -- DIRECTORY CREATED IN ORACLE DATABASE
    USA_FILENAME        VARCHAR2(50) := 'USA_CCN_MAPS_FEED' ||TO_CHAR(SYSDATE,'_MMDDYY')||'.csv';
    CAN_FILENAME        VARCHAR2(50) := 'CAN_CCN_MAPS_FEED' ||TO_CHAR(SYSDATE,'_MMDDYY')||'.csv';
    OTH_FILENAME        VARCHAR2(50) := 'OTH_CCN_MAPS_FEED' ||TO_CHAR(SYSDATE,'_MMDDYY')||'.csv';
            
    USA_OUTPUT_FILE         UTL_FILE.FILE_TYPE;
    CAN_OUTPUT_FILE         UTL_FILE.FILE_TYPE;
    OTH_OUTPUT_FILE         UTL_FILE.FILE_TYPE;
BEGIN
    USA_OUTPUT_FILE := UTL_FILE.FOPEN (PATH ,USA_FILENAME,'W',32767);
    CAN_OUTPUT_FILE := UTL_FILE.FOPEN (PATH ,CAN_FILENAME,'W',32767);
    OTH_OUTPUT_FILE := UTL_FILE.FOPEN (PATH ,OTH_FILENAME,'W',32767);  

    v_common_header :=  'COST_CENTER_CODE'||
                        ',COST_CENTER_NAME'||
                        ',STATEMENT_TYPE'||
                        ',STATEMENT_TYPE_DESC'||
                        ',MISSION_TYPE_CODE'||
                        ',MISSION_TYPE_CODE_DESC'||
                        ',OPEN_DATE'||
                        ',MOVE_DATE'||
                        ',CC_TEMP_CLOSED_CD'||
                        ',CC_TEMP_CLOSED_CD_DESC'||
                        ',LEASE_OWN_CODE'||
                        ',LEASE_OWN_CODE_DESC'||
                        ',CIW_COLOR_CONSULTANT_TYPE'||
                        ',HCR_COLOR_CONSULTANT_TYPE'||
                        ',HOA_COLOR_CONSULTANT_TYPE'||
                        ',ISR_COLOR_CONSULTANT_TYPE'||
                        ',PCC_COLOR_CONSULTANT_TYPE'||
                        ',PCL_COLOR_CONSULTANT_TYPE'||
                        ',SWD_COLOR_CONSULTANT_TYPE'||
                        ',MKT_MISSION'||
                        ',MKT_MISSION_DESC'||
                        ',MKT_SALES_FLOOR_SIZE'||
                        ',MKT_SALES_FLOOR_SIZE_DESC'||
                        ',MKT_WAREHOUSE_SIZE'||
                        ',MKT_WAREHOUSE_SIZE_DESC'||
                        ',MKT_REAL_ESTATE_SETTING'||
                        ',MKT_REAL_ESTATE_SETTING_DESC'||
                        ',DOMAIN'||
                        ',DOMAIN_NAME'||
                        ',GROUP'||
                        ',GROUP_NAME'||
                        ',DIVISION'||
                        ',DIVISION_NAME'||
                        ',AREA'||
                        ',AREA_NAME'||
                        ',HIR_DISTRICT'||
                        ',HIR_DISTRICT_NAME'||
                        ',CITY_SALES_MANAGER'||
                        ',CITY_SALES_MANAGER_NAME'||
                        ',PHONE_AREA_CODE'||
                        ',PHONE_NUMBER';
                
    v_usa_addr_header := ',ADDRESS_LINE_1'||
                        ',ADDRESS_LINE_2'||
                        ',ADDRESS_LINE_3'||
                        ',CITY'||
                        ',STATE_CODE'||
                        ',STATE_CODE_DESC'||
                        ',ZIP_CODE'||
                        ',ZIP_CODE_4'||
                        ',COUNTY'||
                        ',COUNTRY_CODE';
                        
    v_can_addr_header := ',ADDRESS_LINE_1'||
                        ',ADDRESS_LINE_2'||
                        ',ADDRESS_LINE_3'||
                        ',CITY'||
                        ',PROVINCE_CODE'||
                        ',PROVINCE_CODE_DESC'||                        
                        ',POSTAL_CODE'||
                        ',COUNTRY_CODE';                         
                    
    v_oth_addr_header := ',ADDRESS_LINE_1'||
                        ',ADDRESS_LINE_2'||
                        ',ADDRESS_LINE_3'||
                        ',CITY'||
                        ',PROVINCE_CODE'||
                        ',STATE_CODE'||
                        ',POSTAL_CODE'||
                        ',COUNTRY_CODE';

    UTL_FILE.PUT_LINE(USA_OUTPUT_FILE, v_common_header||v_usa_addr_header , TRUE);
    UTL_FILE.PUT_LINE(CAN_OUTPUT_FILE, v_common_header||v_can_addr_header , TRUE);
    UTL_FILE.PUT_LINE(OTH_OUTPUT_FILE, v_common_header||v_oth_addr_header , TRUE);    

    FOR cc_rec IN GET_COST_CENTER_DETAILS LOOP
        v_cc_map_feed_rec := NULL;
        -- LOAD CC DETAILS
        v_cc_map_feed_rec.COST_CENTER_CODE        := cc_rec.COST_CENTER_CODE;
        v_cc_map_feed_rec.COST_CENTER_NAME        := cc_rec.COST_CENTER_NAME;
        v_cc_map_feed_rec.STATEMENT_TYPE          := cc_rec.STATEMENT_TYPE;
        v_cc_map_feed_rec.STATEMENT_TYPE_DESC     := cc_rec.STATEMENT_TYPE_DESC;
        v_cc_map_feed_rec.MISSION_TYPE_CODE       := cc_rec.MISSION_TYPE_CODE;
        v_cc_map_feed_rec.MISSION_TYPE_CODE_DESC  := cc_rec.MISSION_TYPE_CODE_DESC;
        v_cc_map_feed_rec.LEASE_OWN_CODE          := cc_rec.LEASE_OWN_CODE;
        v_cc_map_feed_rec.LEASE_OWN_CODE_DESC     := cc_rec.LEASE_OWN_CODE_DESC;
        v_cc_map_feed_rec.OPEN_DATE               := cc_rec.OPEN_DATE;
        v_cc_map_feed_rec.MOVE_DATE               := cc_rec.MOVE_DATE;
        v_cc_map_feed_rec.COUNTRY_CODE            := cc_rec.COUNTRY_CODE;        
        v_cc_map_feed_rec.CC_TEMP_CLOSED_CD       := cc_rec.CC_TEMP_CLOSED_CD;
        v_cc_map_feed_rec.CC_TEMP_CLOSED_CD_DESC  := cc_rec.CC_TEMP_CLOSED_CD_DESC;
        

        IF INSTR(cc_rec.COLOR_CONSULTANT_TYPE,'CIW') > 0 THEN    
            v_cc_map_feed_rec.CIW_COLOR_CONSULTANT_TYPE_DESC    := CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','CIW');
        END IF;
        
        IF  INSTR(cc_rec.COLOR_CONSULTANT_TYPE,'HCR') > 0 THEN    
            v_cc_map_feed_rec.HCR_COLOR_CONSULTANT_TYPE_DESC    :=  CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','HCR');
        END IF;

        IF  INSTR(cc_rec.COLOR_CONSULTANT_TYPE,'HOA') > 0 THEN        
            v_cc_map_feed_rec.HOA_COLOR_CONSULTANT_TYPE_DESC    := CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','HOA');
        END IF;

        IF  INSTR(cc_rec.COLOR_CONSULTANT_TYPE,'ISR') > 0 THEN    
            v_cc_map_feed_rec.ISR_COLOR_CONSULTANT_TYPE_DESC    := CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','ISR');
        END IF;

        IF  INSTR(cc_rec.COLOR_CONSULTANT_TYPE,'PCC') > 0 THEN    
            v_cc_map_feed_rec.PCC_COLOR_CONSULTANT_TYPE_DESC    := CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','PCC');
        END IF;

        IF  INSTR(cc_rec.COLOR_CONSULTANT_TYPE,'PCL') > 0 THEN    
            v_cc_map_feed_rec.PCL_COLOR_CONSULTANT_TYPE_DESC    := CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','PCL');
        END IF;

        IF  INSTR(cc_rec.COLOR_CONSULTANT_TYPE,'SWD') > 0 THEN
            v_cc_map_feed_rec.SWD_COLOR_CONSULTANT_TYPE_DESC    := CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','SWD');
        END IF;        

       
       -- LOAD MARKETING DETAILS
       FOR rec IN GET_MARKETING_DETAILS(cc_rec.COST_CENTER_CODE) LOOP
           BEGIN
              v_cc_map_feed_rec.MKT_MISSION                     := rec.MKT_MISSION;
              v_cc_map_feed_rec.MKT_SALES_FLOOR_SIZE            := rec.MKT_SALES_FLOOR_SIZE;
              v_cc_map_feed_rec.MKT_REAL_ESTATE_SETTING         := rec.MKT_REAL_ESTATE_SETTING;
              v_cc_map_feed_rec.MKT_WAREHOUSE_SIZE              := rec.MKT_WAREHOUSE_SIZE;
              v_cc_map_feed_rec.MKT_MISSION_DESC                := rec.MKT_MISSION_DESC;
              v_cc_map_feed_rec.MKT_SALES_FLOOR_SIZE_DESC       := rec.MKT_SALES_FLOOR_SIZE_DESC;
              v_cc_map_feed_rec.MKT_REAL_ESTATE_SETTING_DESC    := rec.MKT_REAL_ESTATE_SETTING_DESC;
              v_cc_map_feed_rec.MKT_WAREHOUSE_SIZE_DESC         := rec.MKT_WAREHOUSE_SIZE_DESC;
              v_cc_map_feed_rec.MKT_CATEGORY                    := rec."CATEGORY";
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;
        
        -- LOAD HIERARCHY DETAILS
        FOR rec IN GET_HIERARCHY_DETAILS(cc_rec.COST_CENTER_CODE) LOOP
           BEGIN
              v_cc_map_feed_rec.DOMAIN                  := rec.DOMAIN;
              v_cc_map_feed_rec."GROUP"                 := rec."GROUP";
              v_cc_map_feed_rec.DIVISION                := rec.DIVISION;
              v_cc_map_feed_rec.AREA                    := rec.AREA;
              v_cc_map_feed_rec.HIR_DISTRICT            := rec.DISTRICT;
              v_cc_map_feed_rec.CITY_SALES_MANAGER      := rec.CITY_SALES_MANAGER;
              v_cc_map_feed_rec.DOMAIN_NAME             := rec.DOMAIN_NAME;
              v_cc_map_feed_rec.GROUP_NAME              := rec.GROUP_NAME;
              v_cc_map_feed_rec.DIVISION_NAME           := rec.DIVISION_NAME;
              v_cc_map_feed_rec.AREA_NAME               := rec.AREA_NAME;
              v_cc_map_feed_rec.HIR_DISTRICT_NAME       := rec.DISTRICT_NAME;
              v_cc_map_feed_rec.CITY_SALES_MANAGER_NAME := rec.CITY_SALES_MANAGER_NAME;
          EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
       END LOOP;
       
        -- LOAD Phone details
        FOR rec IN GET_PRI_PHONE(cc_rec.COST_CENTER_CODE) LOOP
           BEGIN
                v_cc_map_feed_rec.PHONE_AREA_CODE       := rec.PHONE_AREA_CODE;
                v_cc_map_feed_rec.PHONE_NUMBER          := rec.PHONE_NUMBER ;
                v_cc_map_feed_rec.PHONE_NUMBER_TYPE     := rec.PHONE_NUMBER_TYPE;
           EXCEPTION
              WHEN OTHERS THEN
                 NULL;
           END;
        END LOOP;
       
        GENERATE_CSV_FILE_CONTENT(v_cc_map_feed_rec, v_out_clob);
        
       -- LOAD USA ADDRESS DETAILS
        IF cc_rec.COUNTRY_CODE IN ( 'USA', 'PRI')
        THEN
            FOR rec IN GET_ADDRESS_USA(cc_rec.COST_CENTER_CODE) LOOP
               BEGIN
                v_out_clob := v_out_clob || '"'  || NVL(rec.ADDRESS_LINE_1,'N/A')   || '",' ||
                                            '"'  || NVL(rec.ADDRESS_LINE_2,'N/A')   || '",' ||
                                            '"'  || NVL(rec.ADDRESS_LINE_3,'N/A')   || '",' ||
                                            '"'  || NVL(rec.CITY,'N/A')             || '",' ||
                                            '"'  || NVL(rec.STATE_CODE,'N/A')       || '",' ||
                                            '"'  || NVL(rec.STATE_CODE_DESC,'N/A')  || '",' ||                                            
                                            '="' || NVL(rec.ZIP_CODE,'N/A')         || '",' ||
                                            '="' || NVL(rec.ZIP_CODE_4,'N/A')       || '",' ||
                                            '"'  || NVL(rec.COUNTY,'N/A')           || '",' ||
                                            '"'  || NVL(rec.COUNTRY_CODE,'N/A')     || '",' ;
                END; 
            END LOOP;
            UTL_FILE.PUT_LINE(USA_OUTPUT_FILE, v_out_clob, TRUE);
         ELSIF cc_rec.COUNTRY_CODE = 'CAN' THEN
            FOR rec IN GET_ADDRESS_CAN(cc_rec.COST_CENTER_CODE) LOOP
               BEGIN
                v_out_clob := v_out_clob || '"'  || NVL(rec.ADDRESS_LINE_1,'N/A')     || '",' ||
                                            '"'  || NVL(rec.ADDRESS_LINE_2,'N/A')     || '",' ||
                                            '"'  || NVL(rec.ADDRESS_LINE_3,'N/A')     || '",' ||
                                            '"'  || NVL(rec.CITY,'N/A')               || '",' ||
                                            '="' || NVL(rec.PROVINCE_CODE,'N/A')      || '",' ||
                                            '="' || NVL(rec.PROVINCE_CODE_DESC,'N/A') || '",' ||
                                            '="' || NVL(rec.POSTAL_CODE,'N/A')        || '",' ||
                                            '"'  || NVL(rec.COUNTRY_CODE,'N/A')       || '",' ;
                END; 
            END LOOP;
            UTL_FILE.PUT_LINE(CAN_OUTPUT_FILE, v_out_clob, TRUE);            
          ELSE
           FOR rec IN GET_ADDRESS_OTHER(cc_rec.COST_CENTER_CODE) LOOP
               BEGIN  
               DBMS_OUTPUT.PUT_LINE(cc_rec.COST_CENTER_CODE);
                v_out_clob := v_out_clob || '"'  || NVL(rec.ADDRESS_LINE_1,'N/A')   || '",' ||
                                            '"'  || NVL(rec.ADDRESS_LINE_2,'N/A')   || '",' ||
                                            '"'  || NVL(rec.ADDRESS_LINE_3,'N/A')   || '",' ||
                                            '"'  || NVL(rec.CITY,'N/A')             || '",' ||
                                            '"'  || NVL(rec.PROVINCE_CODE,'N/A')    || '",' ||
                                            '"'  || NVL(rec.STATE_CODE,'N/A')       || '",' ||
                                            '="' || NVL(rec.POSTAL_CODE,'N/A')      || '",' ||
                                            '"'  || NVL(rec.COUNTRY_CODE,'N/A')     || '",' ;
                END; 
            END LOOP;
            UTL_FILE.PUT_LINE(OTH_OUTPUT_FILE, v_out_clob, TRUE);            
         END IF;    

    END LOOP;

    UTL_FILE.FCLOSE(USA_OUTPUT_FILE);
    UTL_FILE.FCLOSE(CAN_OUTPUT_FILE);
    UTL_FILE.FCLOSE(OTH_OUTPUT_FILE);        
    
    MAIL_PKG.SEND_MAIL('CCN_MAPS_FEED');
    
EXCEPTION 
    WHEN OTHERS THEN
       DBMS_OUTPUT.PUT_LINE('FAILED to Generate MAPS FEED store cost center xml file '||to_char(SYSDATE,'MONTH'));
       DBMS_OUTPUT.PUT_LINE(SQLCODE || SUBSTR(SQLERRM, 1, 500)||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
       COMMON_TOOLS.LOG_ERROR(v_cc_map_feed_rec.COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.GENERATE_MAPS_CSV_FILE' , SQLERRM, SQLCODE);
    RAISE;
END GENERATE_MAPS_CSV_FILE;      


END CCN_MAPS_FEED_PKG;