create or replace PACKAGE BODY CCN_MAPS_FEED_PKG AS 
/****************************************************************************** 
This package is used generate xml file for geographic information and research team 

created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
    C_STRING        VARCHAR2(1) := '"';
    C_DLMTR         VARCHAR2(1) := ',';
    C_DIS_STRING    VARCHAR2(1) := '=';

PROCEDURE BUILD_CLOB(
/****************************************************************************** 
This PROCEDURE generates the csv file content for store cost centers

created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
    IN_MAP_FEED_REC IN      cc_map_feed_rec,
    OUT_CLOB           OUT  CLOB)
IS
BEGIN
    OUT_CLOB := C_DIS_STRING || C_STRING || IN_MAP_FEED_REC.COST_CENTER_CODE                          || C_STRING || C_DLMTR ||
                                C_STRING || IN_MAP_FEED_REC.COST_CENTER_NAME                          || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.STATEMENT_TYPE,'N/A')                 || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.STATEMENT_TYPE_DESC,'N/A')            || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.MISSION_TYPE_CODE,'N/A')              || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.MISSION_TYPE_CODE_DESC,'N/A')         || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.OPEN_DATE,'N/A')                      || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.MOVE_DATE,'N/A')                      || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.CC_TEMP_CLOSED_CD,'N/A')              || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.CC_TEMP_CLOSED_CD_DESC,'N/A')         || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.LEASE_OWN_CODE,'N/A')                 || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.LEASE_OWN_CODE_DESC,'N/A')            || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.CIW_COLOR_CONSULTANT_TYPE_DESC,'N/A') || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.HCR_COLOR_CONSULTANT_TYPE_DESC,'N/A') || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.HOA_COLOR_CONSULTANT_TYPE_DESC,'N/A') || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.ISR_COLOR_CONSULTANT_TYPE_DESC,'N/A') || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.PCC_COLOR_CONSULTANT_TYPE_DESC,'N/A') || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.PCL_COLOR_CONSULTANT_TYPE_DESC,'N/A') || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.SWD_COLOR_CONSULTANT_TYPE_DESC,'N/A') || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.MKT_MISSION,'N/A')                    || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.MKT_MISSION_DESC,'N/A')               || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.MKT_SALES_FLOOR_SIZE,'N/A')           || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.MKT_SALES_FLOOR_SIZE_DESC,'N/A')      || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.MKT_WAREHOUSE_SIZE,'N/A')             || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.MKT_WAREHOUSE_SIZE_DESC,'N/A')        || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.MKT_REAL_ESTATE_SETTING,'N/A')        || C_STRING || C_DLMTR ||
                                C_STRING || NVL(IN_MAP_FEED_REC.MKT_REAL_ESTATE_SETTING_DESC,'N/A')   || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.DOMAIN,'N/A')                         || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.DOMAIN_NAME,'N/A')                    || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC."GROUP",'N/A')                        || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.GROUP_NAME,'N/A')                     || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.DIVISION,'N/A')                       || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.DIVISION_NAME,'N/A')                  || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.AREA,'N/A')                           || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.AREA_NAME,'N/A')                      || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.HIR_DISTRICT,'N/A')                   || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.HIR_DISTRICT_NAME,'N/A')              || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.CITY_SALES_MANAGER,'N/A')             || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.CITY_SALES_MANAGER_NAME,'N/A')        || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.PHONE_AREA_CODE,'N/A')                || C_STRING || C_DLMTR ||
                C_DIS_STRING || C_STRING || NVL(IN_MAP_FEED_REC.PHONE_NUMBER,'N/A')                   || C_STRING || C_DLMTR ;
EXCEPTION 
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR(IN_MAP_FEED_REC.COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.BUILD_CLOB' , SQLERRM, SQLCODE);
        RAISE;
END BUILD_CLOB;

PROCEDURE GET_COST_CENTER_DETAILS(
/****************************************************************************** 
This PROCEDURE cost center details.
created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
        IN_COST_CENTER_CODE IN  COST_CENTER.COST_CENTER_CODE%TYPE,
        OUT_CC_MAP_FEED     OUT CC_MAP_FEED_REC)
IS
    CURSOR GET_COST_CENTER_DETAILS_CUR(IN_COST_CENTER_CODE VARCHAR2) IS 
        SELECT cost_center_code 
             ,cost_center_name
             ,statement_type
             ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('STATEMENT_TYPE','COD',STATEMENT_TYPE) statement_type_desc
             ,mission_type_code
             ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('MISSION_TYPE_CODE','COD',MISSION_TYPE_CODE) mission_type_code_desc
             ,TO_CHAR(open_date,'MM-DD-YYYY') AS open_date
             ,TO_CHAR(move_date,'MM-DD-YYYY') AS  move_date
             ,cc_temp_closed_cd
             ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('CC_TEMP_CLOSED_CD','COD',CC_TEMP_CLOSED_CD) cc_temp_closed_cd_desc
             ,lease_own_code
             ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('LEASE_OWN_CODE','COD',LEASE_OWN_CODE) lease_own_code_desc
            ,REGEXP_REPLACE (cc.COLOR_CONSULTANT_TYPE.extract('/PROGRAM_TYPE/COLOR_CONSULTANT_TYPE/text()').getStringVal(),
                             '(.{3})','\1,') AS color_consultant_type
             ,country_code
         FROM cost_center cc 
         WHERE cost_center_code = IN_COST_CENTER_CODE;
         
    V_COST_CENTER_REC       GET_COST_CENTER_DETAILS_CUR%ROWTYPE; 
 
BEGIN
    OPEN GET_COST_CENTER_DETAILS_CUR(IN_COST_CENTER_CODE);
    FETCH GET_COST_CENTER_DETAILS_CUR INTO V_COST_CENTER_REC;
    CLOSE GET_COST_CENTER_DETAILS_CUR;

    OUT_CC_MAP_FEED := NULL;
    OUT_CC_MAP_FEED.COST_CENTER_CODE        := V_COST_CENTER_REC.COST_CENTER_CODE;
    OUT_CC_MAP_FEED.COST_CENTER_NAME        := V_COST_CENTER_REC.COST_CENTER_NAME;
    OUT_CC_MAP_FEED.STATEMENT_TYPE          := V_COST_CENTER_REC.STATEMENT_TYPE;
    OUT_CC_MAP_FEED.STATEMENT_TYPE_DESC     := V_COST_CENTER_REC.STATEMENT_TYPE_DESC;
    OUT_CC_MAP_FEED.MISSION_TYPE_CODE       := V_COST_CENTER_REC.MISSION_TYPE_CODE;
    OUT_CC_MAP_FEED.MISSION_TYPE_CODE_DESC  := V_COST_CENTER_REC.MISSION_TYPE_CODE_DESC;
    OUT_CC_MAP_FEED.LEASE_OWN_CODE          := V_COST_CENTER_REC.LEASE_OWN_CODE;
    OUT_CC_MAP_FEED.LEASE_OWN_CODE_DESC     := V_COST_CENTER_REC.LEASE_OWN_CODE_DESC;
    OUT_CC_MAP_FEED.OPEN_DATE               := V_COST_CENTER_REC.OPEN_DATE;
    OUT_CC_MAP_FEED.MOVE_DATE               := V_COST_CENTER_REC.MOVE_DATE;
    OUT_CC_MAP_FEED.COUNTRY_CODE            := V_COST_CENTER_REC.COUNTRY_CODE;        
    OUT_CC_MAP_FEED.CC_TEMP_CLOSED_CD       := V_COST_CENTER_REC.CC_TEMP_CLOSED_CD;
    OUT_CC_MAP_FEED.CC_TEMP_CLOSED_CD_DESC  := V_COST_CENTER_REC.CC_TEMP_CLOSED_CD_DESC;

    IF INSTR(V_COST_CENTER_REC.COLOR_CONSULTANT_TYPE,'CIW') > 0 THEN    
        OUT_CC_MAP_FEED.CIW_COLOR_CONSULTANT_TYPE_DESC    := 
            CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','CIW');
    END IF;

    IF  INSTR(V_COST_CENTER_REC.COLOR_CONSULTANT_TYPE,'HCR') > 0 THEN    
        OUT_CC_MAP_FEED.HCR_COLOR_CONSULTANT_TYPE_DESC    :=  
            CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','HCR');
    END IF;

    IF  INSTR(V_COST_CENTER_REC.COLOR_CONSULTANT_TYPE,'HOA') > 0 THEN        
        OUT_CC_MAP_FEED.HOA_COLOR_CONSULTANT_TYPE_DESC    := 
            CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','HOA');
    END IF;

    IF  INSTR(V_COST_CENTER_REC.COLOR_CONSULTANT_TYPE,'ISR') > 0 THEN    
        OUT_CC_MAP_FEED.ISR_COLOR_CONSULTANT_TYPE_DESC    :=
            CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','ISR');
    END IF;

    IF  INSTR(V_COST_CENTER_REC.COLOR_CONSULTANT_TYPE,'PCC') > 0 THEN    
        OUT_CC_MAP_FEED.PCC_COLOR_CONSULTANT_TYPE_DESC    := CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','PCC');
    END IF;

    IF  INSTR(V_COST_CENTER_REC.COLOR_CONSULTANT_TYPE,'PCL') > 0 THEN    
        OUT_CC_MAP_FEED.PCL_COLOR_CONSULTANT_TYPE_DESC    := 
            CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','PCL');
    END IF;

    IF  INSTR(V_COST_CENTER_REC.COLOR_CONSULTANT_TYPE,'SWD') > 0 THEN
        OUT_CC_MAP_FEED.SWD_COLOR_CONSULTANT_TYPE_DESC    := 
            CCN_PICK_LIST_PKG.GET_CODE_DETAIL_VALUE_DSCRPTN('COLOR_CONSULTANT_TYPE','COD','SWD');
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR(IN_COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.GET_COST_CENTER_DETAILS' , SQLERRM, SQLCODE);
        RAISE;
END GET_COST_CENTER_DETAILS;

PROCEDURE GET_MARKETING_DETAILS(
/****************************************************************************** 
This PROCEDURE Marketing details.
created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
        IN_COST_CENTER_CODE IN  COST_CENTER.COST_CENTER_CODE%TYPE,
        OUT_CC_MAP_FEED     IN  OUT CC_MAP_FEED_REC)
IS
    CURSOR GET_MARKETING_DETAILS_CUR(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT mkt_mission
              ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('MKT_MISSION','COD',MKT_MISSION) mkt_mission_desc
              ,mkt_sales_floor_size
              ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('MKT_SALES_FLOOR_SIZE','COD',MKT_SALES_FLOOR_SIZE) mkt_sales_floor_size_desc
              ,mkt_warehouse_size
              ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('MKT_WAREHOUSE_SIZE','COD',MKT_WAREHOUSE_SIZE) mkt_warehouse_size_desc
              ,mkt_real_estate_setting
              ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('MKT_REAL_ESTATE_SETTING','COD',MKT_REAL_ESTATE_SETTING) mkt_real_estate_setting_desc              
              ,"CATEGORY"
          FROM marketing
         WHERE cost_center_code = IN_COST_CENTER_CODE;

    V_MARKETING_REC       GET_MARKETING_DETAILS_CUR%ROWTYPE; 
BEGIN
    OPEN GET_MARKETING_DETAILS_CUR(IN_COST_CENTER_CODE);
    FETCH GET_MARKETING_DETAILS_CUR INTO V_MARKETING_REC;
    CLOSE GET_MARKETING_DETAILS_CUR;

    OUT_CC_MAP_FEED.MKT_MISSION                     := V_MARKETING_REC.MKT_MISSION;
    OUT_CC_MAP_FEED.MKT_SALES_FLOOR_SIZE            := V_MARKETING_REC.MKT_SALES_FLOOR_SIZE;
    OUT_CC_MAP_FEED.MKT_REAL_ESTATE_SETTING         := V_MARKETING_REC.MKT_REAL_ESTATE_SETTING;
    OUT_CC_MAP_FEED.MKT_WAREHOUSE_SIZE              := V_MARKETING_REC.MKT_WAREHOUSE_SIZE;
    OUT_CC_MAP_FEED.MKT_MISSION_DESC                := V_MARKETING_REC.MKT_MISSION_DESC;
    OUT_CC_MAP_FEED.MKT_SALES_FLOOR_SIZE_DESC       := V_MARKETING_REC.MKT_SALES_FLOOR_SIZE_DESC;
    OUT_CC_MAP_FEED.MKT_REAL_ESTATE_SETTING_DESC    := V_MARKETING_REC.MKT_REAL_ESTATE_SETTING_DESC;
    OUT_CC_MAP_FEED.MKT_WAREHOUSE_SIZE_DESC         := V_MARKETING_REC.MKT_WAREHOUSE_SIZE_DESC;
    OUT_CC_MAP_FEED.MKT_CATEGORY                    := V_MARKETING_REC."CATEGORY";    
EXCEPTION 
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR(IN_COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.GET_MARKETING_DETAILS' , SQLERRM, SQLCODE);
        RAISE;
END GET_MARKETING_DETAILS;

PROCEDURE GET_HIERARCHY_DETAILS(
/****************************************************************************** 
This PROCEDURE HIERARCHY details.
created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
        IN_COST_CENTER_CODE IN  COST_CENTER.COST_CENTER_CODE%TYPE,
        OUT_CC_MAP_FEED     IN  OUT CC_MAP_FEED_REC)
IS
    CURSOR GET_HIERARCHY_DETAILS_CUR(IN_COST_CENTER_CODE VARCHAR2) IS
    SELECT  DISTINCT
            h.hrchy_hdr_name
           ,cc.cost_center_code
           ,h.domain_val domain
           ,h.group_val "GROUP"
           ,h.division_val division
           ,h.area_val area
           ,h.district_val district
           ,h.city_sales_manager_val city_sales_manager
           ,h.domain_val_name domain_name
           ,h.group_val_name group_name
           ,h.division_val_name division_name
           ,nvl2(h.area_val,h.area_val_name,NULL) area_name
           ,h.district_val_name district_name
           ,h.city_sales_manager_val_name city_sales_manager_name
           ,cc.cost_center_name
        FROM cost_center CC,
       (WITH T AS (SELECT hdesc.hrchy_hdr_lvl_desc description,
                      hd.hrchy_dtl_curr_row_val cost_center_code,
                      hd.hrchy_hdr_name,
                      hd.hrchy_dtl_eff_date,
                      hd.hrchy_dtl_exp_date,
                      hd.hrchy_dtl_curr_lvl_val,
                      SUBSTR(hd.hrchy_dtl_curr_lvl_val, 1 + hdesc.sum_val - hdesc.lvl_value_size, hdesc.lvl_value_size) val,
                      (SELECT hrchy_dtl_desc
                         FROM hierarchy_detail
                        WHERE hrchy_dtl_curr_lvl_val = SUBSTR(hd.hrchy_dtl_curr_lvl_val, 1, hdesc.sum_val)
                          AND hrchy_hdr_name  = hdesc.hrchy_hdr_name
                          AND hrchy_dtl_level = hdesc.hrchy_hdr_lvl_nbr
                          AND ROWNUM < 2)  val_name
                 FROM hierarchy_detail hd,
                      hierarchy_header hh,
                      (SELECT hrchy_hdr_name,
                              hrchy_hdr_lvl_nbr,
                              hrchy_hdr_lvl_desc,
                              lvl_value_size,
                              SUM(lvl_value_size) OVER (PARTITION BY hrchy_hdr_name ORDER BY hrchy_hdr_lvl_nbr) sum_val
                         FROM hierarchy_description) Hdesc
                WHERE hd.hrchy_hdr_name  = hdesc.hrchy_hdr_name
                  AND hd.hrchy_hdr_name  = hh.hrchy_hdr_name
                  AND hd.hrchy_dtl_level = hh.hrchy_hdr_levels
                  AND hd.hrchy_hdr_name = 'GLOBAL_HIERARCHY'
                  AND NVL(hd.hrchy_dtl_next_lvl_val, '~~~') = '~~~')
         SELECT *
           FROM T
                PIVOT 
                (MAX(val) AS val,
                 MAX(val_name) AS val_name FOR (description) IN ('Domain' AS DOMAIN,
                                                                 'Group' AS "GROUP",
                                                                 'Division' AS DIVISION,
                                                                 'Area' AS AREA,
                                                                 'District' AS DISTRICT,
                                                                 'City/Sales Manager' AS CITY_SALES_MANAGER
                                                                  ))) H
           WHERE cc.cost_center_code = h.cost_center_code(+)
             AND cc.cost_center_code = IN_COST_CENTER_CODE;

    V_HIERARCHY_REC       GET_HIERARCHY_DETAILS_CUR%ROWTYPE; 
BEGIN
    OPEN GET_HIERARCHY_DETAILS_CUR(IN_COST_CENTER_CODE);
    FETCH GET_HIERARCHY_DETAILS_CUR INTO V_HIERARCHY_REC;
    CLOSE GET_HIERARCHY_DETAILS_CUR;

    OUT_CC_MAP_FEED.DOMAIN                  := V_HIERARCHY_REC.DOMAIN;
    OUT_CC_MAP_FEED."GROUP"                 := V_HIERARCHY_REC."GROUP";
    OUT_CC_MAP_FEED.DIVISION                := V_HIERARCHY_REC.DIVISION;
    OUT_CC_MAP_FEED.AREA                    := V_HIERARCHY_REC.AREA;
    OUT_CC_MAP_FEED.HIR_DISTRICT            := V_HIERARCHY_REC.DISTRICT;
    OUT_CC_MAP_FEED.CITY_SALES_MANAGER      := V_HIERARCHY_REC.CITY_SALES_MANAGER;
    OUT_CC_MAP_FEED.DOMAIN_NAME             := V_HIERARCHY_REC.DOMAIN_NAME;
    OUT_CC_MAP_FEED.GROUP_NAME              := V_HIERARCHY_REC.GROUP_NAME;
    OUT_CC_MAP_FEED.DIVISION_NAME           := V_HIERARCHY_REC.DIVISION_NAME;
    OUT_CC_MAP_FEED.AREA_NAME               := V_HIERARCHY_REC.AREA_NAME;
    OUT_CC_MAP_FEED.HIR_DISTRICT_NAME       := V_HIERARCHY_REC.DISTRICT_NAME;
    OUT_CC_MAP_FEED.CITY_SALES_MANAGER_NAME := V_HIERARCHY_REC.CITY_SALES_MANAGER_NAME;
EXCEPTION 
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR(IN_COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.GET_HIERARCHY_DETAILS' , SQLERRM, SQLCODE);
        RAISE;
END GET_HIERARCHY_DETAILS;

PROCEDURE GET_USA_ADDRESS_DETAILS(
/****************************************************************************** 
This PROCEDURE USA ADDRESS details.
created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
    IN_COST_CENTER_CODE IN     COST_CENTER.COST_CENTER_CODE%TYPE,
    OUT_USA_CLOB           OUT CLOB)
IS
    CURSOR GET_ADDRESS_USA_CUR(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT  address_line_1
               ,address_line_2
               ,address_line_3
               ,city
               ,state_code
               ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('STATE_CODE','COD',STATE_CODE) as STATE_CODE_DESC
               ,zip_code
               ,zip_code_4
               ,county
               ,country_code
          FROM address_usa
         WHERE cost_center_code = IN_COST_CENTER_CODE
           AND address_type = 'M'
           AND expiration_date IS NULL;

    V_ADDRESS_REC           GET_ADDRESS_USA_CUR%ROWTYPE;
BEGIN
    OPEN GET_ADDRESS_USA_CUR(IN_COST_CENTER_CODE);
    FETCH GET_ADDRESS_USA_CUR INTO V_ADDRESS_REC;
    CLOSE GET_ADDRESS_USA_CUR;
    OUT_USA_CLOB := C_STRING                 || NVL(V_ADDRESS_REC.ADDRESS_LINE_1,'N/A')  || C_STRING || C_DLMTR ||
                    C_STRING                 || NVL(V_ADDRESS_REC.ADDRESS_LINE_2,'N/A')  || C_STRING || C_DLMTR ||
                    C_STRING                 || NVL(V_ADDRESS_REC.ADDRESS_LINE_3,'N/A')  || C_STRING || C_DLMTR ||
                    C_STRING                 || NVL(V_ADDRESS_REC.CITY,'N/A')            || C_STRING || C_DLMTR ||
                    C_STRING                 || NVL(V_ADDRESS_REC.STATE_CODE,'N/A')      || C_STRING || C_DLMTR ||
                    C_STRING                 || NVL(V_ADDRESS_REC.STATE_CODE_DESC,'N/A') || C_STRING || C_DLMTR ||
                    C_DIS_STRING || C_STRING || NVL(V_ADDRESS_REC.ZIP_CODE,'N/A')        || C_STRING || C_DLMTR ||
                    C_DIS_STRING || C_STRING || NVL(V_ADDRESS_REC.ZIP_CODE_4,'N/A')      || C_STRING || C_DLMTR ||
                    C_STRING                 || NVL(V_ADDRESS_REC.COUNTY,'N/A')          || C_STRING || C_DLMTR ||
                    C_STRING                 || NVL(V_ADDRESS_REC.COUNTRY_CODE,'N/A')    || C_STRING  ;
EXCEPTION 
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR(IN_COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.GET_USA_ADDRESS_DETAILS' , SQLERRM, SQLCODE);
        RAISE;
END GET_USA_ADDRESS_DETAILS;

PROCEDURE GET_CAN_ADDRESS_DETAILS(
/****************************************************************************** 
This PROCEDURE CAN ADDRESS details.
created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
        IN_COST_CENTER_CODE IN  COST_CENTER.COST_CENTER_CODE%TYPE,
        OUT_CAN_CLOB        OUT CLOB)
IS
    CURSOR GET_ADDRESS_CAN_CUR(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT  address_line_1
               ,address_line_2
               ,address_line_3
               ,city
               ,province_code
               ,ccn_pick_list_pkg.get_code_detail_value_dscrptn('PROVINCE_CODE_CAN','COD',PROVINCE_CODE) as PROVINCE_CODE_DESC
               ,postal_code
               ,country_code
          FROM address_can
         WHERE cost_center_code = IN_COST_CENTER_CODE
           AND address_type = 'M'
           AND expiration_date IS NULL;

    V_ADDRESS_REC          GET_ADDRESS_CAN_CUR%ROWTYPE;
BEGIN
    OPEN GET_ADDRESS_CAN_CUR(IN_COST_CENTER_CODE);
    FETCH GET_ADDRESS_CAN_CUR INTO V_ADDRESS_REC;
    CLOSE GET_ADDRESS_CAN_CUR;
    OUT_CAN_CLOB := C_STRING                    || NVL(V_ADDRESS_REC.ADDRESS_LINE_1,'N/A')        || C_STRING || C_DLMTR ||
                    C_STRING                    || NVL(V_ADDRESS_REC.ADDRESS_LINE_2,'N/A')        || C_STRING || C_DLMTR ||
                    C_STRING                    || NVL(V_ADDRESS_REC.ADDRESS_LINE_3,'N/A')        || C_STRING || C_DLMTR ||
                    C_STRING                    || NVL(V_ADDRESS_REC.CITY,'N/A')                  || C_STRING || C_DLMTR ||
                    C_STRING                    || NVL(V_ADDRESS_REC.PROVINCE_CODE,'N/A')         || C_STRING || C_DLMTR ||
                    C_STRING                    || NVL(V_ADDRESS_REC.PROVINCE_CODE_DESC,'N/A')    || C_STRING || C_DLMTR ||
                    C_DIS_STRING    || C_STRING || NVL(V_ADDRESS_REC.POSTAL_CODE,'N/A')           || C_STRING || C_DLMTR ||
                    C_STRING                    || NVL(V_ADDRESS_REC.COUNTRY_CODE,'N/A')          || C_STRING;
EXCEPTION 
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR(IN_COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.GET_CAN_ADDRESS_DETAILS' , SQLERRM, SQLCODE);
        RAISE;
END GET_CAN_ADDRESS_DETAILS;

PROCEDURE GET_OTHER_ADDRESS_DETAILS(
/****************************************************************************** 
This PROCEDURE CAN ADDRESS details.
created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
        IN_COST_CENTER_CODE IN COST_CENTER.COST_CENTER_CODE%TYPE,
        OUT_OTH_CLOB        OUT CLOB)
IS
    CURSOR GET_ADDRESS_OTHER_CUR(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT  address_line_1
               ,address_line_2
               ,address_line_3
               ,city
               ,province_code
               ,state_code
               ,postal_code
               ,country_code
          FROM address_other
         WHERE cost_center_code = IN_COST_CENTER_CODE
           AND address_type = 'M'
           AND expiration_date IS NULL;

    V_ADDRESS_REC          GET_ADDRESS_OTHER_CUR%ROWTYPE;

BEGIN
        OPEN GET_ADDRESS_OTHER_CUR(IN_COST_CENTER_CODE);
        FETCH GET_ADDRESS_OTHER_CUR INTO V_ADDRESS_REC;
        CLOSE GET_ADDRESS_OTHER_CUR;

        OUT_OTH_CLOB := C_STRING                    || NVL(V_ADDRESS_REC.ADDRESS_LINE_1,'N/A')        || C_STRING || C_DLMTR ||
                        C_STRING                    || NVL(V_ADDRESS_REC.ADDRESS_LINE_2,'N/A')        || C_STRING || C_DLMTR ||
                        C_STRING                    || NVL(V_ADDRESS_REC.ADDRESS_LINE_3,'N/A')        || C_STRING || C_DLMTR ||
                        C_STRING                    || NVL(V_ADDRESS_REC.CITY,'N/A')                  || C_STRING || C_DLMTR ||
                        C_STRING                    || NVL(V_ADDRESS_REC.PROVINCE_CODE,'N/A')         || C_STRING || C_DLMTR ||
                        C_STRING                    || NVL(V_ADDRESS_REC.STATE_CODE,'N/A')            || C_STRING || C_DLMTR ||
                        C_DIS_STRING    || C_STRING || NVL(V_ADDRESS_REC.POSTAL_CODE,'N/A')           || C_STRING || C_DLMTR ||
                        C_STRING                    || NVL(V_ADDRESS_REC.COUNTRY_CODE,'N/A')          || C_STRING  ;
EXCEPTION 
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR(IN_COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.GET_OTHER_ADDRESS_DETAILS' , SQLERRM, SQLCODE);
        RAISE;
END GET_OTHER_ADDRESS_DETAILS;

PROCEDURE GET_PHONE_DETAILS(
/****************************************************************************** 
This PROCEDURE gets primary PHONE details.
created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
        IN_COST_CENTER_CODE IN  COST_CENTER.COST_CENTER_CODE%TYPE,
        OUT_CC_MAP_FEED     IN  OUT CC_MAP_FEED_REC)
IS
    CURSOR GET_PRI_PHONE_CUR(IN_COST_CENTER_CODE VARCHAR2) IS
        SELECT phone_area_code
               ,phone_number 
               ,phone_extension
               ,phone_number_type
          FROM phone
         WHERE cost_center_code = IN_COST_CENTER_CODE
           AND phone_number_type='PRI';

    V_PHONE_REC             GET_PRI_PHONE_CUR%ROWTYPE;
BEGIN
        OPEN GET_PRI_PHONE_CUR(IN_COST_CENTER_CODE);
        FETCH GET_PRI_PHONE_CUR INTO V_PHONE_REC;
        CLOSE GET_PRI_PHONE_CUR;

        OUT_CC_MAP_FEED.PHONE_AREA_CODE         := V_PHONE_REC.PHONE_AREA_CODE;
        OUT_CC_MAP_FEED.PHONE_NUMBER            := V_PHONE_REC.PHONE_NUMBER;
        OUT_CC_MAP_FEED.PHONE_EXTENSION         := V_PHONE_REC.PHONE_EXTENSION;
        OUT_CC_MAP_FEED.PHONE_NUMBER_TYPE       := V_PHONE_REC.PHONE_NUMBER_TYPE;
EXCEPTION 
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR(IN_COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.GET_OTHER_ADDRESS_DETAILS' , SQLERRM, SQLCODE);
        RAISE;
END GET_PHONE_DETAILS;

FUNCTION GET_COMMON_HEADER
/****************************************************************************** 
This FUNCTION gets Common Header.
created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
RETURN CLOB
IS
    OUT_HEADER CLOB;
BEGIN
    OUT_HEADER  :=  'COST_CENTER_CODE'              ||  C_DLMTR ||
                    'COST_CENTER_NAME'              ||  C_DLMTR ||
                    'STATEMENT_TYPE'                ||  C_DLMTR ||
                    'STATEMENT_TYPE_DESC'           ||  C_DLMTR ||
                    'MISSION_TYPE_CODE'             ||  C_DLMTR ||
                    'MISSION_TYPE_CODE_DESC'        ||  C_DLMTR ||
                    'OPEN_DATE'                     ||  C_DLMTR ||
                    'MOVE_DATE'                     ||  C_DLMTR ||
                    'CC_TEMP_CLOSED_CD'             ||  C_DLMTR ||
                    'CC_TEMP_CLOSED_CD_DESC'        ||  C_DLMTR ||
                    'LEASE_OWN_CODE'                ||  C_DLMTR ||
                    'LEASE_OWN_CODE_DESC'           ||  C_DLMTR ||
                    'CIW_COLOR_CONSULTANT_TYPE'     ||  C_DLMTR ||
                    'HCR_COLOR_CONSULTANT_TYPE'     ||  C_DLMTR ||
                    'HOA_COLOR_CONSULTANT_TYPE'     ||  C_DLMTR ||
                    'ISR_COLOR_CONSULTANT_TYPE'     ||  C_DLMTR ||
                    'PCC_COLOR_CONSULTANT_TYPE'     ||  C_DLMTR ||
                    'PCL_COLOR_CONSULTANT_TYPE'     ||  C_DLMTR ||
                    'SWD_COLOR_CONSULTANT_TYPE'     ||  C_DLMTR ||
                    'MKT_MISSION'                   ||  C_DLMTR ||
                    'MKT_MISSION_DESC'              ||  C_DLMTR ||
                    'MKT_SALES_FLOOR_SIZE'          ||  C_DLMTR ||
                    'MKT_SALES_FLOOR_SIZE_DESC'     ||  C_DLMTR ||
                    'MKT_WAREHOUSE_SIZE'            ||  C_DLMTR ||
                    'MKT_WAREHOUSE_SIZE_DESC'       ||  C_DLMTR ||
                    'MKT_REAL_ESTATE_SETTING'       ||  C_DLMTR ||
                    'MKT_REAL_ESTATE_SETTING_DESC'  ||  C_DLMTR ||
                    'DOMAIN'                        ||  C_DLMTR ||
                    'DOMAIN_NAME'                   ||  C_DLMTR ||
                    'GROUP'                         ||  C_DLMTR ||
                    'GROUP_NAME'                    ||  C_DLMTR ||
                    'DIVISION'                      ||  C_DLMTR ||
                    'DIVISION_NAME'                 ||  C_DLMTR ||
                    'AREA'                          ||  C_DLMTR ||
                    'AREA_NAME'                     ||  C_DLMTR ||
                    'HIR_DISTRICT'                  ||  C_DLMTR ||
                    'HIR_DISTRICT_NAME'             ||  C_DLMTR ||
                    'CITY_SALES_MANAGER'            ||  C_DLMTR ||
                    'CITY_SALES_MANAGER_NAME'       ||  C_DLMTR ||
                    'PHONE_AREA_CODE'               ||  C_DLMTR ||
                    'PHONE_NUMBER'                  ||  C_DLMTR ;

    RETURN OUT_HEADER;

EXCEPTION 
    WHEN OTHERS THEN
         RAISE;
END GET_COMMON_HEADER;

FUNCTION GET_COUNTRY_ADDRESS_HEADER(
/****************************************************************************** 
This FUNCTION  Headers specific to country address.
created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
        COUNTRY_CODE              IN COST_CENTER.COUNTRY_CODE%TYPE) RETURN VARCHAR2
IS
    OUT_ADDRESS_HEADER VARCHAR2(4000);
BEGIN
    IF COUNTRY_CODE IN ('USA') THEN
        OUT_ADDRESS_HEADER :=   'ADDRESS_LINE_1'       ||  C_DLMTR ||
                                'ADDRESS_LINE_2'       ||  C_DLMTR ||
                                'ADDRESS_LINE_3'       ||  C_DLMTR ||
                                'CITY'                 ||  C_DLMTR ||
                                'STATE_CODE'           ||  C_DLMTR ||
                                'STATE_CODE_DESC'      ||  C_DLMTR ||
                                'ZIP_CODE'             ||  C_DLMTR ||
                                'ZIP_CODE_4'           ||  C_DLMTR ||
                                'COUNTY'               ||  C_DLMTR ||
                                'COUNTRY_CODE';
    ELSIF COUNTRY_CODE IN ('CAN') THEN
        OUT_ADDRESS_HEADER :=   'ADDRESS_LINE_1'       ||  C_DLMTR ||
                                'ADDRESS_LINE_2'       ||  C_DLMTR ||
                                'ADDRESS_LINE_3'       ||  C_DLMTR ||
                                'CITY'                 ||  C_DLMTR ||
                                'PROVINCE_CODE'        ||  C_DLMTR ||
                                'PROVINCE_CODE_DESC'   ||  C_DLMTR ||
                                'POSTAL_CODE'          ||  C_DLMTR ||
                                'COUNTRY_CODE';
    ELSIF  COUNTRY_CODE IN ('OTH') THEN
        OUT_ADDRESS_HEADER :=   'ADDRESS_LINE_1'       ||  C_DLMTR ||
                                'ADDRESS_LINE_2'       ||  C_DLMTR ||
                                'ADDRESS_LINE_3'       ||  C_DLMTR ||
                                'CITY'                 ||  C_DLMTR ||
                                'PROVINCE_CODE'        ||  C_DLMTR ||
                                'STATE_CODE'           ||  C_DLMTR ||
                                'POSTAL_CODE'          ||  C_DLMTR ||
                                'COUNTRY_CODE';
    ELSE 
        OUT_ADDRESS_HEADER := NULL;
    END IF;

    RETURN OUT_ADDRESS_HEADER;
EXCEPTION 
    WHEN OTHERS THEN
        RAISE;
END GET_COUNTRY_ADDRESS_HEADER;

PROCEDURE GENERATE_MAPS_FEED_FILE
/****************************************************************************** 
This PROCEDURE generates the CSV country based files for store cost centers for esri software
Used queries instead of views as Per Kieth for this interface.
created : 11/30/2017 mxv711 -- CCN Project Team...

******************************************************************************/
IS 
   CURSOR GET_COST_CENTERS IS 
       SELECT cost_center_code 
              ,country_code
         FROM COST_CENTER
        WHERE category = 'S' 
          AND NVL(open_date,SYSDATE) <> '01-JAN-2099'
          AND COUNTRY_CODE NOT IN ('BRB','MEX')
          AND close_date IS NULL; 

    v_clob                 CLOB;
    v_common_header        CLOB;
    v_usa_addr_header      varchar2(4000);
    v_can_addr_header      varchar2(4000);
    v_oth_addr_header      varchar2(4000);
    v_out_clob             CLOB;
    v_add_out_clob         CLOB;
    v_cc_map_feed_rec      CC_MAP_FEED_REC;
    v_error                VARCHAR2(1000);

    PATH                VARCHAR2(50) := 'CCN_DATAFILES'; -- DIRECTORY CREATED IN ORACLE DATABASE
    USA_FILENAME        VARCHAR2(50) := 'USA_CCN_MAPS_FEED' ||TO_CHAR(SYSDATE,'_MMDDYY')||'.csv';
    CAN_FILENAME        VARCHAR2(50) := 'CAN_CCN_MAPS_FEED' ||TO_CHAR(SYSDATE,'_MMDDYY')||'.csv';
    OTH_FILENAME        VARCHAR2(50) := 'OTH_CCN_MAPS_FEED' ||TO_CHAR(SYSDATE,'_MMDDYY')||'.csv';

    USA_OUTPUT_FILE         UTL_FILE.FILE_TYPE;
    CAN_OUTPUT_FILE         UTL_FILE.FILE_TYPE;
    OTH_OUTPUT_FILE         UTL_FILE.FILE_TYPE;
BEGIN
    USA_OUTPUT_FILE := UTL_FILE.FOPEN (PATH ,USA_FILENAME,'W',32767);
    CAN_OUTPUT_FILE := UTL_FILE.FOPEN (PATH ,CAN_FILENAME,'W',32767);
    OTH_OUTPUT_FILE := UTL_FILE.FOPEN (PATH ,OTH_FILENAME,'W',32767);

    v_common_header     := GET_COMMON_HEADER();
    v_usa_addr_header   := GET_COUNTRY_ADDRESS_HEADER('USA');
    v_can_addr_header   := GET_COUNTRY_ADDRESS_HEADER('CAN');
    v_oth_addr_header   := GET_COUNTRY_ADDRESS_HEADER('OTH');

    UTL_FILE.PUT_LINE(USA_OUTPUT_FILE, v_common_header || v_usa_addr_header , TRUE);
    UTL_FILE.PUT_LINE(CAN_OUTPUT_FILE, v_common_header || v_can_addr_header , TRUE);
    UTL_FILE.PUT_LINE(OTH_OUTPUT_FILE, v_common_header || v_oth_addr_header , TRUE);

    FOR cc_rec IN GET_COST_CENTERS LOOP
        GET_COST_CENTER_DETAILS(cc_rec.COST_CENTER_CODE, v_cc_map_feed_rec );

        GET_MARKETING_DETAILS(cc_rec.COST_CENTER_CODE, v_cc_map_feed_rec );

        GET_HIERARCHY_DETAILS(cc_rec.COST_CENTER_CODE, v_cc_map_feed_rec );

        GET_PHONE_DETAILS(cc_rec.COST_CENTER_CODE, v_cc_map_feed_rec );

        BUILD_CLOB(v_cc_map_feed_rec, v_out_clob);

        IF cc_rec.COUNTRY_CODE IN ('USA', 'PRI') THEN
            GET_USA_ADDRESS_DETAILS (cc_rec.COST_CENTER_CODE,v_add_out_clob );
            v_out_clob := v_out_clob || v_add_out_clob;
            UTL_FILE.PUT_LINE(USA_OUTPUT_FILE, v_out_clob , TRUE);
        ELSIF cc_rec.COUNTRY_CODE = 'CAN' THEN
            GET_CAN_ADDRESS_DETAILS (cc_rec.COST_CENTER_CODE,v_add_out_clob );
            v_out_clob := v_out_clob || v_add_out_clob;
            UTL_FILE.PUT_LINE(CAN_OUTPUT_FILE, v_out_clob , TRUE);
        ELSE
            GET_OTHER_ADDRESS_DETAILS(cc_rec.COST_CENTER_CODE,v_add_out_clob );
            v_out_clob := v_out_clob || v_add_out_clob;
            UTL_FILE.PUT_LINE(OTH_OUTPUT_FILE, v_out_clob, TRUE);
        END IF; 
        v_out_clob      := NULL;
        v_add_out_clob  := NULL;
    END LOOP;

    UTL_FILE.FCLOSE(USA_OUTPUT_FILE);
    UTL_FILE.FCLOSE(CAN_OUTPUT_FILE);
    UTL_FILE.FCLOSE(OTH_OUTPUT_FILE);

    MAIL_PKG.SEND_MAIL('CCN_MAPS_FEED');
EXCEPTION 
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR(v_cc_map_feed_rec.COST_CENTER_CODE, 'CCN_MAPS_FEED_PKG.GENERATE_MAPS_FEED_FILE' , SQLERRM, SQLCODE);
        RAISE;
END GENERATE_MAPS_FEED_FILE;

END CCN_MAPS_FEED_PKG;