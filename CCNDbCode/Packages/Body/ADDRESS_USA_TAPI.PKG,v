head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2012.09.14.14.24.54;	author TAL946;	state dead;
branches;
next	1.1;
deltatype	text;
kopt	kv;
permissions	444;
commitid	1bc050533e34664e;
filename	ADDRESS_USA_TAPI.PKG;

1.1
date	2012.04.18.17.09.16;	author sw\mdh01r;	state Exp;
branches;
next	;
deltatype	text;
kopt	kv;
permissions	666;
commitid	16c44f8ef53b6a4e;
filename	ADDRESS_USA_TAPI.PKG;


desc
@@


1.2
log
@
Committed on the Free edition of March Hare Software CVSNT Server.
Upgrade to CVS Suite for more features and support:
http://march-hare.com/cvsnt/
@
text
@create or replace
PACKAGE body ADDRESS_USA_tapi
IS
  -- insert
PROCEDURE ins(
    IN_DESTINATION_POINT IN ADDRESS_USA.DESTINATION_POINT%type DEFAULT NULL ,
    IN_ZIP_CODE_4        IN ADDRESS_USA.ZIP_CODE_4%type DEFAULT NULL ,
    IN_EFFECTIVE_DATE    IN ADDRESS_USA.EFFECTIVE_DATE%type ,
    IN_ZIP_CODE          IN ADDRESS_USA.ZIP_CODE%type DEFAULT NULL ,
    IN_COST_CENTER_CODE  IN ADDRESS_USA.COST_CENTER_CODE%type ,
    IN_STATE_CODE        IN ADDRESS_USA.STATE_CODE%type DEFAULT NULL ,
    IN_ADDRESS_LINE_3    IN ADDRESS_USA.ADDRESS_LINE_3%type DEFAULT NULL ,
    IN_ADDRESS_LINE_2    IN ADDRESS_USA.ADDRESS_LINE_2%type DEFAULT NULL ,
    IN_ADDRESS_LINE_1    IN ADDRESS_USA.ADDRESS_LINE_1%type DEFAULT NULL ,
    IN_EXPIRATION_DATE   IN ADDRESS_USA.EXPIRATION_DATE%type DEFAULT NULL ,
    IN_COUNTY            IN ADDRESS_USA.COUNTY%type DEFAULT NULL ,
    IN_FIPS_CODE         IN ADDRESS_USA.FIPS_CODE%type DEFAULT NULL ,
    IN_VALID_ADDRESS     IN ADDRESS_USA.VALID_ADDRESS%type DEFAULT NULL ,
    IN_ADDRESS_TYPE      IN ADDRESS_USA.ADDRESS_TYPE%type ,
    IN_CITY              IN ADDRESS_USA.CITY%type DEFAULT NULL ,
    IN_CHECK_DIGIT       IN ADDRESS_USA.CHECK_DIGIT%type DEFAULT NULL )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  INSERT
  INTO ADDRESS_USA
    (
      DESTINATION_POINT ,
      ZIP_CODE_4 ,
      EFFECTIVE_DATE ,
      ZIP_CODE ,
      COST_CENTER_CODE ,
      STATE_CODE ,
      ADDRESS_LINE_3 ,
      ADDRESS_LINE_2 ,
      ADDRESS_LINE_1 ,
      EXPIRATION_DATE ,
      COUNTY ,
      FIPS_CODE ,
      VALID_ADDRESS ,
      ADDRESS_TYPE ,
      CITY ,
      CHECK_DIGIT
    )
    VALUES
    (
      IN_DESTINATION_POINT ,
      IN_ZIP_CODE_4 ,
      IN_EFFECTIVE_DATE ,
      IN_ZIP_CODE ,
      IN_COST_CENTER_CODE ,
      IN_STATE_CODE ,
      IN_ADDRESS_LINE_3 ,
      IN_ADDRESS_LINE_2 ,
      IN_ADDRESS_LINE_1 ,
      IN_EXPIRATION_DATE ,
      IN_COUNTY ,
      IN_FIPS_CODE ,
      IN_VALID_ADDRESS ,
      IN_ADDRESS_TYPE ,
      IN_CITY ,
      IN_CHECK_DIGIT
    );

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADDRESS_OTH Insert');

END;

-- update
PROCEDURE upd
  (
    IN_DESTINATION_POINT IN ADDRESS_USA.DESTINATION_POINT%type DEFAULT NULL ,
    IN_ZIP_CODE_4        IN ADDRESS_USA.ZIP_CODE_4%type DEFAULT NULL ,
    IN_EFFECTIVE_DATE    IN ADDRESS_USA.EFFECTIVE_DATE%type ,
    IN_ZIP_CODE          IN ADDRESS_USA.ZIP_CODE%type DEFAULT NULL ,
    IN_COST_CENTER_CODE  IN ADDRESS_USA.COST_CENTER_CODE%type ,
    IN_STATE_CODE        IN ADDRESS_USA.STATE_CODE%type DEFAULT NULL ,
    IN_ADDRESS_LINE_3    IN ADDRESS_USA.ADDRESS_LINE_3%type DEFAULT NULL ,
    IN_ADDRESS_LINE_2    IN ADDRESS_USA.ADDRESS_LINE_2%type DEFAULT NULL ,
    IN_ADDRESS_LINE_1    IN ADDRESS_USA.ADDRESS_LINE_1%type DEFAULT NULL ,
    IN_EXPIRATION_DATE   IN ADDRESS_USA.EXPIRATION_DATE%type DEFAULT NULL ,
    IN_COUNTY            IN ADDRESS_USA.COUNTY%type DEFAULT NULL ,
    IN_FIPS_CODE         IN ADDRESS_USA.FIPS_CODE%type DEFAULT NULL ,
    IN_VALID_ADDRESS     IN ADDRESS_USA.VALID_ADDRESS%type DEFAULT NULL ,
    IN_ADDRESS_TYPE      IN ADDRESS_USA.ADDRESS_TYPE%type ,
    IN_CITY              IN ADDRESS_USA.CITY%type DEFAULT NULL ,
    IN_CHECK_DIGIT       IN ADDRESS_USA.CHECK_DIGIT%type DEFAULT NULL
  )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  UPDATE ADDRESS_USA
  SET DESTINATION_POINT  = IN_DESTINATION_POINT ,
    ZIP_CODE_4           = IN_ZIP_CODE_4 ,
    ZIP_CODE             = IN_ZIP_CODE ,
    STATE_CODE           = IN_STATE_CODE ,
    ADDRESS_LINE_3       = IN_ADDRESS_LINE_3 ,
    ADDRESS_LINE_2       = IN_ADDRESS_LINE_2 ,
    ADDRESS_LINE_1       = IN_ADDRESS_LINE_1 ,
    EXPIRATION_DATE      = IN_EXPIRATION_DATE ,
    COUNTY               = IN_COUNTY ,
    FIPS_CODE            = IN_FIPS_CODE ,
    VALID_ADDRESS        = IN_VALID_ADDRESS ,
    CITY                 = IN_CITY ,
    CHECK_DIGIT          = IN_CHECK_DIGIT
  WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
  AND ADDRESS_TYPE       = IN_ADDRESS_TYPE
  AND EFFECTIVE_DATE     = IN_EFFECTIVE_DATE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADDRESS_OTH Update');

END;

-- del
PROCEDURE del(
    IN_COST_CENTER_CODE IN ADDRESS_USA.COST_CENTER_CODE%type ,
    IN_ADDRESS_TYPE     IN ADDRESS_USA.ADDRESS_TYPE%type ,
    IN_EFFECTIVE_DATE   IN ADDRESS_USA.EFFECTIVE_DATE%type )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  DELETE
  FROM ADDRESS_USA
  WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
  AND ADDRESS_TYPE       = IN_ADDRESS_TYPE
  AND EFFECTIVE_DATE     = IN_EFFECTIVE_DATE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADDRESS_OTH Delete');

END;

END ADDRESS_USA_tapi;@


1.1
log
@*** empty log message ***
@
text
@@

