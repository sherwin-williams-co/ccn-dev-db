CREATE OR REPLACE PACKAGE BODY CCN_DRM_CALL_METHODS
/*********************************************************** 
This package will hold all the method specific calls

created : 01/25/2012 tal CCN project
revisions: 

************************************************************/
IS

PROCEDURE CALL_GET_HIER
/*******************************************************
Procedure to generate request to call webservice method
GETHIER takes input as the array string for 
values

Author : 

versions : init 07/20/2012 
*******************************************************/
( I_PARAM_VAL  IN CCN_DRM_APICALL.PARAMLIST
, O_REQUEST OUT XMLTYPE
)

IS

V_CONTEXT	VARCHAR2(200);
SQ 		NUMBER;
SE 		VARCHAR2(100);

V_OPPARAM	XMLTYPE;
V_DRMREQ	VARCHAR2(5000);
V_OP_RESP	VARCHAR2(32767);
V_METHOD VARCHAR2(100):='getHier';

BEGIN

V_CONTEXT := 'Call WSDL Reading procedure from CCN_DRM_APICALL';

CCN_DRM_APICALL.READ_WSDL_PARAMS(V_METHOD,V_OPPARAM);

V_CONTEXT := 'Call procedure for method getHier';

CCN_DRM_APICALL.GENERATE_REQUEST_STRING(I_PARAM_VAL,V_OPPARAM,V_DRMREQ);

	
	V_CONTEXT := 'Call procedure to execute the webservice';
	
	/* Call the procedure that executes webservice 
	   and get the response */
	
	CALL_WEB_SERVICE(V_DRMREQ, V_OP_RESP, V_METHOD);
	
	O_REQUEST := XMLTYPE(V_OP_RESP);
	
EXCEPTION WHEN OTHERS THEN

	SQ := SQLCODE;
	SE := SQLERRM;
	
	V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
  

	ERRPKG.RAISE_ERR(-20071,'CCN_DRM_CALL_METHODS.CALL_GET_HIER',V_CONTEXT);   
  
END   CALL_GET_HIER;


PROCEDURE CALL_INACTIVATENODES
/*******************************************************
Procedure to generate request to call webservice method
INACTIVATENODES takes input as the array string for 
values

Author : 

versions : init 07/20/2012 
*******************************************************/
( I_PARAM_VAL  IN CCN_DRM_APICALL.PARAMLIST
, O_REQUEST OUT XMLTYPE
)

IS

V_CONTEXT	VARCHAR2(200);
SQ 		NUMBER;
SE 		VARCHAR2(100);

V_OPPARAM	XMLTYPE;
V_DRMREQ	VARCHAR2(5000);
V_OP_RESP	VARCHAR2(32767);
V_METHOD VARCHAR2(100):='inactivateNodes';

BEGIN

V_CONTEXT := 'Call WSDL Reading procedure from CCN_DRM_APICALL';

CCN_DRM_APICALL.READ_WSDL_PARAMS(V_METHOD,V_OPPARAM);

V_CONTEXT := 'Call procedure for method inactivateNodes';

CCN_DRM_APICALL.GENERATE_REQUEST_STRING(I_PARAM_VAL,V_OPPARAM,V_DRMREQ);

	
	V_CONTEXT := 'Call procedure to execute the webservice';
	
	/* Call the procedure that executes webservice 
	   and get the response */
	
	CALL_WEB_SERVICE(V_DRMREQ, V_OP_RESP, V_METHOD);
	
	O_REQUEST := XMLTYPE(V_OP_RESP);
	
EXCEPTION WHEN OTHERS THEN

	SQ := SQLCODE;
	SE := SQLERRM;
	
	V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
  

	ERRPKG.RAISE_ERR(-20071,'CCN_DRM_CALL_METHODS.CALL_INACTIVATENODES',V_CONTEXT);   
  
END   CALL_INACTIVATENODES;

----

PROCEDURE CALL_INSERTNODE
/*******************************************************
Procedure to generate request to call webservice method
INSERTNODE takes input as the array string for 
values

Author : 

versions : init 07/20/2012 
*******************************************************/
( I_PARAM_VAL  IN CCN_DRM_APICALL.PARAMLIST
, O_REQUEST OUT XMLTYPE
)

IS

V_CONTEXT	VARCHAR2(200);
SQ 		NUMBER;
SE 		VARCHAR2(100);

V_OPPARAM	XMLTYPE;
V_DRMREQ	VARCHAR2(5000);
V_OP_RESP	VARCHAR2(32767);
V_METHOD VARCHAR2(100):='insertNode';

BEGIN

V_CONTEXT := 'Call WSDL Reading procedure from CCN_DRM_APICALL';

CCN_DRM_APICALL.READ_WSDL_PARAMS(V_METHOD,V_OPPARAM);

V_CONTEXT := 'Call procedure for method insertNode';

CCN_DRM_APICALL.GENERATE_REQUEST_STRING(I_PARAM_VAL,V_OPPARAM,V_DRMREQ);

	
	V_CONTEXT := 'Call procedure to execute the webservice';
	
	/* Call the procedure that executes webservice 
	   and get the response */
	
	CALL_WEB_SERVICE(V_DRMREQ, V_OP_RESP, V_METHOD);
	
	O_REQUEST := XMLTYPE(V_OP_RESP);
	
EXCEPTION WHEN OTHERS THEN

	SQ := SQLCODE;
	SE := SQLERRM;
	
	V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
  

	ERRPKG.RAISE_ERR(-20071,'CCN_DRM_CALL_METHODS.CALL_INSERTNODE',V_CONTEXT);   
  
END   CALL_INSERTNODE;

PROCEDURE CALL_ADDNODE
/*******************************************************
Procedure to generate request to call webservice method
ADDNODE takes input as the array string for 
values

Author : 

versions : init 07/20/2012 
*******************************************************/
( I_PARAM_VAL  IN CCN_DRM_APICALL.PARAMLIST
, O_REQUEST OUT XMLTYPE
)

IS

V_CONTEXT	VARCHAR2(200);
SQ 		NUMBER;
SE 		VARCHAR2(100);

V_OPPARAM	XMLTYPE;
V_DRMREQ	VARCHAR2(5000);
V_OP_RESP	VARCHAR2(32767);
V_METHOD VARCHAR2(100):='addNode';

BEGIN

V_CONTEXT := 'Call WSDL Reading procedure from CCN_DRM_APICALL';

CCN_DRM_APICALL.READ_WSDL_PARAMS(V_METHOD,V_OPPARAM);

V_CONTEXT := 'Call procedure for method addNode';

CCN_DRM_APICALL.GENERATE_REQUEST_STRING(I_PARAM_VAL,V_OPPARAM,V_DRMREQ);

	
	V_CONTEXT := 'Call procedure to execute the webservice';
	
	/* Call the procedure that executes webservice 
	   and get the response */
	
	CALL_WEB_SERVICE(V_DRMREQ, V_OP_RESP, V_METHOD);
	
	O_REQUEST := XMLTYPE(V_OP_RESP);
	
EXCEPTION WHEN OTHERS THEN

	SQ := SQLCODE;
	SE := SQLERRM;
	
	V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
  

	ERRPKG.RAISE_ERR(-20071,'CCN_DRM_CALL_METHODS.CALL_ADDNODE',V_CONTEXT);   
  
END   CALL_ADDNODE;

PROCEDURE CALL_ANNULNODE
/*******************************************************
Procedure to generate request to call webservice method
ANNULNODE takes input as the array string for 
values

Author : 

versions : init 07/20/2012 
*******************************************************/
( I_PARAM_VAL  IN CCN_DRM_APICALL.PARAMLIST
, O_REQUEST OUT XMLTYPE
)

IS

V_CONTEXT	VARCHAR2(200);
SQ 		NUMBER;
SE 		VARCHAR2(100);

V_OPPARAM	XMLTYPE;
V_DRMREQ	VARCHAR2(5000);
V_OP_RESP	VARCHAR2(32767);
V_METHOD VARCHAR2(100):='annulNode';

BEGIN

V_CONTEXT := 'Call WSDL Reading procedure from CCN_DRM_APICALL';

CCN_DRM_APICALL.READ_WSDL_PARAMS(V_METHOD,V_OPPARAM);

V_CONTEXT := 'Call procedure for method annulNode';

CCN_DRM_APICALL.GENERATE_REQUEST_STRING(I_PARAM_VAL,V_OPPARAM,V_DRMREQ);

	
	V_CONTEXT := 'Call procedure to execute the webservice';
	
	/* Call the procedure that executes webservice 
	   and get the response */
	
	CALL_WEB_SERVICE(V_DRMREQ, V_OP_RESP, V_METHOD);
	
	O_REQUEST := XMLTYPE(V_OP_RESP);
	
EXCEPTION WHEN OTHERS THEN

	SQ := SQLCODE;
	SE := SQLERRM;
	
	V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
  

	ERRPKG.RAISE_ERR(-20071,'CCN_DRM_CALL_METHODS.CALL_ANNULNODE',V_CONTEXT);   
  
END   CALL_ANNULNODE;

PROCEDURE CALL_DELETENODES
/*******************************************************
Procedure to generate request to call webservice method
DELETENODES takes input as the array string for 
values

Author : 

versions : init 07/20/2012 
*******************************************************/
( I_PARAM_VAL  IN CCN_DRM_APICALL.PARAMLIST
, O_REQUEST OUT XMLTYPE
)

IS

V_CONTEXT	VARCHAR2(200);
SQ 		NUMBER;
SE 		VARCHAR2(100);

V_OPPARAM	XMLTYPE;
V_DRMREQ	VARCHAR2(5000);
V_OP_RESP	VARCHAR2(32767);
V_METHOD VARCHAR2(100):='deleteNodes';

BEGIN

V_CONTEXT := 'Call WSDL Reading procedure from CCN_DRM_APICALL';

CCN_DRM_APICALL.READ_WSDL_PARAMS(V_METHOD,V_OPPARAM);

V_CONTEXT := 'Call procedure for method deleteNodes';

CCN_DRM_APICALL.GENERATE_REQUEST_STRING(I_PARAM_VAL,V_OPPARAM,V_DRMREQ);

	
	V_CONTEXT := 'Call procedure to execute the webservice';
	
	/* Call the procedure that executes webservice 
	   and get the response */
	
	CALL_WEB_SERVICE(V_DRMREQ, V_OP_RESP, V_METHOD);
	
	O_REQUEST := XMLTYPE(V_OP_RESP);
	
EXCEPTION WHEN OTHERS THEN

	SQ := SQLCODE;
	SE := SQLERRM;
	
	V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
  

	ERRPKG.RAISE_ERR(-20071,'CCN_DRM_CALL_METHODS.CALL_DELETENODES',V_CONTEXT);   
  
END   CALL_DELETENODES;

PROCEDURE CALL_COPYNODE
/*******************************************************
Procedure to generate request to call webservice method
COPYNODE takes input as the array string for 
values

Author : 

versions : init 07/20/2012 
*******************************************************/
( I_PARAM_VAL  IN CCN_DRM_APICALL.PARAMLIST
, O_REQUEST OUT XMLTYPE
)

IS

V_CONTEXT	VARCHAR2(200);
SQ 		NUMBER;
SE 		VARCHAR2(100);

V_OPPARAM	XMLTYPE;
V_DRMREQ	VARCHAR2(5000);
V_OP_RESP	VARCHAR2(32767);
V_METHOD VARCHAR2(100):='copyNode';

BEGIN

V_CONTEXT := 'Call WSDL Reading procedure from CCN_DRM_APICALL';

CCN_DRM_APICALL.READ_WSDL_PARAMS(V_METHOD,V_OPPARAM);

V_CONTEXT := 'Call procedure for method copyNode';

CCN_DRM_APICALL.GENERATE_REQUEST_STRING(I_PARAM_VAL,V_OPPARAM,V_DRMREQ);

	
	V_CONTEXT := 'Call procedure to execute the webservice';
	
	/* Call the procedure that executes webservice 
	   and get the response */
	
	CALL_WEB_SERVICE(V_DRMREQ, V_OP_RESP, V_METHOD);
	
	O_REQUEST := XMLTYPE(V_OP_RESP);
	
EXCEPTION WHEN OTHERS THEN

	SQ := SQLCODE;
	SE := SQLERRM;
	
	V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
  

	ERRPKG.RAISE_ERR(-20071,'CCN_DRM_CALL_METHODS.CALL_COPYNODE',V_CONTEXT);   
  
END   CALL_COPYNODE;

PROCEDURE CALL_SETHIERTOPNODE
/*******************************************************
Procedure to generate request to call webservice method
SETHIERTOPNODE takes input as the array string for 
values

Author : 

versions : init 07/20/2012 
*******************************************************/
( I_PARAM_VAL  IN CCN_DRM_APICALL.PARAMLIST
, O_REQUEST OUT XMLTYPE
)

IS

V_CONTEXT	VARCHAR2(200);
SQ 		NUMBER;
SE 		VARCHAR2(100);

V_OPPARAM	XMLTYPE;
V_DRMREQ	VARCHAR2(5000);
V_OP_RESP	VARCHAR2(32767);
V_METHOD VARCHAR2(100):='sethierTopNode';

BEGIN

V_CONTEXT := 'Call WSDL Reading procedure from CCN_DRM_APICALL';

CCN_DRM_APICALL.READ_WSDL_PARAMS(V_METHOD,V_OPPARAM);

V_CONTEXT := 'Call procedure for method setHierTopNode';

CCN_DRM_APICALL.GENERATE_REQUEST_STRING(I_PARAM_VAL,V_OPPARAM,V_DRMREQ);

	
	V_CONTEXT := 'Call procedure to execute the webservice';
	
	/* Call the procedure that executes webservice 
	   and get the response */
	
	CALL_WEB_SERVICE(V_DRMREQ, V_OP_RESP, V_METHOD);
	
	O_REQUEST := XMLTYPE(V_OP_RESP);
	
EXCEPTION WHEN OTHERS THEN

	SQ := SQLCODE;
	SE := SQLERRM;
	
	V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
  

	ERRPKG.RAISE_ERR(-20071,'CCN_DRM_CALL_METHODS.CALL_SETHIERTOPNODE',V_CONTEXT);   
  
END   CALL_SETHIERTOPNODE;

PROCEDURE CALL_MOVENODES
/*******************************************************
Procedure to generate request to call webservice method
MOVENODES takes input as the array string for 
values

Author : 

versions : init 07/20/2012 
*******************************************************/
( I_PARAM_VAL  IN CCN_DRM_APICALL.PARAMLIST
, O_REQUEST OUT XMLTYPE
)

IS

V_CONTEXT	VARCHAR2(200);
SQ 		NUMBER;
SE 		VARCHAR2(100);

V_OPPARAM	XMLTYPE;
V_DRMREQ	VARCHAR2(5000);
V_OP_RESP	VARCHAR2(32767);
V_METHOD VARCHAR2(100):='moveNodes';

BEGIN

V_CONTEXT := 'Call WSDL Reading procedure from CCN_DRM_APICALL';

CCN_DRM_APICALL.READ_WSDL_PARAMS(V_METHOD,V_OPPARAM);

V_CONTEXT := 'Call procedure for method moveNodes';

CCN_DRM_APICALL.GENERATE_REQUEST_STRING(I_PARAM_VAL,V_OPPARAM,V_DRMREQ);

	
	V_CONTEXT := 'Call procedure to execute the webservice';
	
	/* Call the procedure that executes webservice 
	   and get the response */
	
	CALL_WEB_SERVICE(V_DRMREQ, V_OP_RESP, V_METHOD);
	
	O_REQUEST := XMLTYPE(V_OP_RESP);
	
EXCEPTION WHEN OTHERS THEN

	SQ := SQLCODE;
	SE := SQLERRM;
	
	V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
  

	ERRPKG.RAISE_ERR(-20071,'CCN_DRM_CALL_METHODS.CALL_MOVENODES',V_CONTEXT);   
  
END   CALL_MOVENODES;

PROCEDURE CALL_GETNODE
/*******************************************************
Procedure to generate request to call webservice method
GETNODE takes input as the array string for 
values

Author : 

versions : init 07/20/2012 
*******************************************************/
( I_PARAM_VAL  IN CCN_DRM_APICALL.PARAMLIST
, O_REQUEST OUT XMLTYPE
)

IS

V_CONTEXT	VARCHAR2(200);
SQ 		NUMBER;
SE 		VARCHAR2(100);

V_OPPARAM	XMLTYPE;
V_DRMREQ	VARCHAR2(5000);
V_OP_RESP	VARCHAR2(32767);
V_METHOD VARCHAR2(100):='getNode';

BEGIN

V_CONTEXT := 'Call WSDL Reading procedure from CCN_DRM_APICALL';

CCN_DRM_APICALL.READ_WSDL_PARAMS(V_METHOD,V_OPPARAM);

V_CONTEXT := 'Call procedure for method getNode';

CCN_DRM_APICALL.GENERATE_REQUEST_STRING(I_PARAM_VAL,V_OPPARAM,V_DRMREQ);

	
	V_CONTEXT := 'Call procedure to execute the webservice';
	
	/* Call the procedure that executes webservice 
	   and get the response */
	
	CALL_WEB_SERVICE(V_DRMREQ, V_OP_RESP, V_METHOD);
	
	O_REQUEST := XMLTYPE(V_OP_RESP);
	
EXCEPTION WHEN OTHERS THEN

	SQ := SQLCODE;
	SE := SQLERRM;
	
	V_CONTEXT := V_CONTEXT || ' ' || SQ || ' ' || SE; 
  

	ERRPKG.RAISE_ERR(-20071,'CCN_DRM_CALL_METHODS.CALL_GETNODE',V_CONTEXT);   
  
END   CALL_GETNODE;

END CCN_DRM_CALL_METHODS;

