head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2012.09.14.14.24.53;	author TAL946;	state dead;
branches;
next	1.3;
deltatype	text;
kopt	kv;
permissions	444;
commitid	1bc050533e34664e;
filename	ADDRESS_CAN_TAPI.pkg;

1.3
date	2012.06.12.20.50.39;	author sw\kdp465;	state Exp;
branches;
next	1.2;
deltatype	text;
kopt	kv;
permissions	666;
commitid	17904fd7ab9e5d0f;
filename	ADDRESS_CAN_TAPI.pkg;

1.2
date	2012.06.12.20.42.27;	author sw\cbd33r;	state Exp;
branches;
next	1.1;
deltatype	text;
kopt	kv;
permissions	666;
commitid	32c4fd7a9b256c8;
filename	ADDRESS_CAN_TAPI.pkg;

1.1
date	2012.04.18.14.15.28;	author sw\mdh01r;	state Exp;
branches;
next	;
deltatype	text;
kopt	kv;
permissions	666;
commitid	4304f8ecc7f6548;
filename	ADDRESS_CAN_TAPI.pkg;


desc
@@


1.4
log
@
Committed on the Free edition of March Hare Software CVSNT Server.
Upgrade to CVS Suite for more features and support:
http://march-hare.com/cvsnt/
@
text
@create or replace
PACKAGE body ADDRESS_CAN_tapi
IS
--testing 2

-- insert
PROCEDURE ins(
    IN_EXPIRATION_DATE  IN ADDRESS_CAN.EXPIRATION_DATE%type DEFAULT NULL ,
    IN_EFFECTIVE_DATE   IN ADDRESS_CAN.EFFECTIVE_DATE%type ,
    IN_VALID_ADDRESS    IN ADDRESS_CAN.VALID_ADDRESS%type DEFAULT NULL ,
    IN_COST_CENTER_CODE IN ADDRESS_CAN.COST_CENTER_CODE%type ,
    IN_ADDRESS_TYPE     IN ADDRESS_CAN.ADDRESS_TYPE%type ,
    IN_POSTAL_CODE      IN ADDRESS_CAN.POSTAL_CODE%type DEFAULT NULL ,
    IN_CITY             IN ADDRESS_CAN.CITY%type DEFAULT NULL ,
    IN_PROVINCE_CODE    IN ADDRESS_CAN.PROVINCE_CODE%type DEFAULT NULL ,
    IN_ADDRESS_LINE_3   IN ADDRESS_CAN.ADDRESS_LINE_3%type DEFAULT NULL ,
    IN_ADDRESS_LINE_2   IN ADDRESS_CAN.ADDRESS_LINE_2%type DEFAULT NULL ,
    IN_ADDRESS_LINE_1   IN ADDRESS_CAN.ADDRESS_LINE_1%type DEFAULT NULL )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  INSERT
  INTO ADDRESS_CAN
    (
      EXPIRATION_DATE ,
      EFFECTIVE_DATE ,
      VALID_ADDRESS ,
      COST_CENTER_CODE ,
      ADDRESS_TYPE ,
      POSTAL_CODE ,
      CITY ,
      PROVINCE_CODE ,
      ADDRESS_LINE_3 ,
      ADDRESS_LINE_2 ,
      ADDRESS_LINE_1
    )
    VALUES
    (
      IN_EXPIRATION_DATE ,
      IN_EFFECTIVE_DATE ,
      IN_VALID_ADDRESS ,
      IN_COST_CENTER_CODE ,
      IN_ADDRESS_TYPE ,
      IN_POSTAL_CODE ,
      IN_CITY ,
      IN_PROVINCE_CODE ,
      IN_ADDRESS_LINE_3 ,
      IN_ADDRESS_LINE_2 ,
      IN_ADDRESS_LINE_1
    );

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADDRESS_CAN Insert');

END;


-- update
PROCEDURE upd
  (
    IN_EXPIRATION_DATE  IN ADDRESS_CAN.EXPIRATION_DATE%type DEFAULT NULL ,
    IN_EFFECTIVE_DATE   IN ADDRESS_CAN.EFFECTIVE_DATE%type ,
    IN_VALID_ADDRESS    IN ADDRESS_CAN.VALID_ADDRESS%type DEFAULT NULL ,
    IN_COST_CENTER_CODE IN ADDRESS_CAN.COST_CENTER_CODE%type ,
    IN_ADDRESS_TYPE     IN ADDRESS_CAN.ADDRESS_TYPE%type ,
    IN_POSTAL_CODE      IN ADDRESS_CAN.POSTAL_CODE%type DEFAULT NULL ,
    IN_CITY             IN ADDRESS_CAN.CITY%type DEFAULT NULL ,
    IN_PROVINCE_CODE    IN ADDRESS_CAN.PROVINCE_CODE%type DEFAULT NULL ,
    IN_ADDRESS_LINE_3   IN ADDRESS_CAN.ADDRESS_LINE_3%type DEFAULT NULL ,
    IN_ADDRESS_LINE_2   IN ADDRESS_CAN.ADDRESS_LINE_2%type DEFAULT NULL ,
    IN_ADDRESS_LINE_1   IN ADDRESS_CAN.ADDRESS_LINE_1%type DEFAULT NULL
  )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  UPDATE ADDRESS_CAN
  SET EXPIRATION_DATE    = IN_EXPIRATION_DATE ,
    VALID_ADDRESS        = IN_VALID_ADDRESS ,
    POSTAL_CODE          = IN_POSTAL_CODE ,
    CITY                 = IN_CITY ,
    PROVINCE_CODE        = IN_PROVINCE_CODE ,
    ADDRESS_LINE_3       = IN_ADDRESS_LINE_3 ,
    ADDRESS_LINE_2       = IN_ADDRESS_LINE_2 ,
    ADDRESS_LINE_1       = IN_ADDRESS_LINE_1
  WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
  AND ADDRESS_TYPE       = IN_ADDRESS_TYPE
  AND EFFECTIVE_DATE     = IN_EFFECTIVE_DATE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADDRESS_CAN Update');

END;


-- del
PROCEDURE del(
    IN_COST_CENTER_CODE IN ADDRESS_CAN.COST_CENTER_CODE%type ,
    IN_ADDRESS_TYPE     IN ADDRESS_CAN.ADDRESS_TYPE%type ,
    IN_EFFECTIVE_DATE   IN ADDRESS_CAN.EFFECTIVE_DATE%type )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  DELETE
  FROM ADDRESS_CAN
  WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE
  AND ADDRESS_TYPE       = IN_ADDRESS_TYPE
  AND EFFECTIVE_DATE     = IN_EFFECTIVE_DATE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'ADDRESS_CAN Delete');

END;

END ADDRESS_CAN_tapi;
@


1.3
log
@what
@
text
@@


1.2
log
@*** empty log message ***
@
text
@d4 1
a4 1
--testing
d159 1
a159 1
END ADDRESS_CAN_tapi;@


1.1
log
@*** empty log message ***
@
text
@d4 1
a4 1

@

