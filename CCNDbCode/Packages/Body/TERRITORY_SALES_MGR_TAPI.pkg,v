head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2012.09.14.15.09.18;	author TAL946;	state dead;
branches;
next	1.1;
deltatype	text;
kopt	kv;
permissions	444;
commitid	14185053489c084a;
filename	TERRITORY_SALES_MGR_TAPI.pkg;

1.1
date	2012.04.23.14.21.56;	author sw\BLRA2R;	state Exp;
branches;
next	;
deltatype	text;
kopt	kv;
permissions	666;
commitid	15004f95658370e6;
filename	TERRITORY_SALES_MGR_TAPI.pkg;


desc
@@


1.2
log
@
Committed on the Free edition of March Hare Software CVSNT Server.
Upgrade to CVS Suite for more features and support:
http://march-hare.com/cvsnt/
@
text
@create or replace
PACKAGE body TERRITORY_SALES_MGR_tapi
IS
  -- insert
PROCEDURE ins(
    IN_EXPIRATION_DATE        IN TERRITORY_SALES_MGR.EXPIRATION_DATE%type DEFAULT NULL ,
    IN_EFFECTIVE_DATE         IN TERRITORY_SALES_MGR.EFFECTIVE_DATE%type DEFAULT NULL ,
    IN_TERRITORY_SLS_MGR_DAD  IN TERRITORY_SALES_MGR.TERRITORY_SLS_MGR_DAD%type DEFAULT NULL ,
    IN_MIDDLE_INITIAL         IN TERRITORY_SALES_MGR.MIDDLE_INITIAL%type DEFAULT NULL ,
    IN_FIRST_NAME             IN TERRITORY_SALES_MGR.FIRST_NAME%type DEFAULT NULL ,
    IN_TERRITORY_SLS_MGR_TYPE IN TERRITORY_SALES_MGR.TERRITORY_SLS_MGR_TYPE%type DEFAULT NULL ,
    IN_LAST_NAME              IN TERRITORY_SALES_MGR.LAST_NAME%type DEFAULT NULL ,
    IN_TERRITORY_SLS_MGR_CODE IN TERRITORY_SALES_MGR.TERRITORY_SLS_MGR_CODE%type ,
    IN_GEMS_EMPLOYEE_ID       IN TERRITORY_SALES_MGR.GEMS_EMPLOYEE_ID%type DEFAULT NULL )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  INSERT
  INTO TERRITORY_SALES_MGR
    (
      EXPIRATION_DATE ,
      EFFECTIVE_DATE ,
      TERRITORY_SLS_MGR_DAD ,
      MIDDLE_INITIAL ,
      FIRST_NAME ,
      TERRITORY_SLS_MGR_TYPE ,
      LAST_NAME ,
      TERRITORY_SLS_MGR_CODE ,
      GEMS_EMPLOYEE_ID
    )
    VALUES
    (
      IN_EXPIRATION_DATE ,
      IN_EFFECTIVE_DATE ,
      IN_TERRITORY_SLS_MGR_DAD ,
      IN_MIDDLE_INITIAL ,
      IN_FIRST_NAME ,
      IN_TERRITORY_SLS_MGR_TYPE ,
      IN_LAST_NAME ,
      IN_TERRITORY_SLS_MGR_CODE ,
      IN_GEMS_EMPLOYEE_ID
    );

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'TERRITORY_SALES_MGR Insert');

END;

-- update
PROCEDURE upd
  (
    IN_EXPIRATION_DATE        IN TERRITORY_SALES_MGR.EXPIRATION_DATE%type DEFAULT NULL ,
    IN_EFFECTIVE_DATE         IN TERRITORY_SALES_MGR.EFFECTIVE_DATE%type DEFAULT NULL ,
    IN_TERRITORY_SLS_MGR_DAD  IN TERRITORY_SALES_MGR.TERRITORY_SLS_MGR_DAD%type DEFAULT NULL ,
    IN_MIDDLE_INITIAL         IN TERRITORY_SALES_MGR.MIDDLE_INITIAL%type DEFAULT NULL ,
    IN_FIRST_NAME             IN TERRITORY_SALES_MGR.FIRST_NAME%type DEFAULT NULL ,
    IN_TERRITORY_SLS_MGR_TYPE IN TERRITORY_SALES_MGR.TERRITORY_SLS_MGR_TYPE%type DEFAULT NULL ,
    IN_LAST_NAME              IN TERRITORY_SALES_MGR.LAST_NAME%type DEFAULT NULL ,
    IN_TERRITORY_SLS_MGR_CODE IN TERRITORY_SALES_MGR.TERRITORY_SLS_MGR_CODE%type ,
    IN_GEMS_EMPLOYEE_ID       IN TERRITORY_SALES_MGR.GEMS_EMPLOYEE_ID%type DEFAULT NULL
  )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  UPDATE TERRITORY_SALES_MGR
  SET EXPIRATION_DATE          = IN_EXPIRATION_DATE ,
    EFFECTIVE_DATE             = IN_EFFECTIVE_DATE ,
    TERRITORY_SLS_MGR_DAD      = IN_TERRITORY_SLS_MGR_DAD ,
    MIDDLE_INITIAL             = IN_MIDDLE_INITIAL ,
    FIRST_NAME                 = IN_FIRST_NAME ,
    TERRITORY_SLS_MGR_TYPE     = IN_TERRITORY_SLS_MGR_TYPE ,
    LAST_NAME                  = IN_LAST_NAME ,
    GEMS_EMPLOYEE_ID           = IN_GEMS_EMPLOYEE_ID
  WHERE TERRITORY_SLS_MGR_CODE = IN_TERRITORY_SLS_MGR_CODE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'TERRITORY_SALES_MGR Update');

END;

-- del
PROCEDURE del(
    IN_TERRITORY_SLS_MGR_CODE IN TERRITORY_SALES_MGR.TERRITORY_SLS_MGR_CODE%type )
IS

--declare
/**************************************************
	variables used in error handling
**************************************************/
	v_code number;

BEGIN
  DELETE
  FROM TERRITORY_SALES_MGR
  WHERE TERRITORY_SLS_MGR_CODE = IN_TERRITORY_SLS_MGR_CODE;

EXCEPTION

/************************************************************
	on any error 
	   send the sql error code and the procedure name
	   to the error processor
************************************************************/

	WHEN others then 
	     v_code := SQLCODE;
	     errpkg.raise_err(v_code,'TERRITORY_SALES_MGR Delete');

END;

END TERRITORY_SALES_MGR_tapi;@


1.1
log
@*** empty log message ***
@
text
@@

