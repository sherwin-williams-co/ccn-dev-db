create or replace PACKAGE BODY CCN_NON_TAXWARE_PKG
AS 

PROCEDURE NON_TAXWARE_CURR_CONV_UI_SP (
/*******************************************************************************
    NON_TAXWARE_CURR_CONV_UI_SP   --    NON_TAXWARE_CURR_CONV_UI_SP Stored Procedure

    This procedure is intended to return a ref cursor with data from
    from the CURRENCY_CONVERSION, NON_TAXWARE_RATES, NON_TAXWARE_RATES_USA, with
    Country code as input

created : 11/01/2017 axt754 CCN Project....
*******************************************************************************/
    IN_COUNTRY_CODE                   IN     CURRENCY_CONVERSION.COUNTRY_CODE%TYPE,
    IN_STATE_CODE                     IN     NON_TAXWARE_RATES_USA.STATE_CODE%TYPE,
    OUT_CURR_CONV_REF_CUR                OUT REF_CURSOR,
    OUT_NON_TW_RATES_REF_CUR             OUT REF_CURSOR
    )
IS
    V_CODE                      NUMBER;
    INVALID_COUNTRY_CODE_ERR    EXCEPTION;
    COUNTRY_NOT_FOUND_ERR       EXCEPTION;
    V_COUNT                     NUMBER := 0;
BEGIN
    --VALIDATION OF COUNTRY_CODE INPUT
    IF  NOT COMMON_TOOLS.CODE_DETAIL_VALID ('COUNTRY_CODE',IN_COUNTRY_CODE) THEN
        RAISE INVALID_COUNTRY_CODE_ERR;
    END IF;
    
    IF UPPER(IN_COUNTRY_CODE) = 'USA' THEN                                        
        --CALL NON_TAXWARE_RATES_USA REF CURSOR
        CCN_TABLE_IU_PKG.NON_TAXWARE_RATES_USA_S_SP(IN_COUNTRY_CODE
                                                    ,NULL
                                                    ,IN_STATE_CODE
                                                    ,OUT_NON_TW_RATES_REF_CUR);
    ELSE
        SELECT COUNT(*)
          INTO V_COUNT
          FROM CURRENCY_CONVERSION
         WHERE UPPER(COUNTRY_CODE) = UPPER(IN_COUNTRY_CODE);
         
        IF V_COUNT = 0 THEN
            RAISE COUNTRY_NOT_FOUND_ERR;   
        END IF;
        --CALL CURRENCY_CONVERSION REF CURSOR
        CCN_TABLE_IU_PKG.NON_TAXWARE_CURR_CONV_S_SP(IN_COUNTRY_CODE
                                                    ,OUT_CURR_CONV_REF_CUR);
                                                    
        --CALL NON_TAXWARE_RATES REF CURSOR
        CCN_TABLE_IU_PKG.NON_TAXWARE_RATES_S_SP(IN_COUNTRY_CODE
                                                ,NULL
                                                ,OUT_NON_TW_RATES_REF_CUR);
    END IF;  
EXCEPTION
    WHEN COUNTRY_NOT_FOUND_ERR THEN
        V_CODE := ERRNUMS.EN_COUNTRY_NOT_FOUND_ERR;
        ERRPKG.RAISE_ERR(V_CODE
                        ,'NON_TAXWARE_CURR_CONV_UI_SP.COUNTRY_NOT_FOUND_ERR '
                        ,'Entered country_code was "' || IN_COUNTRY_CODE || '". ' ||'CCN_NON_TAXWARE_PKG ' || 'Country code not found - Would you like to Add? ');
    WHEN INVALID_COUNTRY_CODE_ERR THEN
        V_CODE := ERRNUMS.EN_INVALID_CODE_DETAIL_ERR;
        ERRPKG.RAISE_ERR(V_CODE
                        ,'NON_TAXWARE_CURR_CONV_UI_SP.INVALID_COUNTRY_CODE_ERR '
                        ,'Entered country_code was "' || IN_COUNTRY_CODE || '". ' ||'CCN_NON_TAXWARE_PKG ' || 'Country code must be found on "code_detail table ". ');
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE
                        ,SUBSTR(SQLERRM,1, 500) ||'NON_TAXWARE_CURR_CONV_UI_SP ERROR ');
                        
END NON_TAXWARE_CURR_CONV_UI_SP;

PROCEDURE NON_TW_CURR_CONV_CC_UI_SP(
/*******************************************************************************
    NON_TAXWARE_CURR_CONV_UI_SP   --    NON_TAXWARE_CURR_CONV_UI_SP Stored Procedure

    This procedure is intended to return a ref cursor with data from
    from the CURRENCY_CONVERSION, NON_TAXWARE_RATES, NON_TAXWARE_RATES_USA, with
    cost center code as input

created : 11/01/2017 axt754 CCN Project....
*******************************************************************************/
    IN_COST_CENTER                   IN      COST_CENTER.COST_CENTER_CODE%TYPE,
    OUT_CURR_CONV_REF_CUR                OUT REF_CURSOR,
    OUT_NON_TW_RATES_REF_CUR             OUT REF_CURSOR)
IS 
    V_CODE                      NUMBER;
    V_COST_CENTER               COST_CENTER%ROWTYPE;
    V_ADDRESS_ROW               ADDRESS_USA%ROWTYPE;
    V_STATE_CODE                VARCHAR2(10);
BEGIN
    SELECT *
      INTO V_COST_CENTER
      FROM COST_CENTER
     WHERE UPPER(COST_CENTER_CODE) = UPPER(IN_COST_CENTER);
   
    IF UPPER(V_COST_CENTER.COUNTRY_CODE) = 'USA' THEN
        IF V_COST_CENTER.CATEGORY = 'T' THEN
            SELECT HOME_STORE
              INTO V_COST_CENTER.COST_CENTER_CODE
              FROM TERRITORY
             WHERE UPPER(COST_CENTER_CODE) = UPPER(V_COST_CENTER.COST_CENTER_CODE);
        ELSIF  V_COST_CENTER.CATEGORY = 'D' THEN
             SELECT HOME_STORE
               INTO V_COST_CENTER.COST_CENTER_CODE
               FROM DISPATCH_TERMINAL
              WHERE UPPER(COST_CENTER_CODE) = UPPER(V_COST_CENTER.COST_CENTER_CODE);
        END IF;
        
        BEGIN
            SELECT *
              INTO V_ADDRESS_ROW
              FROM ADDRESS_USA
             WHERE UPPER(COST_CENTER_CODE) = UPPER(V_COST_CENTER.COST_CENTER_CODE)
               AND ADDRESS_TYPE = 'M'
               AND ((EFFECTIVE_DATE   <= SYSDATE  OR ADDRESS_TYPE = 'F')
               AND (EXPIRATION_DATE IS NULL OR EXPIRATION_DATE  >=  SYSDATE));
        EXCEPTION
            WHEN OTHERS THEN
                NULL;
        END;
           
        IF V_ADDRESS_ROW.STATE_CODE IS NOT NULL THEN
            --CALL NON_TAXWARE_RATES_USA REF CURSOR
            CCN_TABLE_IU_PKG.NON_TAXWARE_RATES_USA_S_SP(V_COST_CENTER.COUNTRY_CODE
                                                        ,V_COST_CENTER.STATEMENT_TYPE
                                                        ,V_ADDRESS_ROW.STATE_CODE
                                                        ,OUT_NON_TW_RATES_REF_CUR);
        END IF;
    ELSE
        --CALL CURRENCY_CONVERSION REF CURSOR
        CCN_TABLE_IU_PKG.NON_TAXWARE_CURR_CONV_S_SP(V_COST_CENTER.COUNTRY_CODE
                                                    ,OUT_CURR_CONV_REF_CUR);
                                                    
        --CALL NON_TAXWARE_RATES REF CURSOR
        CCN_TABLE_IU_PKG.NON_TAXWARE_RATES_S_SP(V_COST_CENTER.COUNTRY_CODE
                                                ,V_COST_CENTER.STATEMENT_TYPE
                                                ,OUT_NON_TW_RATES_REF_CUR);
    END IF;  
EXCEPTION                                                    
   WHEN OTHERS THEN
         V_CODE := SQLCODE;
         errpkg.raise_err(v_code
                         ,substr(SQLERRM,1, 500) || ' ' || 'NON_TW_CURR_CONV_CC_UI_SP Error ');
END NON_TW_CURR_CONV_CC_UI_SP;

PROCEDURE NON_TAX_CURR_CONV_UI_UPSERT_SP (
/******************************************************************************
    NON_TAX_CURR_CONV_UI_UPSERT_SP   --    NON_TAX_CURR_CONV_UI_UPSERT_SP User Interface Update/Insert Procedure

    This procedure is intended to update the database for the following tables
       used in the Non Taxware UI.

    Tables:
            currency_conversion
created : 09/06/2017 axt754 CCN Project....
*******************************************************************************/
--
    IN_ROW_DATA      IN  CLOB
    ,IN_USER_ID      IN  VARCHAR2
    ,IN_COUNTRY_CODE IN  VARCHAR2)
IS
    V_ROW_DATA                  SYS.XMLTYPE := XMLTYPE(IN_ROW_DATA);
    V_CODE                      NUMBER;
    V_ERRM                      VARCHAR2(500);
    V_XML_CURR_CONV_FRAG        CLOB;
    V_CURR_CONV_ROWTYPE         CURRENCY_CONVERSION%ROWTYPE;
    V_BREAK                     VARCHAR2(100);
BEGIN
    --********************************************************************************
    -- CUrrency Conversion insert/update process 
    --*********************************************************************************
    IF (V_ROW_DATA.EXISTSNODE('/NON_TAXWARE_UI/CURRENCY_CONVERSION_TBL/CURRENCY_CONVERSION') = 1) THEN
        V_XML_CURR_CONV_FRAG        := V_ROW_DATA.EXTRACT('/NON_TAXWARE_UI/CURRENCY_CONVERSION_TBL/CURRENCY_CONVERSION').GETCLOBVAL();
        -- call Procedure to insert/update into CURRENCY_CONVERSION
        V_BREAK := 'Convert XML to ROWTYPE';
        CCN_TABLE_IU_PKG.NON_TAX_CURR_CONV_ROWTYPE_SP ('CURRENCY_CONVERSION',
                                                        V_XML_CURR_CONV_FRAG,
                                                        V_CURR_CONV_ROWTYPE);
        -- Assign Created By                                         
        V_CURR_CONV_ROWTYPE.CREATED_BY := IN_USER_ID;
        
        -- Assign Country Code
        V_CURR_CONV_ROWTYPE.COUNTRY_CODE := IN_COUNTRY_CODE;
        
        -- Assign Currency type
        V_CURR_CONV_ROWTYPE.CURRENCY_TYPE := CCN_COMMON_TOOLS.GET_CURRENCY_CODE(IN_COUNTRY_CODE);
        
        V_BREAK := 'Insert into CURRENCY_CONVERSION';
        CCN_TABLE_IU_PKG.NON_TAXWARE_CURR_CONV_I_SP (V_CURR_CONV_ROWTYPE);
    END IF;
    
EXCEPTION
    WHEN OTHERS THEN
        V_CODE  := SQLCODE;
        V_ERRM  := SUBSTR(SQLERRM,1,500);
        ERRPKG.RAISE_ERR(V_CODE
                         ,V_ERRM ||'NON_TAX_CURR_CONV_UI_UPSERT_SP Error Last Break Point was ' || V_BREAK);
END NON_TAX_CURR_CONV_UI_UPSERT_SP;

PROCEDURE NON_TAXWARE_RATES_UI_UPSERT_SP (
/******************************************************************************
    NON_TAXWARE_RATES_UI_UPSERT_SP   --    NON_TAXWARE_RATES_UI_UPSERT_SP User Interface Update/Insert Procedure

    This procedure is intended to update the database for the following tables
       used in the Non Taxware UI.

    Tables:
            non_taxware_rates

created : 09/06/2017 axt754 CCN Project....
*******************************************************************************/
--
    IN_ROW_DATA      IN  CLOB
    ,IN_USER_ID      IN  VARCHAR2
    ,IN_COUNTRY_CODE IN  VARCHAR2)
IS

    V_ROW_DATA                  SYS.XMLTYPE := XMLTYPE(IN_ROW_DATA);
    V_CODE                      NUMBER;
    V_ERRM                      VARCHAR2(500);
    V_XML_NON_TW_RATES_FRAG     CLOB;
    V_NON_TW_RATES_ROWTYPE      NON_TAXWARE_RATES%ROWTYPE;
    V_BREAK                     VARCHAR2(100);
    V_NT_COUNT                  NUMBER := 1;
BEGIN
    --********************************************************************************
    -- NON_TAXWARE_RATES insert/update process 
    --*********************************************************************************
    WHILE V_ROW_DATA.EXISTSNODE('/NON_TAXWARE_UI/NON_TAXWARE_RATES_TBL/NON_TAXWARE_RATES[' ||V_NT_COUNT|| ']') = 1 LOOP
        V_XML_NON_TW_RATES_FRAG        := V_ROW_DATA.EXTRACT('/NON_TAXWARE_UI/NON_TAXWARE_RATES_TBL/NON_TAXWARE_RATES[' ||V_NT_COUNT|| ']').GETCLOBVAL();
        -- call Procedure to insert/update into NON_TAXWARE_RATES
        -- Convert XML to ROWTYPE
        V_BREAK := 'Convert XML to ROWTYPE';
        CCN_TABLE_IU_PKG.NON_TAXWARE_RATES_ROWTYPE_SP ('NON_TAXWARE_RATES',
                                                        V_XML_NON_TW_RATES_FRAG,
                                                        V_NON_TW_RATES_ROWTYPE);
        -- Assign Created by
        V_NON_TW_RATES_ROWTYPE.CREATED_BY := IN_USER_ID;

        -- Assign Country Code
        V_NON_TW_RATES_ROWTYPE.COUNTRY_CODE := IN_COUNTRY_CODE;
          
        V_BREAK := 'Insert into NON_TAXWARE_RATES';
        CCN_TABLE_IU_PKG.NON_TAXWARE_RATES_I_SP (V_NON_TW_RATES_ROWTYPE);
        V_NT_COUNT := V_NT_COUNT +1;
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN
        V_CODE  := SQLCODE;
        V_ERRM  := SUBSTR(SQLERRM,1,500);
        ERRPKG.RAISE_ERR(V_CODE
                         ,V_ERRM ||'NON_TAXWARE_RATES_UI_UPSERT_SP Error Last Break Point was ' || V_BREAK);
END NON_TAXWARE_RATES_UI_UPSERT_SP;

PROCEDURE NON_TAX_RATES_USA_UI_UPSERT_SP (
/******************************************************************************
    NON_TAX_RATES_USA_UI_UPSERT_SP   --    NON_TAX_RATES_USA_UI_UPSERT_SP User Interface Update/Insert Procedure

    This procedure is intended to update the database for the following tables
Created : 09/06/2017 axt754 CCN Project....
*******************************************************************************/
--
    IN_ROW_DATA      IN  CLOB
    ,IN_USER_ID      IN  VARCHAR2
    ,IN_COUNTRY_CODE IN  VARCHAR2)
IS
           
    V_ROW_DATA                  SYS.XMLTYPE := XMLTYPE(IN_ROW_DATA);
    V_CODE                      NUMBER;
    V_ERRM                      VARCHAR2(500);
    V_XML_NON_TW_RATES_USA_FRAG CLOB;
    V_NON_TW_RATES_USA_ROWTYPE  NON_TAXWARE_RATES_USA%ROWTYPE;
    V_BREAK                     VARCHAR2(100);
    V_NT_USA_COUNT              NUMBER := 1;
BEGIN

    --********************************************************************************
    -- NON_TAXWARE_RATES_USA insert/update process 
    --*********************************************************************************
    WHILE V_ROW_DATA.EXISTSNODE('/NON_TAXWARE_UI/NON_TAXWARE_RATES_USA_TBL/NON_TAXWARE_RATES_USA[' ||V_NT_USA_COUNT|| ']') = 1 LOOP
        V_XML_NON_TW_RATES_USA_FRAG        := V_ROW_DATA.EXTRACT('/NON_TAXWARE_UI/NON_TAXWARE_RATES_USA_TBL/NON_TAXWARE_RATES_USA[' ||V_NT_USA_COUNT|| ']').GETCLOBVAL();
        -- call Procedure to insert/update into NON_TAXWARE_RATES_USA
        -- Convert XML to ROWTYPE
        V_BREAK := 'Convert XML to ROWTYPE';
        CCN_TABLE_IU_PKG.NON_TAX_RATES_USA_ROWTYPE_SP ('NON_TAXWARE_RATES_USA',
                                                        V_XML_NON_TW_RATES_USA_FRAG,
                                                        V_NON_TW_RATES_USA_ROWTYPE);
        -- Assign Created by
        V_NON_TW_RATES_USA_ROWTYPE.CREATED_BY := IN_USER_ID;
          
        -- Assign Country Code
        V_NON_TW_RATES_USA_ROWTYPE.COUNTRY_CODE := IN_COUNTRY_CODE;
          
        V_BREAK := 'Insert into NON_TAXWARE_RATES_USA';
        CCN_TABLE_IU_PKG.NON_TAXWARE_RATES_USA_I_SP (V_NON_TW_RATES_USA_ROWTYPE);
        V_NT_USA_COUNT := V_NT_USA_COUNT +1;
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN
        V_CODE  := SQLCODE;
        V_ERRM  := SUBSTR(SQLERRM,1,500);
        ERRPKG.RAISE_ERR(V_CODE
                         ,V_ERRM ||'NON_TAX_RATES_USA_UI_UPSERT_SP Error Last Break Point was ' || V_BREAK);
END NON_TAX_RATES_USA_UI_UPSERT_SP;

PROCEDURE NON_TAXWARE_UI_UPSERT_SP(
/******************************************************************************
This procedure takes XML which has COUNTRY_CODE and does the following
1)Inserts/Updates CURRENCY CONVERSION Information for given country code other than USA
2)Inserts/Updates the given NON TAXWARE information in the XML to the the given COUNTRY_CODE

-- NON USA
<NON_TAXWARE_UI>
   <USER_ID>axt754</USER_ID>
   <COUNTRY_CODE>ABW</COUNTRY_CODE>
   <CURRENCY_CONVERSION_TBL>
      <CURRENCY_CONVERSION>
         <EFFECTIVE_DATE>04-01-2014</EFFECTIVE_DATE>
         <EXPIRATION_DATE></EXPIRATION_DATE>
         <CONVERSION_RATE>1.79</CONVERSION_RATE>
         <DISPLAY_VAT_FLAG>yes</DISPLAY_VAT_FLAG>
         <CURRENCY_TYPE>AWG</CURRENCY_TYPE>
         <TAXID_NUMBER>5034215</TAXID_NUMBER>
         <TAXID_DESCRIPTION>TAX ID #</TAXID_DESCRIPTION>
         <VAT_TAX_ID></VAT_TAX_ID>
      </CURRENCY_CONVERSION>
   </CURRENCY_CONVERSION_TBL>
   <NON_TAXWARE_RATES_TBL>
      <NON_TAXWARE_RATES>
         <STATEMENT_TYPE>AW</STATEMENT_TYPE>
         <TAX_TYPE>VAT</TAX_TYPE>
         <TAX_CODE>70001</TAX_CODE>
         <TAX_RATE>1.5</TAX_RATE>
         <TAX_RATE_DESCRIPTION>1.500%</TAX_RATE_DESCRIPTION>
         <REGISTRATION_NUMBER></REGISTRATION_NUMBER>
         <EFFECTIVE_DATE>12-01-2015</EFFECTIVE_DATE>
         <EXPIRATION_DATE></EXPIRATION_DATE>
      </NON_TAXWARE_RATES>
      <NON_TAXWARE_RATES>
         <STATEMENT_TYPE>AA</STATEMENT_TYPE>
         <TAX_TYPE>SALES TAX</TAX_TYPE>
         <TAX_CODE>10001</TAX_CODE>
         <TAX_RATE>1.5</TAX_RATE>
         <TAX_RATE_DESCRIPTION>1.500%</TAX_RATE_DESCRIPTION>
         <REGISTRATION_NUMBER></REGISTRATION_NUMBER>
         <EFFECTIVE_DATE>12-01-2015</EFFECTIVE_DATE>
         <EXPIRATION_DATE></EXPIRATION_DATE>
      </NON_TAXWARE_RATES>
   </NON_TAXWARE_RATES_TBL>
</NON_TAXWARE_UI>

-- USA
<NON_TAXWARE_UI>
   <USER_ID>axt754</USER_ID>
   <COUNTRY_CODE>USA</COUNTRY_CODE>
   <NON_TAXWARE_RATES_USA_TBL>
      <NON_TAXWARE_RATES_USA>
         <STATE_CODE>HI</STATE_CODE>
         <STATEMENT_TYPE>AW</STATEMENT_TYPE>
         <TAX_TYPE>VAT</TAX_TYPE>
         <TAX_CODE>70001</TAX_CODE>
         <TAX_RATE>1.5</TAX_RATE>
         <TAX_RATE_DESCRIPTION>1.500%</TAX_RATE_DESCRIPTION>
         <REGISTRATION_NUMBER></REGISTRATION_NUMBER>
         <EFFECTIVE_DATE>12-01-2015</EFFECTIVE_DATE>
         <EXPIRATION_DATE></EXPIRATION_DATE>
      </NON_TAXWARE_RATES_USA>
      <NON_TAXWARE_RATES_USA>
         <STATE_CODE>OH</STATE_CODE>
         <STATEMENT_TYPE>AW</STATEMENT_TYPE>
         <TAX_TYPE>VAT</TAX_TYPE>
         <TAX_CODE>70001</TAX_CODE>
         <TAX_RATE>1.6</TAX_RATE>
         <TAX_RATE_DESCRIPTION>1.600%</TAX_RATE_DESCRIPTION>
         <REGISTRATION_NUMBER></REGISTRATION_NUMBER>
         <EFFECTIVE_DATE>12-01-2015</EFFECTIVE_DATE>
         <EXPIRATION_DATE></EXPIRATION_DATE>
      </NON_TAXWARE_RATES_USA>
   </NON_TAXWARE_RATES_USA_TBL>
</NON_TAXWARE_UI>

created : 11/01/2017 axt754 CCN Project....
******************************************************************************/
--
    IN_ROW_DATA  IN  CLOB)
IS
    V_ROW_DATA                  SYS.XMLTYPE := XMLTYPE(IN_ROW_DATA);
    V_CODE                      NUMBER;
    V_ERRM                      VARCHAR2(500);
    V_BREAK                     VARCHAR2(100);
    V_USER_ID                   VARCHAR2(10);
    V_COUNTRY_CODE              VARCHAR2(5);
BEGIN
   TEMP_DEBUG_P(IN_ROW_DATA);
    -- GET USER_ID 
    IF (V_ROW_DATA.EXISTSNODE('/NON_TAXWARE_UI/USER_ID/text()') = 1) THEN
        V_USER_ID   := V_ROW_DATA.EXTRACT('/NON_TAXWARE_UI/USER_ID/text()').GETSTRINGVAL();
    END IF;
    -- GET COUNTRY CODE
    IF (V_ROW_DATA.EXISTSNODE('/NON_TAXWARE_UI/COUNTRY_CODE/text()') = 1) THEN
        V_COUNTRY_CODE   := V_ROW_DATA.EXTRACT('/NON_TAXWARE_UI/COUNTRY_CODE/text()').GETSTRINGVAL();
    END IF;
    IF V_COUNTRY_CODE = 'USA' THEN
        NON_TAX_RATES_USA_UI_UPSERT_SP(IN_ROW_DATA
                                       ,V_USER_ID
                                       ,V_COUNTRY_CODE);
    ELSE
        NON_TAX_CURR_CONV_UI_UPSERT_SP(IN_ROW_DATA
                                       ,V_USER_ID
                                       ,V_COUNTRY_CODE);
        NON_TAXWARE_RATES_UI_UPSERT_SP(IN_ROW_DATA
                                       ,V_USER_ID
                                       ,V_COUNTRY_CODE);
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        V_CODE := SQLCODE;
        V_ERRM := SUBSTR(SQLERRM,1, 500);
        ERRPKG.RAISE_ERR(V_CODE
                        ,V_ERRM ||'NON_TW_CURR_CONV_UI_UPSERT_SP Error Last Break Point was ' || v_break);
END NON_TAXWARE_UI_UPSERT_SP;

END CCN_NON_TAXWARE_PKG;