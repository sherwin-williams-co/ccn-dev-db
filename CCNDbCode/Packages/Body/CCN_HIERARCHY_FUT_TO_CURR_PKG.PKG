create or replace PACKAGE BODY CCN_HIERARCHY_FUT_TO_CURR_PKG
AS
/**********************************************************
  This Package contains procedured to move the future hierarchy details records into
  current

created : 03/29/2016 jxc517 CCN Project....
Changed :
**********************************************************/
PROCEDURE PROCESS
/******************************************************************************
  This procedure will move the future hierarchy details records into
  current

created : 03/29/2016 jxc517 CCN Project....
revised : 08/19/2016 jxc517 CCN Project....
          Added ROLLLBACK statement in the exception block, just in case
          08/26/2016 MXK766 CCN Project....
          Added calls for Admin org data load.
          01/16/2017 gxg192 CCN Project....
          Changes to Raise the exception so that the process which is calling this procedure
          can take necessary action.
          01/26/2017 gxg192 CCN Project....
          Changes to define error number and call ERRPKG.RAISE_ERR to raise the exception
          01/31/2017 gxg192 CCN Project....
          Changes to remove V_ERROR_MESSAGE variable and added user defined exception
          05/12/2017 jxc517 CCN Project Team....
          Added call to remove the old record immediately after creating the new record
          06/09/2017 jxc517 CCN Project Team....
          Removed call to explicitly move the FROM hierarchy to history as current process
          is already doing that as part of the transaction
          IMP: Also remove the admin org "Y" flag as there should not be multiple hierarchies
          by the time code reaches here, if due to some reason if it is there, we should
          throw error else we will end up deleting current record as well
          06/14/2017 jxc517 CCN Project Team....
          Nullifying the local variable V_HD_REC to avoid the issue with batch containing combination of
          inserts and updates where inserts go into transfer due to old record values still available
          08/08/2017 sxh487 Added a batch flag to relax the Past Effective/Expiration dates rule if running a batch
          08/15/2017 jxc517 CCN Project....
          Corrected the cost center being passed for error logging
        : 03/26/2019 ASP-1207 mxs216 CCN Project....
          Updated varibale declaration referencing CCN_BATCH_PKG.BATCH_JOB_TYPE
*******************************************************************************/
IS
    V_BATCH_NUMBER   CCN_BATCH_PKG.BATCH_JOB_TYPE.BATCH_JOB_NUMBER%TYPE;
    V_TRANS_STATUS   CCN_BATCH_PKG.BATCH_JOB_TYPE.TRANS_STATUS%TYPE := 'SUCCESSFUL';
    V_HD_REC         HIERARCHY_DETAIL%ROWTYPE;
    V_CLOB           CLOB;
    exec_trans_error EXCEPTION;
BEGIN
    CCN_BATCH_PKG.INSERT_BATCH_JOB('HRCHY_FUTR_TO_CURR', V_BATCH_NUMBER);
    CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
    --Loop through all the records in the future table that are going effective today
    CCN_HIERARCHY_FUT_TO_CURR_PKG.G_BATCH_FLAG := 'Y';
    FOR rec IN (SELECT *
                  FROM HIERARCHY_DETAIL_FUTURE
                 WHERE TRUNC(HRCHY_DTL_EFF_DATE) <= TRUNC(SYSDATE)) LOOP
        BEGIN
            V_HD_REC := NULL;
            --get the corresponding record from current table
            BEGIN
                SELECT *
                  INTO V_HD_REC
                  FROM HIERARCHY_DETAIL
                 WHERE HRCHY_HDR_NAME         = rec.HRCHY_HDR_NAME
                   AND HRCHY_DTL_CURR_ROW_VAL = rec.HRCHY_DTL_CURR_ROW_VAL;
            EXCEPTION
                WHEN OTHERS THEN
                    NULL;
            END;

            IF REC.HRCHY_HDR_NAME = 'ADMINORG_HIERARCHY' THEN
                IF V_HD_REC.HRCHY_DTL_CURR_ROW_VAL IS NOT NULL THEN
                    --Build the clob to invoke the existing transfer process
                    CCN_HIERARCHY_UPLOAD.BLD_ADMINORG_HIER_TRANSFR_CLOB(V_HD_REC.HRCHY_DTL_CURR_ROW_VAL,
                                                                        NULL,
                                                                        V_HD_REC.HRCHY_HDR_NAME,
                                                                        V_HD_REC.HRCHY_DTL_PREV_LVL_VAL,
                                                                        rec.HRCHY_DTL_PREV_LVL_VAL,
                                                                        rec.HRCHY_DTL_EFF_DATE,
                                                                        V_CLOB);
                    CCN_HIERARCHY.HIERARCHY_TRANSFER_PROCESS(V_CLOB);
                ELSE
                    --if not found, we need to perform an insert process
                    --Build the clob to invoke the existing insert process
                    CCN_HIERARCHY_UPLOAD.BUILD_ADMINORG_HIER_INS_CLOB(rec.HRCHY_DTL_CURR_ROW_VAL,
                                                                      NULL,
                                                                      rec.HRCHY_HDR_NAME,
                                                                      rec.HRCHY_DTL_PREV_LVL_VAL,
                                                                      rec.HRCHY_DTL_EFF_DATE,
                                                                      V_CLOB);
                    CCN_HIERARCHY.HIERARCHY_DETAIL_INSERT(V_CLOB);
                END IF;
            ELSE 
                --If found we need to perform a transfer process
                IF V_HD_REC.HRCHY_DTL_CURR_ROW_VAL IS NOT NULL THEN
                    --Build the clob to invoke the existing transfer process
                    CCN_HIERARCHY_UPLOAD.BUILD_HIERARCHY_TRNSFR_CLOB(V_HD_REC.HRCHY_DTL_CURR_ROW_VAL,
                                                                     NULL,
                                                                     V_HD_REC.HRCHY_HDR_NAME,
                                                                     V_HD_REC.HRCHY_DTL_PREV_LVL_VAL,
                                                                     rec.HRCHY_DTL_PREV_LVL_VAL,
                                                                     rec.HRCHY_DTL_EFF_DATE,
                                                                     V_CLOB);
                    CCN_HIERARCHY.HIERARCHY_TRANSFER_PROCESS(V_CLOB);
                ELSE
                --if not found, we need to perform an insert process
                    --Build the clob to invoke the existing insert process
                    CCN_HIERARCHY_UPLOAD.BUILD_HIERARCHY_INSERT_CLOB(rec.HRCHY_DTL_CURR_ROW_VAL,
                                                                     NULL,
                                                                     rec.HRCHY_HDR_NAME,
                                                                     rec.HRCHY_DTL_PREV_LVL_VAL,
                                                                     rec.HRCHY_DTL_EFF_DATE,
                                                                     V_CLOB);
                    CCN_HIERARCHY.HIERARCHY_DETAIL_INSERT(V_CLOB);
                END IF;
            END IF;
            --check if record got transfered/inserted in current table before deleting from future table
            BEGIN
                SELECT *
                  INTO V_HD_REC
                  FROM HIERARCHY_DETAIL
                 WHERE HRCHY_HDR_NAME         = rec.HRCHY_HDR_NAME
                   AND HRCHY_DTL_LEVEL        = rec.HRCHY_DTL_LEVEL
                   AND HRCHY_DTL_CURR_LVL_VAL = rec.HRCHY_DTL_CURR_LVL_VAL;
            EXCEPTION
                WHEN OTHERS THEN
                    RAISE;
            END;
            --deleting the future record, as the transfer/insert completed successfully
            --NOTE: code should not come to this poing if anything fails
            CCN_HIERARCHY_FUTURE.DELETE_HIERARCHY_DETAIL_FUTURE(rec);
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                COMMON_TOOLS.LOG_ERROR(rec.HRCHY_DTL_CURR_ROW_VAL, 'CCN_HIERARCHY_FUT_TO_CURR_PKG.PROCESS', SQLERRM, SQLCODE);
                V_TRANS_STATUS := 'ERROR';
        END;
    END LOOP;
    CCN_HIERARCHY_FUT_TO_CURR_PKG.G_BATCH_FLAG := 'N';
    CCN_BATCH_PKG.UPDATE_BATCH_JOB('HRCHY_FUTR_TO_CURR', V_BATCH_NUMBER, V_TRANS_STATUS);
    CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION; 

    IF V_TRANS_STATUS = 'ERROR'
    THEN
        RAISE exec_trans_error;
    END IF;
EXCEPTION
    WHEN exec_trans_error THEN
        ERRPKG.RAISE_ERR(errnums.en_hier_fut_to_curr_err, 'CCN_HIERARCHY_FUT_TO_CURR_PKG.PROCESS','Process Failed.');
    WHEN OTHERS THEN
        COMMON_TOOLS.LOG_ERROR('OTHER', 'CCN_HIERARCHY_FUT_TO_CURR_PKG.PROCESS', SQLERRM, SQLCODE);
        ERRPKG.RAISE_ERR(errnums.en_hier_fut_to_curr_err, 'CCN_HIERARCHY_FUT_TO_CURR_PKG.PROCESS',SQLERRM);
END PROCESS;

END CCN_HIERARCHY_FUT_TO_CURR_PKG;