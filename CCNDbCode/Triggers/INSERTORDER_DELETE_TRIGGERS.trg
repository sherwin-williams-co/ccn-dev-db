/*
SET SERVEROUTPUT ON
DECLARE
    V_RESULT CLOB;
    V_KEY_TEXT CLOB;
BEGIN
    FOR REC1 IN (SELECT * FROM INSERTORDER) LOOP
        V_KEY_TEXT := NULL;
        V_RESULT := 
'CREATE OR REPLACE TRIGGER TR_XXXXXXXXXXXXX_DEL BEFORE DELETE ON XXXXXXXXXXXXX REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT(''USERENV'', ''OS_USER'') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY;
    ERRPKG.INSERT_ERROR_LOG_SP(''000000'',''TR_XXXXXXXXXXXXX_DEL'',''USER ''||V_USERNAME||'' HAS DELETED RECORD - ''||SUBSTR(V_TEXT,1,450),''DELETE'');
END;
/';
        FOR REC IN ( SELECT DISTINCT COLS.COLUMN_NAME
                       FROM ALL_CONSTRAINTS CONS,
                            ALL_CONS_COLUMNS COLS
                      WHERE CONS.CONSTRAINT_TYPE = 'P'
                        AND COLS.TABLE_NAME      = REC1.TABLE_NAME
                        AND CONS.CONSTRAINT_NAME = COLS.CONSTRAINT_NAME
                        AND CONS.OWNER           = COLS.OWNER
                        AND COLS.OWNER           = 'COSTCNTR') LOOP
            V_KEY_TEXT := V_KEY_TEXT || ':OLD.'||REC.COLUMN_NAME||'|| ''|'' ||';
        END LOOP;
        IF REC1.TABLE_NAME = 'HIERARCHY_DETAIL' THEN
            V_KEY_TEXT := ':OLD.HRCHY_HDR_NAME'|| '|| ''|'' ||' ||
                          ':OLD.HRCHY_DTL_LEVEL' || '|| ''|'' ||' ||
                          ':OLD.HRCHY_DTL_PREV_LVL_VAL'|| '|| ''|'' ||' ||
                          ':OLD.HRCHY_DTL_CURR_LVL_VAL' || '|| ''|'' ||' ||
                          ':OLD.HRCHY_DTL_NEXT_LVL_VAL' ;
        ELSE
            V_KEY_TEXT := SUBSTR(V_KEY_TEXT,1,LENGTH(V_KEY_TEXT)-LENGTH('|| ''|'' ||'));
        END IF;
        V_RESULT := REPLACE(V_RESULT,'YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY',V_KEY_TEXT);
        V_RESULT := REPLACE(V_RESULT,'XXXXXXXXXXXXX',REC1.TABLE_NAME);
        DBMS_OUTPUT.PUT_LINE(V_RESULT);
    END LOOP;
END;
*/
CREATE OR REPLACE TRIGGER TR_COST_CENTER_DEL BEFORE DELETE ON COST_CENTER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_COST_CENTER_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_ADDRESS_CAN_DEL BEFORE DELETE ON ADDRESS_CAN REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.EFFECTIVE_DATE|| '|' ||:OLD.ADDRESS_TYPE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_ADDRESS_CAN_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_ADDRESS_MEX_DEL BEFORE DELETE ON ADDRESS_MEX REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.EFFECTIVE_DATE|| '|' ||:OLD.ADDRESS_TYPE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_ADDRESS_MEX_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_ADDRESS_OTHER_DEL BEFORE DELETE ON ADDRESS_OTHER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.EFFECTIVE_DATE|| '|' ||:OLD.ADDRESS_TYPE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_ADDRESS_OTHER_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_ADDRESS_USA_DEL BEFORE DELETE ON ADDRESS_USA REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.EFFECTIVE_DATE|| '|' ||:OLD.ADDRESS_TYPE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_ADDRESS_USA_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_ADMINISTRATION_DEL BEFORE DELETE ON ADMINISTRATION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_ADMINISTRATION_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_OTHER_DEL BEFORE DELETE ON OTHER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_OTHER_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_PHONE_DEL BEFORE DELETE ON PHONE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.PHONE_NUMBER_TYPE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_PHONE_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_REAL_ESTATE_DEL BEFORE DELETE ON REAL_ESTATE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_REAL_ESTATE_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_STATUS_DEL BEFORE DELETE ON STATUS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.EFFECTIVE_DATE|| '|' ||:OLD.STATUS_CODE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_STATUS_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_STORE_DEL BEFORE DELETE ON STORE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_STORE_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_POLLING_DEL BEFORE DELETE ON POLLING REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.POLLING_STATUS_CODE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_POLLING_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_TYPE_DEL BEFORE DELETE ON TYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.EFFECTIVE_DATE|| '|' ||:OLD.TYPE_CODE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_TYPE_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_BANK_CARD_DEL BEFORE DELETE ON BANK_CARD REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.EFFECTIVE_DATE|| '|' ||:OLD.POLLING_STATUS_CODE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_BANK_CARD_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_POLLING_DWLD_RSN_HIST_DEL BEFORE DELETE ON POLLING_DWLD_RSN_HIST REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.EFFECTIVE_DATE|| '|' ||:OLD.POLLING_STATUS_CODE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_POLLING_DWLD_RSN_HIST_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_TERMINAL_DEL BEFORE DELETE ON TERMINAL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.EFFECTIVE_DATE|| '|' ||:OLD.TERMINAL_NUMBER|| '|' ||:OLD.POLLING_STATUS_CODE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_TERMINAL_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_SALES_REP_DEL BEFORE DELETE ON SALES_REP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.GEMS_EMPLOYEE_ID;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_SALES_REP_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_TERRITORY_SALES_MGR_DEL BEFORE DELETE ON TERRITORY_SALES_MGR REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.TERRITORY_SLS_MGR_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_TERRITORY_SALES_MGR_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_TERRITORY_DEL BEFORE DELETE ON TERRITORY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.TERRITORY_SLS_MGR_CODE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_TERRITORY_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_TERRITORY_ASSIGNMENT_DEL BEFORE DELETE ON TERRITORY_ASSIGNMENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.GEMS_EMPLOYEE_ID|| '|' ||:OLD.EFFECTIVE_DATE|| '|' ||:OLD.TERRITORY_SLS_MGR_CODE|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_TERRITORY_ASSIGNMENT_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_CODE_HEADER_DEL BEFORE DELETE ON CODE_HEADER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.CODE_HEADER_TYPE|| '|' ||:OLD.CODE_HEADER_NAME;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_CODE_HEADER_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_CODE_DETAIL_DEL BEFORE DELETE ON CODE_DETAIL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.CODE_HEADER_TYPE|| '|' ||:OLD.CODE_HEADER_NAME|| '|' ||:OLD.CODE_DETAIL_VALUE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_CODE_DETAIL_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_HIERARCHY_HEADER_DEL BEFORE DELETE ON HIERARCHY_HEADER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.HRCHY_HDR_NAME;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_HIERARCHY_HEADER_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_HIERARCHY_DESCRIPTION_DEL BEFORE DELETE ON HIERARCHY_DESCRIPTION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.HRCHY_HDR_LVL_NBR|| '|' ||:OLD.HRCHY_HDR_NAME;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_HIERARCHY_DESCRIPTION_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_HIERARCHY_DETAIL_DEL BEFORE DELETE ON HIERARCHY_DETAIL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.HRCHY_HDR_NAME|| '|' ||:OLD.HRCHY_DTL_LEVEL|| '|' ||:OLD.HRCHY_DTL_PREV_LVL_VAL|| '|' ||:OLD.HRCHY_DTL_CURR_LVL_VAL|| '|' ||:OLD.HRCHY_DTL_NEXT_LVL_VAL;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_HIERARCHY_DETAIL_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_MARKETING_DEL BEFORE DELETE ON MARKETING REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.EFFECTIVE_DATE|| '|' ||:OLD.CATEGORY|| '|' ||:OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_MARKETING_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/
CREATE OR REPLACE TRIGGER TR_TAXWARE_DEL BEFORE DELETE ON TAXWARE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
    V_USERNAME     VARCHAR2(10);
    V_TEXT         CLOB;
BEGIN
    --Get the User Name from system OS Context
    SELECT SYS_CONTEXT('USERENV', 'OS_USER') INTO V_USERNAME FROM DUAL;
    --Get the Primary Key Data
    V_TEXT := :OLD.COST_CENTER_CODE;
    ERRPKG.INSERT_ERROR_LOG_SP('000000','TR_TAXWARE_DEL','USER '||V_USERNAME||' HAS DELETED RECORD - '||SUBSTR(V_TEXT,1,450),'DELETE');
END;
/

