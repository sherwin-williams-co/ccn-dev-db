CREATE TABLE STATUS_UPDATES_TEMP (COST_CENTER_CODE VARCHAR2(6), STATUS_TYPE_CODE VARCHAR2(1), EFFECTIVE_DATE DATE);
 Insert into STATUS_UPDATES_TEMP
 select cost_center_code, status_code, TO_DATE('0'||STATUS_EFFECTIVE_DATE, 'MMDDRRRR')
 from COST_CENTER_TERRITORY;
--select * from COST_CENTER_TERRITORY;
--nxk927 01/19/2017
--updating the status code and effective date for the cost center given in the excel sheet
SET SERVEROUTPUT ON;
DECLARE
   V_CLOB              CLOB;

PROCEDURE BUILD_TERRITORY_CLOB(
/******************************************************************************
BUILD_TERRITORY_CLOB

This procedure will build the xml as clob for Territory cost center category

******************************************************************************/
                IN_COST_CENTER_CODE IN     COST_CENTER.COST_CENTER_CODE%TYPE,
                IN_STATUS_TYPE_CODE IN     VARCHAR2,
                OUT_XML_AS_CLOB     OUT    CLOB)
AS
      V_CLOB CLOB;
BEGIN
      V_CLOB := '<COST_CENTER_UI xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:nonamespaceSchemaLocation="http://www.oracle.com/Employee.xsd">';

      FOR rec IN (SELECT * 
                   FROM COST_CENTER 
                  WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE) LOOP
          V_CLOB := V_CLOB || '<COST_CENTER>';
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.COST_CENTER_CODE, 'COST_CENTER_CODE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(COMMON_TOOLS.CONVERT_SPECIAL_CHRCTRS(rec.COST_CENTER_NAME), 'COST_CENTER_NAME');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.CATEGORY, 'CATEGORY');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.ENTITY_TYPE, 'ENTITY_TYPE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.STATEMENT_TYPE, 'STATEMENT_TYPE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.COUNTRY_CODE, 'COUNTRY_CODE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.TRANSPORT_TYPE, 'TRANSPORT_TYPE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(TO_CHAR(rec.BEGIN_DATE,'RRRRMMDD'), 'BEGIN_DATE', 'Y');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(TO_CHAR(rec.OPEN_DATE,'RRRRMMDD'), 'OPEN_DATE', 'Y');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(TO_CHAR(rec.MOVE_DATE,'RRRRMMDD'), 'MOVE_DATE', 'Y');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(TO_CHAR(rec.CLOSE_DATE,'RRRRMMDD'), 'CLOSE_DATE', 'Y');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(TO_CHAR(rec.FINANCIAL_CLOSE_DATE,'RRRRMMDD'),'FINANCIAL_CLOSE_DATE', 'Y');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(TO_CHAR(rec.POS_PROG_VER_EFF_DATE,'RRRRMMDD'),'POS_PROG_VER_EFF_DATE', 'Y');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.UPS_ZONE_CODE, 'UPS_ZONE_CODE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.RPS_ZONE_CODE, 'RPS_ZONE_CODE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.CURRENCY_CODE, 'CURRENCY_CODE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.POS_PROG_VER_NBR, 'POS_PROG_VER_NBR');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.LEASE_OWN_CODE, 'LEASE_OWN_CODE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.MISSION_TYPE_CODE, 'MISSION_TYPE_CODE');
          --V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG('004206397', 'DUNS_NUMBER');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.DUNS_NUMBER, 'DUNS_NUMBER');          
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.PRI_LOGO_GROUP_IND, 'PRI_LOGO_GROUP_IND');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.SCD_LOGO_GROUP_IND, 'SCD_LOGO_GROUP_IND');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.BANKING_TYPE, 'BANKING_TYPE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.DEPOSIT_BAG_REORDER, 'DEPOSIT_BAG_REORDER');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.DEPOSIT_TICKET_REORDER, 'DEPOSIT_TICKET_REORDER');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.POP_KIT_CODE, 'POP_KIT_CODE');
          --V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.GLOBAL_HIERARCHY_IND, 'GLOBAL_HIERARCHY_IND');
          --V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.ACQUISITION_CODE, 'ACQUISITION_CODE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.POS_NON_STORE_IND, 'POS_NON_STORE_IND');          
          V_CLOB := V_CLOB || '</COST_CENTER>';
      END LOOP;

      V_CLOB := V_CLOB || '<STATUS>';
      V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(IN_COST_CENTER_CODE, 'COST_CENTER_CODE');
      V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(IN_STATUS_TYPE_CODE, 'STATUS_CODE');
      V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG('20170101', 'EFFECTIVE_DATE', 'Y'); --DIFF
      V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(NULL, 'EXPIRATION_DATE', 'Y');  --diff
      V_CLOB := V_CLOB || '</STATUS>';

      FOR rec IN (SELECT * 
                   FROM TERRITORY 
                  WHERE COST_CENTER_CODE = IN_COST_CENTER_CODE) LOOP
          V_CLOB := V_CLOB || '<TERRITORY>';
          --V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.TERRITORY_SLS_MGR_CODE, 'TERRITORY_SLS_MGR_CODE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.COST_CENTER_CODE, 'COST_CENTER_CODE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.CATEGORY, 'CATEGORY'); --diff
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.LEASE_CAR_INDICATOR, 'LEASE_CAR_INDICATOR');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.TERRITORY_TYPE_BUSN_CODE, 'TERRITORY_TYPE_BUSN_CODE');
          V_CLOB := V_CLOB || COMMON_TOOLS.BUILD_TAG(rec.HOME_STORE, 'HOME_STORE');
          V_CLOB := V_CLOB || '</TERRITORY>';
      END LOOP;

      V_CLOB := V_CLOB || '</COST_CENTER_UI>';
      
      OUT_XML_AS_CLOB := V_CLOB;
END BUILD_TERRITORY_CLOB;

BEGIN
   --lock all users out and Disable the triggers
   CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
   --Territory bulk load
   FOR rec IN (SELECT * FROM STATUS_UPDATES_TEMP ORDER BY 1) LOOP
      BEGIN
         SAVEPOINT COST_CENTER_LOAD;
         BUILD_TERRITORY_CLOB(rec.COST_CENTER_CODE, rec.STATUS_TYPE_CODE, V_CLOB);
         DBMS_OUTPUT.PUT_LINE(V_CLOB);
         COST_CENTER_UPSERT_PKG.CC_UPSERT_PROCESS(V_CLOB);
         COMMIT;
      EXCEPTION
         WHEN OTHERS THEN
            --Log the Cost Center # that failed to load
            --DBMS_OUTPUT.PUT_LINE(rec.COST_CENTER_CODE || ' failed to load due to ' || SQLCODE || ' - ' || SQLERRM);
            COMMON_TOOLS.LOG_ERROR(rec.COST_CENTER_CODE, 'COST_CENTER_UPLOAD.TERRITORY_LOAD_PROCESS', SQLERRM, SQLCODE);
            ROLLBACK TO COST_CENTER_LOAD;
      END;
   END LOOP;
    CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION; 
EXCEPTION
   WHEN OTHERS THEN
      --Log the Cost Center # that failed to load
      --DBMS_OUTPUT.PUT_LINE('Failed to load due to ' || SQLCODE || ' - ' || SQLERRM);
     COMMON_TOOLS.LOG_ERROR('000000', 'COST_CENTER_UPLOAD.TERRITORY_LOAD_PROCESS', SQLERRM, SQLCODE);      
      ROLLBACK TO COST_CENTER_LOAD;
      RAISE;
END;
/
/*
SELECT * FROM ERROR_LOG WHERE ERROR_DATE >= TRUNC(SYSDATE);
DELETE FROM ERROR_LOG WHERE ERROR_DATE >= TRUNC(SYSDATE);
COMMIT;
*/
DROP TABLE STATUS_UPDATES_TEMP;


