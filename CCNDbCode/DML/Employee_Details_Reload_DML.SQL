DELETE FROM AUDIT_LOG WHERE TABLE_NAME IN ('MANAGER_EMPLOYEE','TERRITORY_EMPLOYEE','EMPLOYEE_ADMIN_DETAILS');
COMMIT;
TRUNCATE TABLE MANAGER_EMPLOYEE;
TRUNCATE TABLE TERRITORY_EMPLOYEE;
TRUNCATE TABLE EMPLOYEE_ADMIN_DETAILS;
DELETE FROM EMPLOYEE_DETAILS;
COMMIT;

INSERT INTO EMPLOYEE_DETAILS
SELECT 
EMPLOYEE_NUMBER,
COST_CENTER COST_CENTER_CODE,
LAST_NAME||','||FIRST_NAME||' '||MIDDLE_NAME EMPLOYEE_NAME,
LAST_NAME,
FIRST_NAME,
MIDDLE_NAME MIDDLE_INITIAL,
NULL HOME_ADDRESS_LINE1,
NULL HOME_ADDRESS_LINE2,
NULL HOME_CITY_STATE,
NULL HOME_CITY,
NULL HOME_STATE,
NULL HOME_POSTAL_CODE,
HOME_PHONE,
NULL COMPANY_CODE,
NULL SEX,
ASSIG_STATUS EMP_PAYROLL_STATUS,
NULL EMP_ASSIGNMENT_STATUS,
DIVISION EMP_DIVISION,
LATEST_HIRE_DATE HIRE_DATE, --LATEST_HIRE_DATE/ORIGINAL_DATE_OF_HIRE???
TERMINATION_DATE TERM_DATE,
ADJUSTED_SERVICE_DATE, --NOT MATCHING WITH THE ADJUSTED_SERVICE_DATE IN CURRENT TABLE
NULL JOB_CODE,
NULL JOB_DIVISION,
JOB_FAMILY,
JOB_TITLE,
JOB_TYPE,
JOB_LEVEL,
JOB_FUNCTION,
REPLACE(DAD_RAD_CODE,'-','') DAD_CODE
  FROM SWC_HR_GENERIC_V
 WHERE EMPLOYEE_NUMBER NOT IN ('0331594','0354296');

SET SERVEROUTPUT ON
BEGIN
    FOR rec IN (SELECT DISTINCT SUBSTR(GEMS_ID_NUMBER,3) GEMS_ID_NUMBER, 
                                COST_CENTER_CODE,
                                TO_DATE(DECODE(EFFECTIVE_DATE,'00000000',
                                               NULL,
                                               EFFECTIVE_DATE),
                                        'RRRRMMDD') EFFECTIVE_DATE,
                                TO_DATE(DECODE(EXPIRATION_DATE,'00000000',
                                               NULL,
                                               EXPIRATION_DATE),
                                        'RRRRMMDD') EXPIRATION_DATE
                 FROM TEMP_EMPLOYEE_POSITION_DETAILS
                WHERE EMPLOYEE_JOB_CODE = 'ADMIN') LOOP
        BEGIN
            INSERT INTO EMPLOYEE_ADMIN_DETAILS (EMPLOYEE_NUMBER,
                                                ADMIN_COST_CENTER_CODE,
                                                EFFECTIVE_DATE,
                                                EXPIRATION_DATE,
                                                ADMIN_JOB_CODE)
                                                VALUES(rec.GEMS_ID_NUMBER,
                                                      rec.COST_CENTER_CODE,
                                                      rec.EFFECTIVE_DATE,
                                                      rec.EXPIRATION_DATE,
                                                      'ADMIN');
        EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE(rec.COST_CENTER_CODE || '-' || rec.GEMS_ID_NUMBER || '-' || SQLERRM);
        END;
    END LOOP;

    UPDATE EMPLOYEE_ADMIN_DETAILS A
       SET (EMPLOYEE_FIRST_NAME, EMPLOYEE_LAST_NAME, EMPLOYEE_MIDDLE_NAME, JOB_TYPE, DESCRIPTION)
           = (SELECT FIRST_NAME, LAST_NAME, MIDDLE_INITIAL, JOB_TYPE, NULL
                FROM EMPLOYEE_DETAILS
               WHERE EMPLOYEE_NUMBER = A.EMPLOYEE_NUMBER
                 AND ROWNUM < 2);
END;
/

EXEC CCN_EMPLOYEE_DETAILS_PKG.SYNC_EMPLOYEE_DETAILS();

UPDATE AUDIT_LOG
   SET AUDIT_REC_FLAG = 'R'
 WHERE TABLE_NAME IN ('MANAGER_EMPLOYEE','TERRITORY_EMPLOYEE','EMPLOYEE_ADMIN_DETAILS');

COMMIT;

create or replace FUNCTION GET_RQSTD_ATTRIBUTE_VALUE(
    IN_UPPER_LVL_VER_VALUE  IN     HIERARCHY_DETAIL.UPPER_LVL_VER_VALUE%TYPE,
    IN_ATTRIBUTE_NAME       IN     VARCHAR2) RETURN VARCHAR2
IS
    V_COUNT           NUMBER        := 1;
    V_ATTRIBUTE_NAME  VARCHAR2(100);
    OUT_ATTRIBUTE_VALUE VARCHAR2(100);
BEGIN
    WHILE IN_UPPER_LVL_VER_VALUE.EXISTSNODE('//attributes/upper_lvl_ver_desc[' || V_COUNT || ']') = 1 LOOP
        V_ATTRIBUTE_NAME := UPPER(REPLACE(IN_UPPER_LVL_VER_VALUE.EXTRACT('/attributes/upper_lvl_ver_desc' || '[' || V_COUNT || ']/Name/text()').GETSTRINGVAL(),' ','_'));
        IF V_ATTRIBUTE_NAME = UPPER(REPLACE(IN_ATTRIBUTE_NAME,' ','_'))
           AND (IN_UPPER_LVL_VER_VALUE.EXISTSNODE('/attributes/upper_lvl_ver_desc[' || V_COUNT || ']/Value/text()') = 1) THEN
            OUT_ATTRIBUTE_VALUE := IN_UPPER_LVL_VER_VALUE.EXTRACT('/attributes/upper_lvl_ver_desc[' || V_COUNT || ']/Value/text()').GETSTRINGVAL();
        END IF;
        V_COUNT := V_COUNT + 1;
    END LOOP;
    RETURN OUT_ATTRIBUTE_VALUE;
EXCEPTION
    WHEN OTHERS THEN
        RETURN OUT_ATTRIBUTE_VALUE;
END GET_RQSTD_ATTRIBUTE_VALUE;
/

BEGIN
    FOR rec IN (SELECT GET_RQSTD_ATTRIBUTE_VALUE(UPPER_LVL_VER_VALUE,'GEMS_ID') GEMS_ID, hd.*
                  FROM hierarchy_detail hd
                 WHERE HRCHY_HDR_NAME = 'GLOBAL_HIERARCHY' 
                   AND HRCHY_DTL_LEVEL = '6'
                   AND LENGTH(GET_RQSTD_ATTRIBUTE_VALUE(UPPER_LVL_VER_VALUE,'GEMS_ID'))>7) LOOP
        UPDATE HIERARCHY_DETAIL
           SET UPPER_LVL_VER_VALUE = REPLACE(EXTRACT(UPPER_LVL_VER_VALUE,'/attributes').GETSTRINGVAL(),rec.GEMS_ID,SUBSTR(rec.GEMS_ID,3))
         WHERE HRCHY_HDR_NAME         = 'GLOBAL_HIERARCHY'
           AND HRCHY_DTL_LEVEL        = '6'
           AND HRCHY_DTL_CURR_LVL_VAL = rec.HRCHY_DTL_CURR_LVL_VAL
           AND HRCHY_DTL_NEXT_LVL_VAL = rec.HRCHY_DTL_NEXT_LVL_VAL;
    END LOOP;
    COMMIT;
END;

DROP FUNCTION GET_RQSTD_ATTRIBUTE_VALUE;
