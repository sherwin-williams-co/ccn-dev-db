create or replace PACKAGE BODY BANKING_BATCH_PKG
AS
/**********************************************************
  This Package is a wrapper for all batch processes of banking application

Created : 07/21/2015 axk326/jxc517 CCN Project....
Changed :
**********************************************************/
PROCEDURE CURRENT_TO_HISTORY_PROCESS
/******************************************************************************
  This procedure is a wrapper to call CURRENT_TO_HISTORY_PKG.PROCESS

Created : 07/21/2015 axk326/jxc517 CCN Project....
Changed :
*******************************************************************************/
IS
BEGIN
   CURRENT_TO_HISTORY_PKG.PROCESS();
END CURRENT_TO_HISTORY_PROCESS;

PROCEDURE FUTURE_TO_CURRENT_PROCESS
/******************************************************************************
  This procedure is a wrapper to call FUTURE_TO_CURRENT_PKG.PROCESS

Created : 07/21/2015 axk326/jxc517 CCN Project....
Changed :
*******************************************************************************/
IS
BEGIN
    FUTURE_TO_CURRENT_PKG.PROCESS();
END FUTURE_TO_CURRENT_PROCESS;

PROCEDURE LOAD_MEMER_BANK_CONCENT_CC(
/*******************************************************************
  This procedure will load the data in MEMBER_BANK_CONCENTRATION_CC table.

Created : sxg151 10/30/2017
Changed :
********************************************************************/
IN_LOAD_DATE  IN DATE)
IS
   CURSOR member_bank_cc_cur IS
      SELECT LEAD_STORE_NBR,
             Member_Store_Nbr
        FROM Member_Bank_Cc;
BEGIN
DELETE  FROM MEMBER_BANK_CONCENTRATION_CC WHERE LOAD_DATE = IN_LOAD_DATE;

   FOR member_bank_cc_cur_rec IN member_bank_cc_cur LOOP
       INSERT INTO MEMBER_BANK_CONCENTRATION_CC(LEAD_STORE_NBR,
                                                MEMBER_STORE_NBR,
                                                LOAD_DATE )
       VALUES(member_bank_cc_cur_rec.LEAD_STORE_NBR,
              member_bank_cc_cur_rec.MEMBER_STORE_NBR,
              IN_LOAD_DATE );
   END LOOP;
   Commit;
END LOAD_MEMER_BANK_CONCENT_CC;

PROCEDURE BANKING_CONCENTRATION_MONTHLY_RPT (
/**********************************************************
This procedure is intended to generate banking concentration report on monthly basis
and send it to Marcy Lee.

Created : 10/09/2018 pxa852 CCN project Team....
**********************************************************/
    IN_DATE            IN         DATE)
IS
    CURSOR BANKING_MEMBER IS
           SELECT MEMBER_STORE_NBR,
                 (SELECT COST_CENTER_NAME FROM COST_CENTER WHERE COST_CENTER_CODE = MEMBER_STORE_NBR) MEMBER_STORE_NAME,
                  LEAD_STORE_NBR,
                 (SELECT COST_CENTER_NAME FROM COST_CENTER WHERE COST_CENTER_CODE = LEAD_STORE_NBR) LEAD_STORE_NAME,
                 (SELECT LEAD_BANK_ACCOUNT_NBR FROM LEAD_BANK_CC WHERE LEAD_STORE_NBR = LEAD_STORE_NBR AND ROWNUM < 2) BANK_ACCOUNT_NBR,
                 (SELECT BANK_NAME FROM BANK_ACCOUNT WHERE BANK_ACCOUNT_NBR = (SELECT LEAD_BANK_ACCOUNT_NBR
                                                                                  FROM LEAD_BANK_CC
                                                                                WHERE LEAD_STORE_NBR = LEAD_STORE_NBR
                                                                                  AND ROWNUM < 2
                 )) BANK_ACCOUNT_NAME
             FROM Member_Bank_Concentration_Cc
           WHERE LOAD_DATE = IN_DATE ORDER BY 1;

    V_CLOB_FOR_EMAIL            CLOB;
BEGIN
    FOR rec IN BANKING_MEMBER LOOP
        V_CLOB_FOR_EMAIL  :=  rec.MEMBER_STORE_NBR   || ',' ||
                              rec.MEMBER_STORE_NAME  || ',' ||
                              rec.LEAD_STORE_NBR     || ',' ||
                              rec.LEAD_STORE_NAME    || ',' ||
                              rec.BANK_ACCOUNT_NBR   || ',' ||
                              rec.BANK_ACCOUNT_NAME  || CHR(10) || V_CLOB_FOR_EMAIL ;
    END LOOP;

    --sending mail only if the clob is not empty.
    IF V_CLOB_FOR_EMAIL <> EMPTY_CLOB() THEN
        V_CLOB_FOR_EMAIL := 'MEMBER_STORE_NBR,MEMBER_STORE_NAME,LEAD_STORE_NBR,LEAD_STORE_NAME,BANK_ACCOUNT_NBR,BANK_ACCOUNT_NAME' || CHR(10) || V_CLOB_FOR_EMAIL;
        MAIL_PKG.SEND_MAIL('BANKING_MEMBER_CONCENTRATION_RPT',NULL, NULL, V_CLOB_FOR_EMAIL);
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        -- Logging of error
        errpkg.raise_err(SQLCODE, substr(SQLERRM,1, 500) ||'  BANKING_MEMBER_CONCENTRATION_RPT '  || ' errors found');
END BANKING_CONCENTRATION_MONTHLY_RPT;
END BANKING_BATCH_PKG;