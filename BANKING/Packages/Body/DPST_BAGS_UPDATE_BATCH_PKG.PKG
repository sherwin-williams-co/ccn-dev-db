create or replace PACKAGE BODY DPST_BAGS_UPDATE_BATCH_PKG
AS
/**********************************************************
  This Package contains procedured to update the deposit bag tickets on a daily
  basis based on the files we recieve from POS

Created : 10/20/2015 jxc517 CCN Project....
Changed :
**********************************************************/
PROCEDURE VALIDATE_CC_DEP_BAG
/***********************************************************
	This procedure will get the cost centers, which are in banking
  concentration that are active but are not having deposit bag
  details

Created : 03/06/2018 axt754 CCN Project....
Changed  : 
************************************************************/
IS
    V_CLOB_REC CLOB;
    V_CLOB     CLOB;
BEGIN
    V_CLOB :=  'COST_CENTER_CODE'||
             ',COST_CENTER_NAME'||
             ',POLLING_STATUS_CODE'||
             ',CATEGORY'||
             ',COUNTRY_CODE'||
             ',OPEN_DATE'||CHR(10);
    FOR REC IN(SELECT CC.COST_CENTER_CODE, CC.COST_CENTER_NAME, P.POLLING_STATUS_CODE, CC.CATEGORY, CC.COUNTRY_CODE, CC.OPEN_DATE
                 FROM COST_CENTER CC,
                      POLLING P
                WHERE CC.COST_CENTER_CODE = P.COST_CENTER_CODE
                  AND CC.CLOSE_DATE IS NULL
                  AND P.POLLING_STATUS_CODE IN ('P','Q')
                  AND P.CURRENT_FLAG = 'Y'
                  AND CC.COST_CENTER_CODE IN (SELECT LEAD_STORE_NBR FROM LEAD_BANK_CC
                                               UNION
                                              SELECT MEMBER_STORE_NBR FROM MEMBER_BANK_CC)
                  AND NOT EXISTS (SELECT 1 FROM BANK_DEP_BAG_TICK B WHERE B.COST_CENTER_CODE = CC.COST_CENTER_CODE)
                  AND NOT EXISTS (SELECT 1 FROM BANK_DEP_TICK_BAG_EXCLD_CCS T WHERE T.COST_CENTER_CODE = CC.COST_CENTER_CODE
                                     AND TICKET_BAG_TYPE = 'BAG'))LOOP
         V_CLOB_REC := '="' || REC.COST_CENTER_CODE || '",' ||
                 '"' || REC.COST_CENTER_NAME || '",' ||
                 '"' || REC.POLLING_STATUS_CODE || '",' ||
                 '"' || REC.CATEGORY || '",' ||
                 '"' || REC.COUNTRY_CODE || '",' ||
                 '"' || REC.OPEN_DATE || '"' || CHR(10);

         V_CLOB := V_CLOB || V_CLOB_REC;
     END LOOP;

     IF V_CLOB <> EMPTY_CLOB() THEN
         MAIL_PKG.SEND_MAIL('CC_TCKT_BAG_NOT_EXISTS',NULL, NULL, V_CLOB);
     END IF;  
END VALIDATE_CC_DEP_BAG;
PROCEDURE PROCESS(
/******************************************************************************
  This procedure will update the deposit bag tickets on a daily
  basis based on the files we recieve from POS

Created : 10/20/2015 jxc517 CCN Project....
Changed : 10/21/2015 jxc517 CCN Project....
          Added code to reset ytd deposit tickets on january 1st of every year
Changed : 11/04/2015 nxk927 CCN Project....
          added update for the orders that reach today's date 
        : 11/05/2015 nxk927 CCN Project....
          added LAST_MAINT_USER_ID <> 'BATCH' so there won't be multiple updates  
Changed : 08/19/2016 nxk927 CCN project....
          changed signature. Added servername and logfile name
Changed : 08/26/2016 nxk927 CCN project....
          added commit for each loop, pulling distinct cost center 
          to place the order
        : 12/13/2016 nxk927 CCN project....
          Removing unwanted calculation as the calculation for the onhand quantity and ytd quantity will happen
          as the order is placed.
        : 12/14/2016 jxc517 CCN project Team....
          Arrival date should be batch order date + 5, from UI it should be the date passed
        : 01/13/2017 nxk927 CCN project....
          YTD Order count be updated on first week day of the year
        : 03/15/2017 nxk927 CCN project....
          Daily uses deposit ticket should be one(not depending on the POS count)
        : 06/16/2017 gxg192 Replaced table TEMP_DPST_TCKT_POS_CNTS with POS_DPST_TICKET_COUNTS
                     since data from new POS needs to be considered.
        : 06/28/2017 sxp130 ASP_805 CCN project....
          When exception raised, BANK_DEP_BAG_TICK.DEPBAG_ONHAND_QTY set back to previous value
        : 07/07/2017 nxk927 CCN project....
          Removed the Daily uses deposit bag reduction process
        : 03/07/2018 axt754 CCN Project....
          Added Procedure call, which lists out cc's that are active not having deposit ticket details.
        : 03/26/2019 ASP-1207 mxs216 CCN Project....
          Updated varibale declaration referencing CCN_BATCH_PKG.BATCH_JOB_TYPE
Changed : 06/25/2019 sxs484 CCN project
          ASP-1255 Removed Substr on COST_CENTER_CODE. It would be 6 digits
          now with this change.            
*******************************************************************************/
IN_SERVER_NAME  IN VARCHAR2,
IN_LOGFILE      IN VARCHAR2)
IS
    V_BATCH_NUMBER              CCN_BATCH_PKG.BATCH_JOB_TYPE.BATCH_JOB_NUMBER%TYPE;
    V_TRANS_STATUS              CCN_BATCH_PKG.BATCH_JOB_TYPE.TRANS_STATUS%TYPE := 'SUCCESSFUL';
    V_FIRSTWEEK_DAY             DATE;
    V_LAST_BATCH_RUN_DATE       DATE;
BEGIN
    V_LAST_BATCH_RUN_DATE := CCN_BATCH_PKG.GET_LAST_RUNDATE('DPST_BAGS_UPDT_BTCH');
    CCN_BATCH_PKG.INSERT_BATCH_JOB('DPST_BAGS_UPDT_BTCH', V_BATCH_NUMBER, IN_SERVER_NAME,IN_LOGFILE);
    CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        V_FIRSTWEEK_DAY := CCN_COMMON_TOOLS.RETURN_FIRST_WKDAY_OF_MNTH(TRUNC(SYSDATE,'YYYY'));
        IF TO_CHAR(SYSDATE,'DDMON') = TO_CHAR(V_FIRSTWEEK_DAY,'DDMON') THEN
           FOR rec IN (SELECT * FROM BANK_DEP_BAG_TICK) LOOP
               TABLE_IU_PKG.BANK_DEP_BAG_TICK_HIST_I_SP(rec);
               rec.DEPBAG_YTD_ORDERED_QTY := 0;
               rec.EFFECTIVE_DATE  := LEAST(NVL(rec.EXPIRATION_DATE, SYSDATE), SYSDATE);
               TABLE_IU_PKG.BANK_DEP_BAG_TICK_I_SP(rec);
               COMMIT;
           END LOOP;
        END IF;
        FOR rec IN (SELECT DISTINCT COST_CENTER_CODE
                      FROM BANK_DEP_BAG_TICK
                     WHERE DEPBAG_ONHAND_QTY <= DEP_BAG_REORDER_POINT) LOOP
            BEGIN
                DEPOSIT_BAG_MAINTENANCE_PKG.PLACE_DEPOSIT_BAG_TICKET_ORDER(rec.COST_CENTER_CODE,
                                                                           TRUNC(SYSDATE) + 5, --arrival date from batch = order date + 5
                                                                           NULL,
                                                                           'BATCH');

            EXCEPTION
                WHEN OTHERS THEN
                    ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'DPST_BAGS_UPDATE_BATCH_PKG.PROCESS', SQLERRM, '1111111111111111' , rec.COST_CENTER_CODE, 'BANK_ACCOUNT');
                    --ASP_805 Changes
                    UPDATE BANK_DEP_BAG_TICK
                       SET DEPBAG_ONHAND_QTY = NVL(DEPBAG_ONHAND_QTY,0) + 1
                     WHERE COST_CENTER_CODE = rec.COST_CENTER_CODE
                       AND EXISTS (SELECT 1
                                     FROM POS_DPST_TICKET_COUNTS
                                    WHERE COST_CENTER_CODE = rec.COST_CENTER_CODE
                                      AND LOAD_DATE > NVL(V_LAST_BATCH_RUN_DATE, LOAD_DATE)
                                      AND TO_NUMBER(POS_COUNT) > 0);
            END;
            COMMIT;
        END LOOP;
    VALIDATE_CC_DEP_BAG();
    EXCEPTION
        WHEN OTHERS THEN
            V_TRANS_STATUS := 'ERROR';
            ROLLBACK;
    END;
    COMMIT;
    CCN_BATCH_PKG.UPDATE_BATCH_JOB('DPST_BAGS_UPDT_BTCH', V_BATCH_NUMBER, V_TRANS_STATUS);
    CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION; 
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'DPST_BAGS_UPDATE_BATCH_PKG.PROCESS', SQLERRM, '1111111111', '111111', 'OTHER');
END PROCESS;

PROCEDURE INTRM_DPST_BAG_PROCESS(
/******************************************************************************
  This procedure will update the deposit tickets on a daily
  basis based on the files we recieve from POS

Created : 09/06/2016 nxk927 CCN Project....
Changed : 11/16/2016 nxk927 CCN Project....
          Grouping by just cost center. 
          The interim deposit will be cosidered 1 per cost center
        : 06/13/2017 gxg192 Replaced table TEMP_INTERIM_DEPST with POS_INTERIM_DEPST
                     since data from new POS needs to be considered.
        : 10/27/2017 axt754 CCN project....
          Converted 4 digit cost center code to 6 digit
        : 03/26/2019 ASP-1207 mxs216 CCN Project....
          Updated varibale declaration referencing CCN_BATCH_PKG.BATCH_JOB_TYPE
Changed : 06/25/2019 sxs484 CCN project
          ASP-1255 Removed Substr on COST_CENTER_CODE. It would be 6 digits
          now with this change.          
*******************************************************************************/
IN_SERVER_NAME  IN VARCHAR2,
IN_LOGFILE      IN VARCHAR2
)IS
    V_BATCH_NUMBER                 CCN_BATCH_PKG.BATCH_JOB_TYPE.BATCH_JOB_NUMBER%TYPE;
    V_TRANS_STATUS                 CCN_BATCH_PKG.BATCH_JOB_TYPE.TRANS_STATUS%TYPE := 'SUCCESSFUL';
    V_LAST_BATCH_RUN_DATE          DATE;
BEGIN
    V_LAST_BATCH_RUN_DATE := CCN_BATCH_PKG.GET_LAST_RUNDATE('INTRM_DPST_BAG_PROC');
    CCN_BATCH_PKG.INSERT_BATCH_JOB('INTRM_DPST_BAG_PROC', V_BATCH_NUMBER,IN_SERVER_NAME,IN_LOGFILE);
    CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        FOR rec IN (SELECT DISTINCT COST_CENTER_CODE
                      FROM POS_INTERIM_DEPST
                     WHERE LOAD_DATE > NVL(V_LAST_BATCH_RUN_DATE, LOAD_DATE)) LOOP
            BEGIN
                UPDATE BANK_DEP_BAG_TICK
                   SET DEPBAG_ONHAND_QTY      = NVL(DEPBAG_ONHAND_QTY,0) - 1
                 WHERE COST_CENTER_CODE = rec.COST_CENTER_CODE;

                --business rule to check the order place date is valid or not
                BUSINESS_RULES_PKG.PLACE_BAG_ORDER_BR_SP(STR_BNK_DPST_DLY_RCNCL_PROCESS.COST_CENTER_LOOK_UP_FNC(rec.COST_CENTER_CODE),
                                                         NULL);   --ASP_805
            EXCEPTION
                WHEN OTHERS THEN
                    ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'INTRM_DPST_BAG_PROC', SQLERRM, '1111111111111111' , rec.COST_CENTER_CODE, 'BANK_ACCOUNT');
                    --ASP_805 Changes
                    UPDATE BANK_DEP_BAG_TICK
                       SET DEPBAG_ONHAND_QTY = NVL(DEPBAG_ONHAND_QTY,0) + 1
                     WHERE COST_CENTER_CODE = rec.COST_CENTER_CODE
                       AND EXISTS (SELECT 1
                                     FROM POS_INTERIM_DEPST
                                    WHERE COST_CENTER_CODE = rec.COST_CENTER_CODE
                                      AND LOAD_DATE > NVL(V_LAST_BATCH_RUN_DATE, LOAD_DATE));
            END;
            COMMIT;
        END LOOP;
    EXCEPTION
        WHEN OTHERS THEN
            V_TRANS_STATUS := 'ERROR';
            ROLLBACK;
    END;
    COMMIT;
    CCN_BATCH_PKG.UPDATE_BATCH_JOB('INTRM_DPST_BAG_PROC', V_BATCH_NUMBER, V_TRANS_STATUS);
    CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'INTRM_DPST_BAG_PROC', SQLERRM, '1111111111', '111111', 'OTHER');
END INTRM_DPST_BAG_PROCESS;

PROCEDURE DPST_BAG_PROCESS(
/******************************************************************************
  This procedure will update the deposit tickets on a daily
  basis based on the files we recieve from POS

Created : 07/07/2017 nxk927 CCN Project....
Changed : 10/03/2017 nxk927 CCN Project....
          Added the missing count greater than 0 filter
        : 03/26/2019 ASP-1207 mxs216 CCN Project....
          Updated varibale declaration referencing CCN_BATCH_PKG.BATCH_JOB_TYPE
Changed : 06/25/2019 sxs484 CCN project
          ASP-1255 Removed Substr on COST_CENTER_CODE. It would be 6 digits
          now with this change.           
*******************************************************************************/
IN_SERVER_NAME  IN VARCHAR2,
IN_LOGFILE      IN VARCHAR2
)IS
    V_BATCH_NUMBER                 CCN_BATCH_PKG.BATCH_JOB_TYPE.BATCH_JOB_NUMBER%TYPE;
    V_TRANS_STATUS                 CCN_BATCH_PKG.BATCH_JOB_TYPE.TRANS_STATUS%TYPE := 'SUCCESSFUL';
    V_LAST_BATCH_RUN_DATE          DATE;
BEGIN
    V_LAST_BATCH_RUN_DATE := CCN_BATCH_PKG.GET_LAST_RUNDATE('DPST_BAG_PROCESS');
    CCN_BATCH_PKG.INSERT_BATCH_JOB('DPST_BAG_PROCESS', V_BATCH_NUMBER,IN_SERVER_NAME,IN_LOGFILE);
    CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        FOR rec IN (SELECT DISTINCT COST_CENTER_CODE
                      FROM POS_DPST_TICKET_COUNTS
                     WHERE LOAD_DATE > NVL(V_LAST_BATCH_RUN_DATE, LOAD_DATE)
                       AND TO_NUMBER(POS_COUNT) > 0) LOOP
            BEGIN
                UPDATE BANK_DEP_BAG_TICK
                   SET DEPBAG_ONHAND_QTY      = NVL(DEPBAG_ONHAND_QTY,0) - 1
                 WHERE COST_CENTER_CODE = rec.COST_CENTER_CODE;
            EXCEPTION
                WHEN OTHERS THEN
                    ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'DPST_BAG_PROCESS', SQLERRM, '1111111111111111' , rec.COST_CENTER_CODE, 'BANK_ACCOUNT');
            END;
            COMMIT;
        END LOOP;
    EXCEPTION
        WHEN OTHERS THEN
            V_TRANS_STATUS := 'ERROR';
            ROLLBACK;
    END;
    COMMIT;
    CCN_BATCH_PKG.UPDATE_BATCH_JOB('DPST_BAG_PROCESS', V_BATCH_NUMBER, V_TRANS_STATUS);
    CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'INTRM_DPST_BAG_PROCESS', SQLERRM, '1111111111', '111111', 'OTHER');
END DPST_BAG_PROCESS;

END DPST_BAGS_UPDATE_BATCH_PKG;

