CREATE OR REPLACE PACKAGE BODY BANKING_COMMON_TOOLS
AS
/**************************************************************** 
This package will have Banking specific tools

created : 07/02/2015 sxh487 CCN Project....
changed :
*****************************************************************/

FUNCTION EXTRACT_TABLE_CLOB (
/*******************************************************************************
	This procedure will extract the required clob from passed XML clob
  and sends back the result as clob

created : 03/30/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
IN_TABLE_NAME IN     VARCHAR2
,IN_ROW_DATA  IN     CLOB) RETURN CLOB
IS
BEGIN
    RETURN SYS.XMLTYPE(IN_ROW_DATA).EXTRACT('/' || IN_TABLE_NAME ||'_UI_SP/'|| IN_TABLE_NAME).getCLOBVal();
EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END EXTRACT_TABLE_CLOB;

FUNCTION GET_BNK_ACCNT_NBR_FOR_CC(
/******************************************************************************
This procedure performs all the business rules that are applicable Account Maintenance Window

created : 06/19/2015 jxc517 CCN Project....
revised : 
*******************************************************************************/
IN_COST_CENTER_CODE IN VARCHAR2) RETURN VARCHAR2
IS
    V_LEAD_BANK_CC_REC      LEAD_BANK_CC%ROWTYPE;
    V_BANK_ACCOUNT_NBR          BANK_ACCOUNT.BANK_ACCOUNT_NBR%TYPE;
BEGIN
    --Check in Lead/Independent cost centers for bank account number
    V_LEAD_BANK_CC_REC := BANKING_COMMON_TOOLS.GET_LEAD_BANK_CC_REC(IN_COST_CENTER_CODE);
    V_BANK_ACCOUNT_NBR := V_LEAD_BANK_CC_REC.LEAD_BANK_ACCOUNT_NBR;
    IF V_BANK_ACCOUNT_NBR IS NULL THEN
        --Check in Member cost centers for bank account number as not found in Lead/Independent
        BEGIN
            SELECT LEAD_BANK_ACCOUNT_NBR
              INTO V_BANK_ACCOUNT_NBR
              FROM LEAD_BANK_CC
             WHERE LEAD_STORE_NBR = (SELECT LEAD_STORE_NBR
                                       FROM MEMBER_BANK_CC
                                      WHERE MEMBER_STORE_NBR = IN_COST_CENTER_CODE)
               AND ROWNUM < 2;
        EXCEPTION
            WHEN OTHERS THEN
                NULL;
        END;
    END IF;
    RETURN V_BANK_ACCOUNT_NBR;
EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END GET_BNK_ACCNT_NBR_FOR_CC;

FUNCTION GET_LEAD_STORE_NBR(
/*******************************************************************************
  This procedure will check if the member Cost Center exists in another LEAD or NOT

created : 06/19/2015 sxh487 CCN Project....
Changed : 
*******************************************************************************/
  IN_MEMBER_STORE_NBR   IN MEMBER_BANK_CC.MEMBER_STORE_NBR%TYPE)
  RETURN VARCHAR2
IS
    V_LEAD_STORE_NBR  MEMBER_BANK_CC.LEAD_STORE_NBR%TYPE;
BEGIN
    SELECT LEAD_STORE_NBR 
      INTO V_LEAD_STORE_NBR
      FROM MEMBER_BANK_CC
     WHERE MEMBER_STORE_NBR = IN_MEMBER_STORE_NBR;
    RETURN V_LEAD_STORE_NBR;
EXCEPTION
    WHEN OTHERS THEN
        RETURN V_LEAD_STORE_NBR;
END GET_LEAD_STORE_NBR;

FUNCTION GET_LEAD_BANK_CC_REC(
/***********************************************************
	This procedure will be called in lead_transfer_process to 
  get the lead bank rec 
  
created : 06/08/2015 nxk927
update  : 
************************************************************/
    IN_LEAD_STORE_NBR           IN     VARCHAR2) RETURN LEAD_BANK_CC%ROWTYPE
IS
    V_LEAD_BANK_CC_REC LEAD_BANK_CC%ROWTYPE;
BEGIN
    SELECT *
      INTO V_LEAD_BANK_CC_REC
      FROM LEAD_BANK_CC
     WHERE LEAD_STORE_NBR = IN_LEAD_STORE_NBR;
    RETURN V_LEAD_BANK_CC_REC;
EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END GET_LEAD_BANK_CC_REC;

FUNCTION GET_LEAD_BANK_CC_FUTURE_REC(
/***********************************************************
	This procedure will return the lead_bank_cc_future record
  based on bank account number, lead store number and future id
  
Created : 07/20/2015 jxc517 CCN Project....
Changed  : 
************************************************************/
    IN_LEAD_BANK_ACCOUNT_NBR IN     VARCHAR2,
    IN_LEAD_STORE_NBR        IN     VARCHAR2,
    IN_FUTURE_ID             IN     NUMBER) RETURN LEAD_BANK_CC_FUTURE%ROWTYPE
IS
    V_LEAD_BANK_CC_FUTURE_REC LEAD_BANK_CC_FUTURE%ROWTYPE;
BEGIN
    SELECT *
      INTO V_LEAD_BANK_CC_FUTURE_REC
      FROM LEAD_BANK_CC_FUTURE
     WHERE LEAD_BANK_ACCOUNT_NBR = IN_LEAD_BANK_ACCOUNT_NBR
       AND LEAD_STORE_NBR        = IN_LEAD_STORE_NBR
       AND FUTURE_ID             = IN_FUTURE_ID;
    RETURN V_LEAD_BANK_CC_FUTURE_REC;
EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END GET_LEAD_BANK_CC_FUTURE_REC;

FUNCTION GET_BANK_TYPE_CODE(
/*******************************************************************************
  This procedure will check if the Cost Center is a LEAD or NOT

Created : 06/09/2015 nxk927 CCN Project....
Changed : 
*******************************************************************************/
IN_COST_CENTER    IN     LEAD_BANK_CC.LEAD_STORE_NBR%TYPE)
RETURN VARCHAR2
IS
    V_BANK_TYPE_CODE VARCHAR2(1);
BEGIN
    SELECT BANK_TYPE_CODE 
      INTO V_BANK_TYPE_CODE
      FROM (SELECT BANK_TYPE_CODE
              FROM LEAD_BANK_CC
             WHERE LEAD_STORE_NBR = IN_COST_CENTER
             UNION
            SELECT 'M'
              FROM MEMBER_BANK_CC
             WHERE MEMBER_STORE_NBR = IN_COST_CENTER);
    RETURN V_BANK_TYPE_CODE;
EXCEPTION
    WHEN OTHERS THEN
        RETURN V_BANK_TYPE_CODE;
END GET_BANK_TYPE_CODE;

END BANKING_COMMON_TOOLS;

