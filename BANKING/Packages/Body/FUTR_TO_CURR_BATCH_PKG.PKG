CREATE OR REPLACE PACKAGE BODY FUTR_TO_CURR_BATCH_PKG
AS
/**********************************************************
  This Package contains procedured to move the future table records into
  current tables

created : 05/26/2015 jxc517 CCN Project....
changed :
**********************************************************/
PROCEDURE PROCESS
/******************************************************************************
  This procedure will move the future table records into current tables
  Tables:
      BANK_ACCOUNT
      LEAD_BANK_CC
      MEMBER_BANK_CC
      BANK_MICR_FORMAT

created : 05/26/2015 jxc517 CCN Project....
revised : 
*******************************************************************************/
IS
V_BATCH_NUMBER      BATCH_JOB.BATCH_JOB_NUMBER%TYPE;
V_TRANS_STATUS      BATCH_JOB.TRANS_STATUS%TYPE := 'SUCCESSFUL';
BEGIN
    CCN_BATCH_PKG.INSERT_BATCH_JOB('FUTR_TO_CURR_LOAD', V_BATCH_NUMBER);
    CCN_BATCH_PKG.LOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        FOR rec IN (SELECT *
                      FROM BANK_ACCOUNT_FUTURE
                     WHERE EFFECTIVE_DATE <= TRUNC(SYSDATE)) LOOP
            BEGIN
                ACCOUNT_MAINTENANCE_PKG.ACCNT_MNTNC_FUTURE_DELETE_SP(rec, 'Y'); --Y here is to move future to current
            EXCEPTION
                WHEN OTHERS THEN
                    ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'FUTR_TO_CURR_BATCH_PKG.PROCESS', SQLERRM, rec.BANK_ACCOUNT_NBR, '111111', 'BANK_ACCOUNT');
            END;
        END LOOP;
    EXCEPTION
        WHEN OTHERS THEN
            V_TRANS_STATUS := 'ERROR';
            ROLLBACK;
    END;
    COMMIT;
    CCN_BATCH_PKG.UPDATE_BATCH_JOB('FUTR_TO_CURR_LOAD', V_BATCH_NUMBER, V_TRANS_STATUS);
    CCN_BATCH_PKG.UNLOCK_DATABASE_SP(); -- PRAGMA AUTONOMOUS_TRANSACTION; 
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.INSERT_ERROR_LOG_SP(SQLCODE, 'FUTR_TO_CURR_BATCH_PKG.PROCESS', SQLERRM, '1111111111', '111111', 'OTHER');
END PROCESS;

END FUTR_TO_CURR_BATCH_PKG;

