create or replace PACKAGE BODY RSA_WEB_SERVICES_PKG AS
/**********************************************************
This Package contains all the procedures used to
communicate with RSA Web Services

Created : 08/03/2015 jxc517 CCN Project....
Changed :
**********************************************************/
PROCEDURE BLD_CRT_ORD_ADDRESS_ELEMENT( 
/******************************************************************************
This procedure is intended to build create order address element

Created : 08/03/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
    IN_COST_CENTER_CODE IN     VARCHAR2,
    OUT_ADDRESS_ELEMENT    OUT CLOB)
IS
    V_ADDRESS_REC      ADDRESS_VW%ROWTYPE;
    V_PHONE_REC        CCN_PHONE_INFO_VW%ROWTYPE;
    V_EMPLOYEE_REC     SWC_HR_GEMS_TB%ROWTYPE;
BEGIN
    BANKING_COMMON_TOOLS.GET_ADDRESS_RECORD(IN_COST_CENTER_CODE,
                                            V_ADDRESS_REC);
    BANKING_COMMON_TOOLS.GET_PHONE_RECORD(IN_COST_CENTER_CODE,
                                          V_PHONE_REC);
    BANKING_COMMON_TOOLS.GET_EMPLOYEE_RECORD(IN_COST_CENTER_CODE,
                                             'Store Mgr',
                                             V_EMPLOYEE_REC);
    OUT_ADDRESS_ELEMENT := '<Address>' ||
                               '<FirstName>' ||
                                   NVL(V_EMPLOYEE_REC.FIRST_NAME, '') ||
                               '</FirstName>' ||
                               '<MiddleName>' ||
                                   NVL(V_EMPLOYEE_REC.MIDDLE_NAME, '') ||
                               '</MiddleName>' ||
                               '<LastName>' || --Required, if useDefault=false
                                   NVL(V_EMPLOYEE_REC.LAST_NAME, '') ||
                               '</LastName>' ||
                               '<Location>' ||
                                   'Store ' || SUBSTR(IN_COST_CENTER_CODE, 3) ||
                               '</Location>' ||
                               '<Company>' ||
                                   'SHERWIN WILLIAMS' ||
                               '</Company>' ||
                               '<StreetAddress1>' ||
                                   NVL(V_ADDRESS_REC.ADDRESS_LINE_1, '') ||
                               '</StreetAddress1>' ||
                               '<StreetAddress2>' ||
                                   NVL(V_ADDRESS_REC.ADDRESS_LINE_2, '') ||
                               '</StreetAddress2>' ||
                               '<StreetAddress3>' ||
                                   NVL(V_ADDRESS_REC.ADDRESS_LINE_3, '') ||
                               '</StreetAddress3>' ||
                               '<City>' ||
                                   NVL(V_ADDRESS_REC.CITY, '') ||
                               '</City>' ||
                               '<State>' ||
                                   NVL(V_ADDRESS_REC.STATE_CODE, '') ||
                               '</State>' ||
                               '<StateAbbreviation>' ||
                                   NVL(V_ADDRESS_REC.STATE_CODE_DESCRIPTION, '') ||
                               '</StateAbbreviation>' ||
                               '<ZipCode>' ||
                                   NVL(V_ADDRESS_REC.ZIP_CODE, '') || '-' || NVL(V_ADDRESS_REC.ZIP_CODE_4, '') ||
                               '</ZipCode>' ||
                               '<Country>' ||
                                   NVL(V_ADDRESS_REC.COUNTRY_CODE, '') ||
                               '</Country>' ||
                               '<JobTitle>' ||
                                   'Store Manager' ||
                               '</JobTitle>' ||
--                               '<URL>' ||
--                                   'string' ||
--                               '</URL>' ||
--                               '<EmailAddress>' ||
--                                   'string' ||
--                               '</EmailAddress>' ||
                               '<PhoneNumbers type="Phone">' ||
                                   NVL(NVL(V_PHONE_REC.PRIMARY_PHONE_NUMBER, V_PHONE_REC.SECONDARY_PHONE_NUMBER), '') ||
                               '</PhoneNumbers>' ||
                           '</Address>';
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'BLD_CRT_ORD_ADDRESS_ELEMENT ' || SUBSTR(SQLERRM,1,500) || ' IN OTHERS ' );
END BLD_CRT_ORD_ADDRESS_ELEMENT;

PROCEDURE BLD_CRT_ORD_BILLING_ELEMENT( 
/******************************************************************************
This procedure is intended to build create order billing element

Created : 08/03/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
    IN_COST_CENTER_CODE IN     VARCHAR2,
    OUT_BILLING_ELEMENT    OUT CLOB)
IS
    V_ADDRESS_ELEMENT       CLOB;
    V_EMPLOYEE_REC          SWC_HR_GEMS_TB%ROWTYPE;
BEGIN
    BLD_CRT_ORD_ADDRESS_ELEMENT(IN_COST_CENTER_CODE, V_ADDRESS_ELEMENT);
    BANKING_COMMON_TOOLS.GET_EMPLOYEE_RECORD(IN_COST_CENTER_CODE,
                                             'Store Mgr',
                                             V_EMPLOYEE_REC);
    OUT_BILLING_ELEMENT := '<Billing>' ||
                               V_ADDRESS_ELEMENT || --Required
                               '<AccountingFields>' ||
                                   '<AccountingField type="Division">' || --percent="integer" attribute is optional
                                       V_EMPLOYEE_REC.DIVISION ||
                                   '</AccountingField>' ||
                                   '<AccountingField type="PrimeSub">' ||
                                       V_EMPLOYEE_REC.PRIME_SUB ||
                                   '</AccountingField>' ||
                                   '<AccountingField type="CostCenter">' ||
                                       IN_COST_CENTER_CODE ||
                                   '</AccountingField>' ||
                                   '<AccountingField type="ProjectCode">' ||
                                       '0000' ||
                                   '</AccountingField>' ||
                               '</AccountingFields>' ||
--                               '<Instructions>' ||
--                                   'string' ||
--                               '</Instructions>' ||
                           '</Billing>';
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'BLD_CRT_ORD_BILLING_ELEMENT ' || SUBSTR(SQLERRM,1,500) || ' IN OTHERS ' );
END BLD_CRT_ORD_BILLING_ELEMENT;

PROCEDURE BLD_CRT_ODR_DOCUMENTS_ELEMENT( 
/******************************************************************************
This procedure is intended to build create order documents element

Created : 08/03/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
    IN_DEP_TICK_REC       IN     BANK_DEP_TICK_HIST%ROWTYPE,
    OUT_DOCUMENTS_ELEMENT    OUT CLOB)
IS
BEGIN
    OUT_DOCUMENTS_ELEMENT := '<Documents>';
    --Should be a loop
    OUT_DOCUMENTS_ELEMENT := OUT_DOCUMENTS_ELEMENT ||
                                 '<Document referenceNumber="TBD" type="upload">' ||
--referenceNumber - Required, type=upload/archives - Optional, default=upload
                                     --'<UniqueName>string</UniqueName>' || --archives
                                     '<UploadFileURI>' || --Required : upload
                                         'pathToBeDefined/DEPOSIT_TICKET_' || IN_DEP_TICK_REC.COST_CENTER_CODE ||
                                     '</UploadFileURI>' ||
--Should equal the output file name from Exstream, plus the full import path on the WebCRD Server
--Print-ready files must be FTP’ed to the import files before request can be successful
                                     '<Description>' || --Required : upload
                                         'Deposit Tickets - Store ' || SUBSTR(IN_DEP_TICK_REC.COST_CENTER_CODE, 3) || ' - ' || TO_CHAR(IN_DEP_TICK_REC.EFFECTIVE_DATE, 'MM-DD-RR') ||
                                     '</Description>' ||
                                     '<GroupName useDefault="true"></GroupName>' || --Required : upload
--default is order placers WebCRD User ID
                                     '<FolderName useDefault="true"></FolderName>' || --Required : upload
--default is order placers WebCRD default folder
--                                     '<FormNumber>' || --upload
--                                         'string' ||
--                                     '</FormNumber>' ||
                                     '<JobTicketTemplate>' || --Required : upload
                                         'Deposit Tickets - ' || IN_DEP_TICK_REC.PART_PAPER_PER_FORM || 'Part' || --Deposit Tickets – 2Part (or) 3Part
                                     '</JobTicketTemplate>' ||
--                                     '<VerifyPDFPageCount>' ||
--                                         'integer' ||
--                                     '</VerifyPDFPageCount>' ||
--'<ProofRequest>string</ProofRequest>' || --deprecated and unused
--                                     '<AdditionalText1>' ||
--                                         'string' ||
--                                     '</AdditionalText1>' ||
--                                     '<AdditionalText2>' ||
--                                         'string' ||
--                                     '</AdditionalText2>' ||
--'<TotalQuantityOrdered>integer</TotalQuantityOrdered>' || --If set, request rejects
--                                     '<Instructions>' ||
--                                         'string' ||
--                                     '</Instructions>' ||
--                                     '<OrderPlacerInstructions>' ||
--                                         'string' ||
--                                     '</OrderPlacerInstructions>' ||
                                 '</Document>';
		OUT_DOCUMENTS_ELEMENT := OUT_DOCUMENTS_ELEMENT || '</Documents>';
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'BLD_CRT_ODR_DOCUMENTS_ELEMENT ' || SUBSTR(SQLERRM,1,500) || ' IN OTHERS ' );
END BLD_CRT_ODR_DOCUMENTS_ELEMENT;

PROCEDURE BLD_CRT_ORD_RECIPIENTS_ELEMENT( 
/******************************************************************************
This procedure is intended to build create order recipients element

Created : 08/03/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
    IN_DEP_TICK_REC        IN     BANK_DEP_TICK%ROWTYPE,
    OUT_RECIPIENTS_ELEMENT    OUT CLOB)
IS
    V_ADDRESS_ELEMENT       CLOB;
BEGIN
    BLD_CRT_ORD_ADDRESS_ELEMENT(IN_DEP_TICK_REC.COST_CENTER_CODE, V_ADDRESS_ELEMENT);
    OUT_RECIPIENTS_ELEMENT := '<Recipients>';
    --Should be a loop
    OUT_RECIPIENTS_ELEMENT := OUT_RECIPIENTS_ELEMENT || 
                                  '<Recipient>' ||
                                      '<ShippingMethod>' || --Required
                                          'Best Method' ||
                                      '</ShippingMethod>' ||
                                      V_ADDRESS_ELEMENT || --Required
                                      '<RecipientDocuments>' || --Required
                                          --Below tag can be multiple
                                          '<RecipientDocument documentReferenceNumber="TBD">' || --documentReferenceNumber - Required
                                              '<Quantity>' ||
                                                  1 || --default is 1, need to check with Pat/Lynda
                                              '</Quantity>' || --Required
                                          '</RecipientDocument>' ||
                                      '</RecipientDocuments>' ||
--                                      '<TrackingNumber>' ||
--                                         'string' ||
--                                     '</TrackingNumber>' ||
--                                      '<Instructions>' ||
--                                         'string' ||
--                                     '</Instructions>' ||
                                  '</Recipient>';
    OUT_RECIPIENTS_ELEMENT := OUT_RECIPIENTS_ELEMENT || '</Recipients>';
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'BLD_CRT_ORD_RECIPIENTS_ELEMENT ' || SUBSTR(SQLERRM,1,500) || ' IN OTHERS ' );
END BLD_CRT_ORD_RECIPIENTS_ELEMENT;

PROCEDURE BUILD_CREATE_ORDER_REQUEST_XML( 
/******************************************************************************
This procedure is intended to build create order request xml

Created : 08/03/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
    IN_DEP_TICK_REC              IN     BANK_DEP_TICK%ROWTYPE,
    OUT_CREATE_ORDER_REQUEST_XML    OUT CLOB)
IS
    V_BILLING_ELEMENT          CLOB;
    V_DOCUMENTS_ELEMENT        CLOB;
    V_RECIPIENTS_ELEMENT       CLOB;
BEGIN
    BLD_CRT_ORD_BILLING_ELEMENT(IN_DEP_TICK_REC.COST_CENTER_CODE, V_BILLING_ELEMENT);
    BLD_CRT_ODR_DOCUMENTS_ELEMENT(IN_DEP_TICK_REC, V_DOCUMENTS_ELEMENT);
    BLD_CRT_ORD_RECIPIENTS_ELEMENT(IN_DEP_TICK_REC, V_RECIPIENTS_ELEMENT);
    OUT_CREATE_ORDER_REQUEST_XML := '<?xml version="1.0" encoding="UTF-8"?>' ||
                                    '<CreateOrder xmlns="http://www.rocsoft.com/services/order/types"  xmlns:rsast="http://www.rocsoft.com/services/types">' ||
--xmlns=http://www.xxxx.com/services/order/types  xmlns:rsast=http://www.xxxx.com/services/types>
--                                        '<SharedKey>' ||
--                                            'string' ||
--                                        '</SharedKey>' ||
--If supplied must match with the value set in WebCRD and must be the first child of CreateOrder
--If value/element is not supplied operation is identical to suplpying blank password
--                                        '<Locale>' ||
--                                            'string' ||
--                                        '</Locale>' ||
--If not specified WebCRD system default locale is used
                                        '<Order>' || --Required
                                            '<OrderName>' || --Required
                                                'Deposit Tickets - Store ' ||
                                                            SUBSTR(IN_DEP_TICK_REC.COST_CENTER_CODE, 3) ||
                                                            ' - ' ||
                                                            TO_CHAR(IN_DEP_TICK_REC.EFFECTIVE_DATE, 'MM-DD-RR') ||
                                            '</OrderName>' ||
--if userDefault="true", WebCRD generated the order name
                                            '<OrderPlacer>' || --Required
                                                IN_DEP_TICK_REC.LAST_MAINT_USER_ID ||
                                            '</OrderPlacer>' ||
--WebCRD user ID of order placer (or) MySherwin User ID of Store Manager
                                            '<OrderPlacerDomain>' ||
                                                'LDAP' ||
                                            '</OrderPlacerDomain>' ||
--LDAP => single-server LDAP authentication, default=Local => WebCRD authentication
                                            '<Site useDefault="true"></Site>' || --Required
                                            '<DueDateTime>' || --Required
                                                NVL(NULL, TRUNC(SYSDATE + 5)) || --default order date + 5
                                            '</DueDateTime>' ||
--                                            '<Note>' ||
--                                                'string' ||
--                                            '</Note>' ||
                                            V_BILLING_ELEMENT || --Required
--                                            '<ExternalOrderId>' ||
--                                                'string' ||
--                                            '</ExternalOrderId>' ||
--                                            '<ExternalInfo>' ||
--                                                'string' ||
--                                            '</ExternalInfo>' ||
                                            V_DOCUMENTS_ELEMENT || --Required
                                            V_RECIPIENTS_ELEMENT || --Required
                                        '</Order>' ||
--                                        '<SubmitOrder>' || --Required
--                                            'boolean' ||
--                                        '</SubmitOrder>' ||
--true => create and submit; false => create but leave it unsubmitted
--                                        '<DeleteOrderOnError>' || --Required
--                                            'boolean' ||
--                                        '</DeleteOrderOnError>' ||
--true => delete if error; false => leave it unsubmitted if error
                                    '</CreateOrder>';
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'BUILD_CREATE_ORDER_REQUEST_XML ' || SUBSTR(SQLERRM,1,500) || ' IN OTHERS ' );
END BUILD_CREATE_ORDER_REQUEST_XML;

PROCEDURE CREATE_DEPOSIT_TICKET_ORDER( 
/******************************************************************************
This procedure is intended to create an order via RSA Web Service

Created : 08/03/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
    IN_DEP_TICK_REC  IN     BANK_DEP_TICK%ROWTYPE)
IS
    V_CREATE_ORDER_REQUEST_XML CLOB;
    PATH        	             VARCHAR2(50) := 'BANKING_DATA_FILES';
    BANK_DEPOSIT_IP_FILE_NM    VARCHAR2(50) := 'DEPOSIT_TICKET_';
    BANK_DEPOSIT_INPUT_FILE  UTL_FILE.FILE_TYPE;
BEGIN
    BUILD_CREATE_ORDER_REQUEST_XML(IN_DEP_TICK_REC, V_CREATE_ORDER_REQUEST_XML);
    --DBMS_OUTPUT.PUT_LINE(V_CREATE_ORDER_REQUEST_XML);
    IF V_CREATE_ORDER_REQUEST_XML <> EMPTY_CLOB() THEN
        BANK_DEPOSIT_INPUT_FILE := UTL_FILE.FOPEN (PATH
                                            ,BANK_DEPOSIT_IP_FILE_NM ||IN_DEP_TICK_REC.COST_CENTER_CODE||'.xml'
                                            ,'W' --BINARY
                                            ,32767);
        UTL_FILE.PUT_LINE(BANK_DEPOSIT_INPUT_FILE, V_CREATE_ORDER_REQUEST_XML, TRUE);
        UTL_FILE.FCLOSE(BANK_DEPOSIT_INPUT_FILE);
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CREATE_DEPOSIT_TICKET_ORDER ' || SUBSTR(SQLERRM,1,500) || ' IN OTHERS ' );
END CREATE_DEPOSIT_TICKET_ORDER;

PROCEDURE BLD_CRT_BAG_ODR_DOCS_ELEMENT( 
/******************************************************************************
This procedure is intended to build create bag order documents element

Created : 09/28/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
    IN_DEP_BAG_TICK_REC       IN     BANK_DEP_BAG_TICK%ROWTYPE,
    OUT_DOCUMENTS_ELEMENT        OUT CLOB)
IS
BEGIN
    OUT_DOCUMENTS_ELEMENT := '<Documents>';
    OUT_DOCUMENTS_ELEMENT := OUT_DOCUMENTS_ELEMENT ||
                                 '<Document referenceNumber="TBD" type="archives">' ||
                                     '<UniqueName>' ||
                                         '(BD-102)' || --need to get this clarified
                                     '</UniqueName>' ||
                                 '</Document>';
		OUT_DOCUMENTS_ELEMENT := OUT_DOCUMENTS_ELEMENT || '</Documents>';
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'BLD_CRT_BAG_ODR_DOCS_ELEMENT ' || SUBSTR(SQLERRM,1,500) || ' IN OTHERS ' );
END BLD_CRT_BAG_ODR_DOCS_ELEMENT;

PROCEDURE BLD_CRT_BAG_ORD_RCPTS_ELEMENT( 
/******************************************************************************
This procedure is intended to build create bag order recipients element

Created : 09/28/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
    IN_DEP_BAG_TICK_REC        IN     BANK_DEP_BAG_TICK%ROWTYPE,
    OUT_RECIPIENTS_ELEMENT        OUT CLOB)
IS
    V_ADDRESS_ELEMENT       CLOB;
BEGIN
    BLD_CRT_ORD_ADDRESS_ELEMENT(IN_DEP_BAG_TICK_REC.COST_CENTER_CODE, V_ADDRESS_ELEMENT);
    OUT_RECIPIENTS_ELEMENT := '<Recipients>';
    --Should be a loop
    OUT_RECIPIENTS_ELEMENT := OUT_RECIPIENTS_ELEMENT || 
                                  '<Recipient>' ||
                                      '<ShippingMethod>' || --Required
                                          'Best Method' ||
                                      '</ShippingMethod>' ||
                                      V_ADDRESS_ELEMENT || --Required
                                      '<RecipientDocuments>' || --Required
                                          --Below tag can be multiple
                                          '<RecipientDocument documentReferenceNumber="TBD">' || --documentReferenceNumber - Required
                                              '<Quantity>' ||
                                                  1 || --default is 1, need to check with Pat/Lynda
                                              '</Quantity>' || --Required
                                          '</RecipientDocument>' ||
                                      '</RecipientDocuments>' ||
--                                      '<TrackingNumber>' ||
--                                         'string' ||
--                                     '</TrackingNumber>' ||
--                                      '<Instructions>' ||
--                                         'string' ||
--                                     '</Instructions>' ||
                                  '</Recipient>';
    OUT_RECIPIENTS_ELEMENT := OUT_RECIPIENTS_ELEMENT || '</Recipients>';
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'BLD_CRT_BAG_ORD_RCPTS_ELEMENT ' || SUBSTR(SQLERRM,1,500) || ' IN OTHERS ' );
END BLD_CRT_BAG_ORD_RCPTS_ELEMENT;

PROCEDURE BUILD_CREATE_BAG_ORDR_RQST_XML( 
/******************************************************************************
This procedure is intended to build create bag order request xml

Created : 09/28/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
    IN_DEP_BAG_TICK_REC              IN     BANK_DEP_BAG_TICK%ROWTYPE,
    IN_USER_ID                       IN     VARCHAR2,
    OUT_CREATE_BAG_ORDER_RQST_XML       OUT CLOB)
IS
    V_CREATE_BAG_ORDER_REQUEST_XML CLOB;
    V_BILLING_ELEMENT              CLOB;
    V_DOCUMENTS_ELEMENT            CLOB;
    V_RECIPIENTS_ELEMENT           CLOB;
BEGIN
    BLD_CRT_ORD_BILLING_ELEMENT(IN_DEP_BAG_TICK_REC.COST_CENTER_CODE, V_BILLING_ELEMENT);
    BLD_CRT_BAG_ODR_DOCS_ELEMENT(IN_DEP_BAG_TICK_REC, V_DOCUMENTS_ELEMENT);
    BLD_CRT_BAG_ORD_RCPTS_ELEMENT(IN_DEP_BAG_TICK_REC, V_RECIPIENTS_ELEMENT);
    OUT_CREATE_BAG_ORDER_RQST_XML := '<?xml version="1.0" encoding="UTF-8"?>' ||
                                    '<CreateOrder xmlns="http://www.rocsoft.com/services/order/types"  xmlns:rsast="http://www.rocsoft.com/services/types">' ||
--xmlns=http://www.xxxx.com/services/order/types  xmlns:rsast=http://www.xxxx.com/services/types>
--                                        '<SharedKey>' ||
--                                            'string' ||
--                                        '</SharedKey>' ||
--If supplied must match with the value set in WebCRD and must be the first child of CreateOrder
--If value/element is not supplied operation is identical to suplpying blank password
--                                        '<Locale>' ||
--                                            'string' ||
--                                        '</Locale>' ||
--If not specified WebCRD system default locale is used
                                        '<Order>' || --Required
                                            '<OrderName>' || --Required
                                                'Deposit Bags - Store ' ||
                                                            SUBSTR(IN_DEP_BAG_TICK_REC.COST_CENTER_CODE, 3) ||
                                                            ' - ' ||
                                                            TO_CHAR(IN_DEP_BAG_TICK_REC.EFFECTIVE_DATE, 'MM-DD-RR') ||
                                            '</OrderName>' ||
--if userDefault="true", WebCRD generated the order name
                                            '<OrderPlacer>' || --Required
                                                IN_USER_ID || --need user name as input
                                            '</OrderPlacer>' ||
--WebCRD user ID of order placer (or) MySherwin User ID of Store Manager
                                            '<OrderPlacerDomain>' ||
                                                'LDAP' ||
                                            '</OrderPlacerDomain>' ||
--LDAP => single-server LDAP authentication, default=Local => WebCRD authentication
                                            '<Site useDefault="true"></Site>' || --Required
                                            '<DueDateTime>' || --Required
                                                NVL(NULL, TRUNC(SYSDATE + 5)) || --default order date + 5
                                            '</DueDateTime>' ||
--                                            '<Note>' ||
--                                                'string' ||
--                                            '</Note>' ||
                                            V_BILLING_ELEMENT || --Required
--                                            '<ExternalOrderId>' ||
--                                                'string' ||
--                                            '</ExternalOrderId>' ||
--                                            '<ExternalInfo>' ||
--                                                'string' ||
--                                            '</ExternalInfo>' ||
                                            V_DOCUMENTS_ELEMENT || --Required
                                            V_RECIPIENTS_ELEMENT || --Required
                                        '</Order>' ||
--                                        '<SubmitOrder>' || --Required
--                                            'boolean' ||
--                                        '</SubmitOrder>' ||
--true => create and submit; false => create but leave it unsubmitted
--                                        '<DeleteOrderOnError>' || --Required
--                                            'boolean' ||
--                                        '</DeleteOrderOnError>' ||
--true => delete if error; false => leave it unsubmitted if error
                                    '</CreateOrder>';
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'BUILD_CREATE_BAG_ORDR_RQST_XML ' || SUBSTR(SQLERRM,1,500) || ' IN OTHERS ' );
END BUILD_CREATE_BAG_ORDR_RQST_XML;

PROCEDURE CREATE_DEPOSIT_BAG_ORDER( 
/******************************************************************************
This procedure is intended to create an bag order via RSA Web Service

Created : 09/28/2015 jxc517 CCN Project....
Changed : 
*******************************************************************************/
    IN_DEP_BAG_TICK_REC  IN     BANK_DEP_BAG_TICK%ROWTYPE,
    IN_USER_ID           IN     VARCHAR2)
IS
    V_CREATE_BAG_ORDER_REQUEST_XML CLOB;
    PATH        	                 VARCHAR2(50) := 'BANKING_DATA_FILES';
    BANK_DEPOSIT_IP_FILE_NM        VARCHAR2(50) := 'DEPOSIT_BAG_';
    BANK_DEPOSIT_INPUT_FILE        UTL_FILE.FILE_TYPE;
BEGIN
    BUILD_CREATE_BAG_ORDR_RQST_XML(IN_DEP_BAG_TICK_REC,IN_USER_ID, V_CREATE_BAG_ORDER_REQUEST_XML);
    --DBMS_OUTPUT.PUT_LINE(V_CREATE_BAG_ORDER_REQUEST_XML);
    IF V_CREATE_BAG_ORDER_REQUEST_XML <> EMPTY_CLOB() THEN
        BANK_DEPOSIT_INPUT_FILE := UTL_FILE.FOPEN (PATH
                                            ,BANK_DEPOSIT_IP_FILE_NM ||IN_DEP_BAG_TICK_REC.COST_CENTER_CODE||'.xml'
                                            ,'W' --BINARY
                                            ,32767);
        UTL_FILE.PUT_LINE(BANK_DEPOSIT_INPUT_FILE, V_CREATE_BAG_ORDER_REQUEST_XML, TRUE);
        UTL_FILE.FCLOSE(BANK_DEPOSIT_INPUT_FILE);
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        ERRPKG.RAISE_ERR(SQLCODE, 'CREATE_DEPOSIT_BAG_ORDER ' || SUBSTR(SQLERRM,1,500) || ' IN OTHERS ' );
END CREATE_DEPOSIT_BAG_ORDER;

END RSA_WEB_SERVICES_PKG;