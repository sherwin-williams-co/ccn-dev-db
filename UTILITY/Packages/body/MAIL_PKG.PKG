create or replace PACKAGE BODY mail_pkg AS

PROCEDURE WRITE_CLOB(
/******************************************************************************
This procedure will create file on server and dump the passed BLOB data Into the file created

IN_CONNECTION - The connection string to write/attach the email to
IN_CLOB       - The attachment data

created : 06/03/2015 jxc517 CCN Project....
Modified: 
******************************************************************************/
IN_OUT_CONNECTION  IN OUT   UTL_SMTP.connection,
IN_CLOB            IN       CLOB)
IS
    -- Define output file directory
    V_LENGTH          NUMBER := DBMS_LOB.GETLENGTH(IN_CLOB);
    V_START           NUMBER := 1;
    V_BYTE_LENGTH     NUMBER := 32000;
    V_TEMP_LENGTH     NUMBER;
    V_TEMP_CLOB       CLOB;
BEGIN
    -- Save blob length in temporary variable
    V_TEMP_LENGTH := V_LENGTH;
    
    IF V_LENGTH < 32760 THEN
        UTL_SMTP.write_data(IN_OUT_CONNECTION, IN_CLOB);
    ELSE -- write in pieces
        V_START := 1;
        WHILE V_START < V_LENGTH AND V_BYTE_LENGTH > 0 LOOP
            DBMS_LOB.READ(IN_CLOB,
                          V_BYTE_LENGTH,
                          V_START,
                          V_TEMP_CLOB);
            UTL_SMTP.write_data(IN_OUT_CONNECTION, V_TEMP_CLOB);
            -- Set the start position for the next cut
            V_START       := V_START + V_BYTE_LENGTH;
            -- Set the end position if less than 32000 bytes
            V_TEMP_LENGTH := V_TEMP_LENGTH - V_BYTE_LENGTH;
            IF V_TEMP_LENGTH < 32000 THEN
                V_BYTE_LENGTH := V_TEMP_LENGTH;
            END IF;
        END LOOP;
    END IF;   
END WRITE_CLOB;

PROCEDURE SEND_MAIL( 
/**********************************************************
SEND_MAIL

  This procedure will send emails based on the MAIL_CATEGORY of the mail
  Currently we have below categories:
                    INIT_LOAD_START
                    INIT_LOAD_END
                    HIER_LOAD_START
                    HIER_LOAD_END
                    STOP_JBOSS
                    START_JBOSS
                    INCOMPLETE_CC
                    ADD_TERMINAL
for more info please refer to the documentation on mail_pkg

IN_MAIL_CATEGORY  - Input MAIL CATEGORY for which email needs to be sent
IN_TERMINL_NUMBER - The Terminal Number being added
IN_COST_CENTER_CD - The Cost Center for which the terminal number was added to
IN_CLOB           - The list of Hierarchy territory cost center transfer

created : 03/03/2013 sxh487 CCN Project....
Updated : 09/18/2014 nxk
          02/10/2015 jxc517 CCN Project Team.....
                     Added JOB_CODE_TRANSALATION to send emails for missing JOB CODE combinations
		    : 04/08/2015 nxk / axk326 CCN Project Team....
		                 Added mail category for sending Canadian Automotive and Non Automotive files
        : 04/22/2015 sxt410 CCN Project Team.....
                     Added mail category TAXWARE_WARNING_MESSAGE to send an email 
                     when Taxware Zip code doesn't match with Address Zip code.
        : 09/02/2015 nxk927 CCN Project Team....
                    added mail categories for the SD 1099 report
                    1) SD_1099_NO_VNDR_ON_BNK_TP_RPRT
                    2) SD_1099_MTCHD_PRCSNG_RPRT
                    3) SD_1099_NO_MTCHD_VENDOR_RPRT
                    4) SD_1099_TXPYR_ID_AP_TRNS_CRT
        : 01/11/2016 jxc517 CCN Project Team....
                    added mail categories for the SD G/L Unbooked report
                    1) SD_GAINLOSS_UNBOOKED_RPRT
	: 02/19/2016  mxr916 CCN Project Team....
                      added mail categories for the SD 1099 report
                      1) STORE_DRAFT_QRTLY_REPORT
**********************************************************/
IN_MAIL_CATEGORY VARCHAR2,
IN_TERMINL_NUMBER IN NUMBER DEFAULT NULL,
IN_COST_CENTER_CD IN VARCHAR2 DEFAULT NULL,
IN_CLOB IN CLOB DEFAULT NULL
)

IS
   v_mail_host   VARCHAR2 (30) := 'smtp.sherwin.com'; --'sthq.sherwin.com';
   v_mail_conn   UTL_SMTP.connection;
   v_recipient   VARCHAR2(32000);
   v_index       number;
   crlf          VARCHAR2 (2) := CHR (13) || CHR (10);
   
   l_boundary1    VARCHAR2(50) := '-----AABCDEFBBCCC0123456789DE1';
   l_boundary     VARCHAR2(50) := '-----AABCDEFBBCCC0123456789DE';
   v_add_src      VARCHAR2(4000);
   VTOLIST        VARCHAR2(4000);
   v_addr         VARCHAR2(4000);  
   SLEN           NUMBER := 1;
   V_INCOMPLETE_CC_COUNT NUMBER := 0;
   V_WRONG_CAT_COUNT NUMBER := 0;
   V_message     VARCHAR2(4000);
   IN_ENVIRONMENT VARCHAR2(100);
BEGIN

    SELECT sys_context('USERENV','DB_NAME') INTO IN_ENVIRONMENT FROM dual;
    IF IN_ENVIRONMENT = 'STCCND' THEN
        IN_ENVIRONMENT := 'Development : ';
    ELSIF IN_ENVIRONMENT = 'STCCNT' THEN
        IN_ENVIRONMENT := 'Test : ';
    ELSIF IN_ENVIRONMENT = 'STCCNQ' THEN
        IN_ENVIRONMENT := 'QA : ';
    ELSIF IN_ENVIRONMENT = 'STCCNP' THEN
        IN_ENVIRONMENT := 'Production : ';
    ELSE
        IN_ENVIRONMENT := 'Unknown : ';
    END IF;
    
    --Loop through all the emails for this passed category code
    --select the email IDs of all the recipients in the group based on the MAIL_CATEGORY
    --ex: MAIL_CATEGORY = 'INCOMPLETE_CC' has a GROUP_ID of 5
     FOR REC IN (SELECT A.*, B.MAIL_ID FROM MAILING_DETAILS A, MAILING_GROUP B 
                  WHERE A.MAIL_CATEGORY = IN_MAIL_CATEGORY
                    AND A.group_id = b.group_id) LOOP

      --Don't send an email if there are no incomeplete cost centers
      IF IN_MAIL_CATEGORY = 'INCOMPLETE_CC' THEN
         BEGIN
            SELECT COUNT(*) INTO V_INCOMPLETE_CC_COUNT
              FROM COST_CENTER
             WHERE GLOBAL_HIERARCHY_IND <> 'Y';
         EXCEPTION
            WHEN OTHERS THEN
               V_INCOMPLETE_CC_COUNT := 0;
         END;
         IF V_INCOMPLETE_CC_COUNT = 0 THEN
            EXIT;
         END IF;
        ELSIF IN_MAIL_CATEGORY = 'WRONG_CAT' THEN
         BEGIN
            SELECT COUNT(T.username) INTO V_WRONG_CAT_COUNT
              FROM COST_CENTER C, TERR_PH_UPDATE T--TERRITORY_PH_UP t
             WHERE UPPER(substr(T.username, 2,4)) = substr(C.cost_center_code, 3,4)
             AND c.CATEGORY <> 'T';
         EXCEPTION
            WHEN OTHERS THEN
               V_WRONG_CAT_COUNT := 0;
         END;
         IF V_WRONG_CAT_COUNT = 0 THEN
            EXIT;
         END IF;
      END IF;            
        v_mail_conn := UTL_SMTP.open_connection (v_mail_host, 25);
        UTL_SMTP.helo (v_mail_conn, v_mail_host);
        UTL_SMTP.mail (v_mail_conn, rec.FROM_P);

            IF(instr(rec.mail_id,';') = 0) THEN
         UTL_SMTP.RCPT(V_MAIL_CONN, REC.MAIL_ID);
                 VTOLIST := REC.MAIL_ID;
            ELSE
        V_ADD_SRC := REC.MAIL_ID || ';';
        WHILE(instr(v_add_src,';',slen) > 0) LOOP
                      v_addr := substr(v_add_src, slen, instr(substr(v_add_src, slen),';')-1);
              slen := slen+instr(substr(v_add_src, slen),';');
                      vTolist := vTolist || ', ' || v_addr;
                      utl_smtp.rcpt(v_mail_conn, v_addr);
                END LOOP;

        END IF;
    
      IF IN_MAIL_CATEGORY = 'ADD_TERMINAL' THEN
         V_MESSAGE := REPLACE(REPLACE(REC.MESSAGE, 'XXXXX', IN_TERMINL_NUMBER), 'CCCCCC' ,IN_COST_CENTER_CD);
      ELSIF IN_MAIL_CATEGORY = 'TAXWARE_WARNING_MESSAGE' THEN
         V_MESSAGE := REPLACE(REC.MESSAGE, 'CCCCC', IN_COST_CENTER_CD);
      ELSIF IN_MAIL_CATEGORY = 'DEPOSIT_TICKET_FILE' THEN
         V_MESSAGE := REPLACE(REC.MESSAGE, 'CCCCC', REPLACE(REPLACE(IN_COST_CENTER_CD,'.txt', ''),'DEPOSIT_TICKET_',''));
      ELSE
         V_MESSAGE := REC.MESSAGE;
      END IF;
      
      UTL_SMTP.open_data(v_mail_conn);
      --Set the required message paremeters
      UTL_SMTP.write_data(v_mail_conn, 'Date: ' || TO_CHAR(SYSDATE, 'DD-MON-YYYY HH24:MI:SS') || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'To: ' || vTolist || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'From: ' || rec.FROM_P || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'Subject: ' || IN_ENVIRONMENT || rec.SUBJECT || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'MIME-Version: 1.0' || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'Content-Type: multipart/mixed; boundary="' || l_boundary || '"' || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);

      --Boundary should be set for this email body
      UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary1 || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'Content-Type: text/plain' || UTL_TCP.crlf);
      UTL_SMTP.write_data(v_mail_conn, 'Hi All' || crlf || crlf
                                       || V_MESSAGE  || CRLF || CRLF
                                       || 'Please let us know if there are any issues.' || CRLF || CRLF
                                       || REC.SIGNATURE || CRLF);
    
      IF IN_MAIL_CATEGORY = 'INCOMPLETE_CC' THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Type: text/plain' || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || IN_MAIL_CATEGORY || '.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Header fot the excel that is being sent
         UTL_SMTP.write_data(v_mail_conn, 'Cost Center Number, Cost Center Name,' ||  UTL_TCP.crlf);
         --Content for the excel that is being sent 
         FOR rec IN (SELECT COST_CENTER_CODE, COST_CENTER_NAME FROM COST_CENTER WHERE GLOBAL_HIERARCHY_IND <> 'Y') LOOP
            UTL_SMTP.write_data(v_mail_conn, rec.COST_CENTER_CODE || ',' || rec.COST_CENTER_NAME || ',' || UTL_TCP.crlf);
         END LOOP;
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      ELSIF IN_MAIL_CATEGORY = 'WRONG_CAT' THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Type: text/plain' || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || IN_MAIL_CATEGORY ||'.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Header fot the excel that is being sent
         UTL_SMTP.write_data(v_mail_conn, 'Cost Center Number, Category, UserName' ||  UTL_TCP.crlf);
         --Content for the excel that is being sent 
         FOR rec IN (SELECT UPPER(substr(T.username, 2,4)) USERNAME,
                            C.CATEGORY AS CATEGORY,
                            C.COST_CENTER_CODE
                       FROM TERR_PH_UPDATE T, cost_center C
                      WHERE  UPPER(substr(T.username, 2,4)) = substr(C.cost_center_code, 3,4)
                        AND c.CATEGORY <> 'T') LOOP
            UTL_SMTP.write_data(v_mail_conn, rec.COST_CENTER_CODE || ',' || rec.CATEGORY || ',' || rec.USERNAME || ',' || UTL_TCP.crlf);
         END LOOP;
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      ELSIF IN_MAIL_CATEGORY IN ('HIER_TRNSFR_TERRITORY', 'HIER_TRNSFR_DAD_CHNG_TERRITORY') THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Type: text/plain' || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || IN_MAIL_CATEGORY || '.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Header fot the excel that is being sent
         UTL_SMTP.write_data(v_mail_conn, 'From Hierarchy, To Hierarchy, Cost Center Code' ||  UTL_TCP.crlf);
         --Content for the excel that is being sent 
         UTL_SMTP.write_data(v_mail_conn, IN_CLOB || ',' || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      ELSIF IN_MAIL_CATEGORY IN ('SD_PAIDS_LOAD_ERRORS', 'SD_DRFT_LOAD_ERRORS') THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Type: text/plain' || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || IN_MAIL_CATEGORY ||'.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Header fot the excel that is being sent
         UTL_SMTP.write_data(v_mail_conn, 'Cost Center Code, Error' ||  UTL_TCP.crlf);
         --Content for the excel that is being sent 
         UTL_SMTP.write_data(v_mail_conn, IN_CLOB || ',' || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      ELSIF IN_MAIL_CATEGORY IN ('SD_DAILY_RECONCILIATION') THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Type: text/plain' || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || IN_MAIL_CATEGORY || '_' || TO_CHAR(TRUNC(SYSDATE),'DD_MON_RRRR') ||'.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Header fot the excel that is being sent
         UTL_SMTP.write_data(v_mail_conn, 'Serial #, Calculated Item Name, Calculated Item Value' ||  UTL_TCP.crlf);
         --Content for the excel that is being sent 
         UTL_SMTP.write_data(v_mail_conn, IN_CLOB || ',' || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      ELSIF IN_MAIL_CATEGORY IN ('JOB_CODE_TRANSALATION') THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Type: text/plain' || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || IN_MAIL_CATEGORY || '.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Header fot the excel that is being sent
         UTL_SMTP.write_data(v_mail_conn, 'Job Title, Job Family, Job Type' ||  UTL_TCP.crlf);
         --Content for the excel that is being sent 
         UTL_SMTP.write_data(v_mail_conn, IN_CLOB || ',' || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      ELSIF IN_MAIL_CATEGORY IN ('CAN_NON_AUTO_DRAFT') THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, 'Content-Type: text/plain' || UTL_TCP.CRLF);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || 'DLY_DRAFT_CAN_NAM'|| TO_CHAR(TRUNC(SYSDATE),'MMDDRRRR') || '"' || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, IN_CLOB || UTL_TCP.CRLF);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      ELSIF IN_MAIL_CATEGORY IN ('CAN_AUTO_DRAFT') THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, 'Content-Type: text/plain' || UTL_TCP.CRLF);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || 'DLY_DRAFT_CAN_AM'|| TO_CHAR(TRUNC(SYSDATE),'MMDDRRRR') || '"' || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, IN_CLOB || UTL_TCP.CRLF);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      ELSIF IN_MAIL_CATEGORY IN ('DAD_COMPARISON_FILE') THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Type: text/plain' || UTL_TCP.crlf);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || 'export_' || replace(to_char(trunc(sysdate),'dd-Mon-yyyy'),'-', '') || '.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Header fot the excel that is being sent
         UTL_SMTP.write_data(v_mail_conn, 'COST_CENTER_CODE, DAD_GIVEN, DAD_ACTUAL, DAD, POLLING_GIVEN, POLLING_ACTUAL, POLLING_STATUS, CURRENCY_GIVEN, CURRENCY_ACTUAL, CURRENCY_CODE, ACTIVE_INACTIVE, CATEGORY, LEGACY_DIVISION_GIVEN, LEGACY_DIVISION_ACTUAL, LEGACY_DIVISION_STATUS' ||  UTL_TCP.crlf);
         --Content for the excel that is being sent
         WRITE_CLOB(v_mail_conn, IN_CLOB);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      ELSIF IN_MAIL_CATEGORY IN ('OUTSTANDING_DRAFT_EXC_C101', 'OUTSTANDING_DRAFT_EXC_C400') THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, 'Content-Type: text/plain' || UTL_TCP.CRLF);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || IN_MAIL_CATEGORY  || '.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Header fot the excel that is being sent
         UTL_SMTP.write_data(v_mail_conn, 'COST_CENTER_CODE,STORE_NUMBER,CHECK_SERIAL_NUMBER,TRANSACTION_DATE,TERMINAL_NUMBER,TRANSACTION_NUMBER,CUSTOMER_ACCOUNT_NUMBER,CUSTOMER_JOB_NUMBER,PAYEE_NAME,NET_AMOUNT,POS_TRANSACTION_CODE' ||  UTL_TCP.crlf);
         --Content for the excel that is being sent
         WRITE_CLOB(v_mail_conn, IN_CLOB);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      ELSIF IN_MAIL_CATEGORY IN ('SD_1099_NO_VNDR_ON_BNK_TP_RPRT', 'SD_1099_MTCHD_PRCSNG_RPRT','SD_1099_NO_MTCHD_VENDOR_RPRT', 'SD_1099_TXPYR_ID_AP_TRNS_CRT', 'STORE_DRAFT_QRTLY_REPORT') THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, 'Content-Type: text/plain' || UTL_TCP.CRLF);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || IN_MAIL_CATEGORY  || '.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Content for the excel that is being sent
         WRITE_CLOB(v_mail_conn, IN_CLOB);
      ELSIF IN_MAIL_CATEGORY IN ('SD_GAINLOSS_UNBOOKED_RPRT') THEN
         --Boundary should be set for this email to attach an excel
         UTL_SMTP.write_data(v_mail_conn, '--' || l_boundary || UTL_TCP.crlf);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, 'Content-Type: text/plain' || UTL_TCP.CRLF);
         UTL_SMTP.write_data(v_mail_conn, 'Content-Disposition: attachment; filename="' || IN_MAIL_CATEGORY  || '.csv' || '"' || UTL_TCP.crlf);
         
         UTL_SMTP.write_data(v_mail_conn, UTL_TCP.crlf);
         --Header fot the excel that is being sent
         UTL_SMTP.write_data(v_mail_conn, 'COST_CENTER_CODE, PL_GAIL_LOSS, BOOK_DATE' ||  UTL_TCP.crlf);
         --Content for the excel that is being sent
         WRITE_CLOB(v_mail_conn, IN_CLOB);
         UTL_SMTP.WRITE_DATA(V_MAIL_CONN, '--' || L_BOUNDARY || '--' || UTL_TCP.CRLF);
      END IF ;
      UTL_SMTP.close_data(v_mail_conn);  
      UTL_SMTP.quit (v_mail_conn);
   END LOOP;

EXCEPTION
   WHEN UTL_SMTP.transient_error OR UTL_SMTP.permanent_error
   THEN
      raise_application_error (-20000, 'Unable to send mail: ' || SQLERRM);
END SEND_MAIL;


END mail_pkg;